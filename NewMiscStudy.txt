<latex>~\\<br>Consider the coalgebra \emph{next} (1.4) given on page 9, right. Consider the following statement:\\~\\<br>The coalgebra \emph{next} : $A^\infty \to \{ \bot \} \cup A \times A^\infty$ from (1.4) is final among coalgebras of this type: for an arbitrary coalgebra $c : S \to \{ \bot \} \cup (A \times S)$ on a set $S$ there is a unique `behavior' function $beh_c : S \to A^\infty$ which is a homomorphism of coalgebras. That is, for each $x \in S$, bot<br>\begin{itemize}<br>\item if $c(x) = \bot$ then $\mathit{next}(beh_c(x)) = \bot$<br>\item if $c(x) = (a, x')$ then $\mathit{next}(beh_c(x)) = (a, beh_c(x'))$<br>\end{itemize}<br>Prove or disprove.<br></latex>	pg 10 / left, prop 1.2.1<br><br>
<latex>~\\<br>Let $A = \{ 0,1,2,3,4,5,6,7,8,9 \}$. Define a coalgebra of type $\mathbb R \to (A, \mathbb R)$ sending a real number to its decimal representation in $A^{\infty}$.<br></latex>	pg 10 bottom right / pg 11 top left<br>
<latex>~\\<br>Explain ``transition notation'' for reasoning about coalgebras: with respect to a coalgebra $c : S \to \{ \bot \} \cup (A \times S)$, for $x \in S$, what does $x \not \to$ mean? What does $x \overset{a}{\to} x'$ mean?<br></latex>	pg 11, bottom right corner (1.5)<br>*also read* pg 12, top left, which makes an interesting analogy to operational semantics.<br>
<latex>~\\<br>Use inference rules to define a function \emph{evens} which maps a colist $A^\infty$ to a colist of every other element (specifically, the even elements of the argument).<br></latex>	pg 12, bottom left.<br>
<latex>~\\<br>Define an function \emph{odds}, for taking the odd elements of a colist in $A^\infty$. <br>Also define functions \emph{evens} and \emph{tail}, having the obvious definitions. Prove that<br>$odds = evens \circ tail$ using coinduction.<br></latex>	pg 13 left, lemma 1.2.4<br><br>
<latex>~\\<br>Consider a function $merge : A^\infty \times A^\infty \to A^\infty$ defined using the following inference rules.<br>\begin{mathpar}<br>\inferrule<br>  {\sigma \not \to \\ \tau \not \to}<br>  {\mathit{merge}(\sigma,\tau) \not \to}<br>\and<br>\inferrule<br>  {\sigma \not \to \\ \tau \overset{a}{\to} \tau'}<br>  {\mathit{merge}(\sigma,\tau) \overset{a}{\to} merge(\sigma,\tau')}<br>\and<br>\inferrule<br>  {\sigma \overset{a}{\to} \sigma'}<br>  {\mathit{merge}(\sigma,\tau) \overset{a}{\to} merge(\tau,\sigma')}<br>\end{mathpar}<br>Provide an equivalent definition using coinduction.<br></latex>	remember that a coinductive definition a domain coalgebra paired with a coalgebra morphism into the final coalgebra.<br>pg 13, bottom right<br>
<latex>~\\<br>What do the symbols $\bigcirc_c$, $\square_c$, and $\lozenge_c$ mean?<br></latex>	pg 15, bottom left<br>
<latex>~\\<br>For a sequence coalgebra $c : S \to \{ \bot \} \cup (A \times S)$ with a predicate $P \subseteq S$ on its state space, how do we define the predicate $\bigcirc P \subseteq S$?<br></latex>	pg 15, top right<br>
<latex>~\\<br>What does it mean for a predicate P on a coalgebra state space to be an \emph{invariant}?<br></latex>	pg 15, top right<br>
<latex>~\\<br>Let $P \subseteq S$ be an arbitrary predicate on the state space $S$ of a sequence coalgebra. How do we define the predicate $\square P$?<br></latex>	pg 15, bottom right<br>
<latex>~\\<br>Let $P \subseteq S$ be an arbitrary predicate on the state space $S$ of a sequence coalgebra. How do we define the predicate $\lozenge P$?<br></latex>	pg 16, top left<br>
<latex>~\\<br>Let $c : S \to \{ \bot \} \cup (A \times S)$ be an arbitrary sequence coalgebra. Let $c^n : S \to \{ \bot \} \cup (A \times S)$ be its $n$th iteration, as defined on page 10, bottom left corner. Consider the following statement:\\~\\<br>For $P \subseteq S$, $x \in S$,<br>$$(\lozenge P)(x) \Leftrightarrow P(x) \vee (\exists n \in \mathbb N. \forall a \in A. \exists y \in S. c^n(x) = (a,y) \wedge P(y))$$<br>Prove or disprove.<br></latex>	pg 16 left, lemma 1.3.3<br>todo: add impostor?<br>
Read Example 1.3.4 on page 16<br>	<br>
<latex>~\\<br>We define $\mathit{Occ}(a) \doteq \lozenge(\{ y \in S \mid \exists y' \in S. c(y) = a(y'))$, where $c$ is a $A$-sequence coalgebra with state space $S$.<br>Look at the \emph{merge} function defined on page 15, bottom right. Consider for an element $a \in A$ the occurrence predicate $a \in (-) = Occ(a) \subseteq A^\infty$, for the final coalgebra $\mathit{next} : A^\infty \overset{\cong}{\to} \{ \bot \} \cup (A \times A^\infty)$ from proposition 1.2.1 on page 10 left. Consider the following statement:\\~\\<br>$$a \in \mathit{merge}(\sigma,\tau) \Leftrightarrow a\in \sigma \vee a\in \tau$$<br>Prove or disprove.<br></latex>	true. pg 16, bottom right<br>
<latex>~\\<br>How do we represent standard object-oriented classes as coalgebras? Let $S$ be the state space for such a ``coalgebraic class''. How do we define the next-time operator $\bigcirc$ on predicates of this state space?<br>What is a \emph{class invariant}? A \emph{safety property}? A \emph{liveness property}?<br></latex>	pg 17, bottom left / top right<br>
<latex>~\\<br>Provide the definition of the category $\mbf{SetsRel}$ of sets and relations.<br></latex>	pg 19 / top right<br>
<latex>~\\<br>Provide the definition of the `graph' functor $\mbf{Sets} \to \mbf{SetsRel}$.<br></latex>	pg 20 right / example 1.4.4 (4)<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category, with an endofunctor $F : \mathbb C \to \mathbb C$.<br>What is an $F$-coalgebra? What is a \emph{coalgebra structure}?<br></latex>	pg 21, def 1.4.5 (1)<br>
<latex>~\\<br>What is a \emph{coalgebra map}?<br></latex>	pg 21 left, def 1.4.5 (2)<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category and $F : \mathbb C \to \mathbb C$ an endofunctor. What does $\mbf{CoAlg}(F)$ denote?<br></latex>	pg 21 left, def 1.4.5 (3)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with finite coproducts $(0,+)$, and let $F$ be an arbitrary endofunctor $\mathbb C \to \mathbb C$. Consider the following statement:\\~\\ <br>The category $\mbf{CoAlg}(F)$ of $F$-coalgebras then also has finite coproducts.\\~\\<br>Prove or disprove.<br></latex>	true. pg 25 bottom right, prop 2.1.5.<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with products. What is the \emph{exponent} of two objects $X,Y \in \mathbb C$?<br></latex>	pg 27<br>
<latex>~\\<br>Given a set $X$, its powerset $\mathcal P(X)$ can be considered a \emph{complete boolean algebra}. What does this mean?<br></latex>	pg 27, top right<br>see also MiscStudy.pdf, pg 47 right
<latex>~\\<br>Given a relation $R$, what does $R^{\dagger}$ denote?<br></latex>	pg 27 right, "Reversal and composition are..."<br>
<latex>~\\<br>Explain how the relation reversal operator $(-)^{\dagger}$ can be used as a functor.<br></latex>	pg 27, bottom right.<br>
<latex>~\\<br>How is the powerset operator $X \mapsto \mathcal P(X)$ extended to a functor?<br></latex>	pg 27, bottom right "The powerset operator..."<br>
<latex>~\\<br>The standard powerset functor $\coprod_f$ and the \emph{inverse image} functor $f^{-1}$ are related in a special way. Explain.<br></latex>	pg 28 left, (2.15)
<latex>~\\<br>State the standard set-theoretic Axiom of Choice, and then give its categorical interpretation.<br></latex>	pg 28, right (top three paragraphs)<br>
<latex>~\\<br>Categorically, there is a ``dual version'' of the Axiom of Choice. State this axiom, and also explain why it is useful.<br></latex>	pg 28, right column.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is surjective, then so is $F(f) : F(X) \to F(Y)$.\\~\\<br>Prove or disprove.<br></latex>	pg 28 right, lemma 2.1.7 (1)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is injective, then so is $F(f) : F(X) \to F(Y)$.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! X must be non-empty!<br>pg 28, bottom right corner.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is injective and $X$ is non-empty, then $F(f) : F(X) \to F(Y)$ is also injective.\\~\\<br>Prove or disprove.<br></latex>	true. pg 28, bottom right, lemma 2.1.7 (2)<br>
<latex>~\\<br>Provide the definition for the collection SPF of \emph{simple polynomial functors}.<br></latex>	pg 30, right, def 2.2.1 (1)<br><br>Viewing (2.3) at the bottom left of pg 23 might also be helpful.<br>
<latex>~\\<br>Provide the definition of the class EPF of \emph{exponent polynomial functors}.<br></latex>	pg 31, top left (2)<br><br><br>
<latex>~\\<br>Provide the definition of the class KPF of \emph{Kripke polynomial functors}.<br></latex>	pg 31<br>
<latex>~\\<br>Provide the definition of the class KPF of \emph{Kripke polynomial functions}.<br></latex>	pg 31, left (3)<br><br>
What are the practical benefits that motivate the usage of EPF and KPF over SPF?	pg 31, left, "We notice that exponents..."<br><br>EPF is justified very well, but here's my guess:<br>EPF may be useful for finite automata whose edges consist of sequences of symbols
<latex>~\\<br>Letting $F_1$ and $F_2$ be polynomial functors, Jacobs uses the notation $F_1 + F_2$ as a shorthand. Explain.<br></latex>	pg 31, left "The coproducts that are used..."
<latex>~\\<br>Letting $F$ be a polynomial functor what does Jacobs use $F^{\star}$ to denote?<br></latex>	pg 31, left, "The coproducts that are used..."<br>
<latex>~\\<br>What is an \emph{arity}? What is an \emph{arity functor}?<br></latex>	pg 31, right, def 2.2.2.<br><br>
<latex>~\\<br>Read proposition 2.2.3 on pg 31-32. (can we make a better card from this?)<br></latex>	pg 31<br>
Read section 2.2.1 on page 32<br>	pg 32<br>
Read section 2.2.2 starting in the bottom right corner of pg 32	pg 32/33<br>
How can the notion of a deterministic finite automata (DFA), as described, for example, in Sipser's book, be represented as a coalgebra?	pg 33, section 2.2.3<br>
<latex>~\\<br>How does Jacobs define the notion of a \emph{deterministic automata} coalgebraically?<br></latex>	pg 34 left<br>
<latex>~\\<br>When discussing deterministic finite automata, Jacobs uses the notation ``$x \downarrow b$''. What does this notation mean? What does the notation ``$(x \downarrow b) \overset{a}{\to} (x' \downarrow b')$'' mean?<br></latex>	pg 34 left<br>
There is one notable difference between the standard computation-theoretic presentation of deterministic finite automata and the coalgebraic presentation. What is it?	The coalgebraic version (by default) uses infinite state spaces.<br>pg 34 left, "Often one considers automata with a finite state space..."<br>
<latex>~\\<br>Given a deterministic automaton $S \overset{\langle \delta, \epsilon \rangle}{\longrightarrow} S^A \times B$, how do we define the function $\delta^*$? What does the notation ``$x \overset{\sigma}{\longrightarrow}^* y$'' mean?<br></latex>	pg 34 right, (2.22)<br>
<latex>~\\<br>For a state $x$ in a deterministic automaton, of a coalgebra $S \to S^A \times B$, <br>how do we define the $beh(x) : A^{\star} \to B$? <br></latex>	pg 34 right, (2.23)<br><br>
<latex>~\\<br>Read pg 34 right, from ``The behavior $beh(x) : A^{\star} \to B$ of a state...'', down to the end.<br></latex>	pg 34<br>
<latex>~\\<br>Why are $S \to \mathcal P(S)^A$ and $S \to \mathcal P(A \times S)$ equivalent coalgebraic representations for non-deterministic automata?<br></latex>	pg 35 bottom left<br><br>
<latex>~\\<br>What is Jacobs' favored representation for nondeterministic automata?<br></latex>	<latex>~\\<br>$S \to \mathcal P(S)^A \times B$\\<br>pg 35 right, 2.24, see also the text directly above this definition<br></latex><br>
<latex>~\\<br>When discussing non-deterministic automata, Jacobs uses the notation ``$x \overset{a}{\not \to}$''. What does this notation mean?<br></latex>	pg 35, bottom right<br>
<latex>~\\<br>Give coalgebraic definitions for the following:<br><br>\begin{itemize}<br>\item unlabelled transition system (UTS)<br>\item labelled transition system (LTS)<br>\item Kripke structure <br>\end{itemize}<br><br></latex>	pg 36 left
<latex>~\\<br>Consider two deterministic automata $X \to X^A \times B$ and $Y \to Y^A \times B$ as coalgebras. Consider the following statement:\\~\\<br>A function $f : X \to Y$ is a homomorphism of coalgebras if and only if<br>\begin{itemize}<br>\item $x \downarrow b \Longrightarrow f(x) \downarrow b$<br>\item $x \overset{a}{\longrightarrow} x' \Longrightarrow f(x) \overset{a}{\longrightarrow} f(x')$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 36, top right corner, lemma 2.2.4 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Consider two non-deterministic automata $X \to \mathcal P(X)^A \times B$ and $Y \to \mathcal P(Y)^A \times B$. Consider the following statement:\\~\\<br>A function $f : X \to Y$ is a homomorphism of coalgebras if and only if<br>\begin{itemize}<br>\item $x \downarrow b \Longrightarrow f(x) \downarrow b$<br>\item $x \overset{a}{\longrightarrow} x' \Longrightarrow f(x) \overset{a}{\longrightarrow} f(x')$<br>\item $f(x) \overset{a}{\longrightarrow} y \Longrightarrow \exists x' \in X.~~f(x') = y \wedge x \overset{a}{\longrightarrow} x'$<br>\end{itemize} <br>Prove or disprove.<br></latex>	pg 36 right, lemma 2.2.4 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Give a coalgebraic definition of the notion of a \emph{context-free grammar}.<br></latex>	pg 36, right, section 2.2.5<br>
<latex>~\\<br>How can the notion of a \emph{Turing machine} be described coalgebraically?<br></latex>	pg 37
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category with an endofunctor $F : \mathbb C \to \mathbb C$. What is a \emph{final $F$-coalgebra}?<br></latex>	pg 40 left, def 2.3.1<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A final coalgebra, if it exists, is determined up to isomorphism.\\~\\<br>Prove or disprove.<br></latex>	pg 40, lemma 2.3.2, bottom left<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A final coalgebra $\zeta : Z \to F(Z)$ is necessarily an isomorphism $\zeta : Z \overset{\cong}{\to} F(Z)$.\\~\\<br>Prove or disprove.<br></latex>	pg 40<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The powerset functor $\mathcal P : \mbf{Sets} \to \mbf{Sets}$ does not have a final coalgebra.\\~\\<br>Prove or disprove.<br></latex>	true. pg 41, corollary 2.3.4.<br>
<latex>~\\<br>Fix two sets $A$ and $B$ and consider the polynomial functor $id^A \times B$ whose coalgebras are deterministic automata. Consider the following statement:\\~\\<br>The final coalgebra of this functor is given by the set of behavior functions $B^{A^*}$, with structure<br>$$B^{A^*} \overset{\zeta = \langle \zeta_1, \zeta_2 \rangle}{\longrightarrow} ((B^{A^*})^A \times B)$$<br>given by<br>$$\zeta_1(\varphi)(a) = \lambda \sigma \in A^*.~\varphi(a \cdot \sigma)~~~\text{and}~~~\zeta_2(\varphi) = \varphi(\langle \rangle)$$<br>Prove or disprove.<br></latex>	true. pg 41, prop 2.3.5<br>todo: add impostor?<br>
<latex>~\\<br>Recall the final coalgebra $B^{A^*} \overset{\cong}{\to} (B^{A^*})^A \times B$ of the deterministic automata functor $id^A \times B$. How do we ``instantiate'' this functor (and final coalgebra) to represent streams? When we set $B \doteq 2 = \{0,1\}$ the carrier set for the final coalgebra becomes $\mathcal P(A^*)$, the set of languages over the alphabet $A$. How is the final coalgebra defined? (Hint: recall the definition of the $a$-derivative of a language.)<br></latex>	pg 42, left (2) at top<br>
Read pg 42 left, example 2.3.7 (and note that the definition of a taylor series is given shortly after the term is mentioned). <br><br><br><br>	pg 42
<latex>~\\<br>Consider the following statement:\\~\\<br>Each finite Kripke polynomial functor $\mbf{Sets} \to \mbf{Sets}$ has a final coalgebra.\\~\\<br>True or false? (no need to attempt a proof at this point)<br></latex>	true. pg 42, thm 2.3.9.<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each Kripke polynomial functor $\mbf{Sets} \to \mbf{Sets}$ has a final coalgebra.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! see corollary 2.3.4 on pg 41 left.<br>
Read the definition of "Cantor space" on MiscStudy pg 2110, then read example 2.3.10 on pg 43.<br>	pg 43<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category, with an endofunctor $F : \mathbb C \to \mathbb C$. What is an $F$-algebra? What is a \emph{homomorphism of $F$-algebras}?<br></latex>	pg 45, def 2.4.1<br>
<latex>~\\<br>Let $b : F(X) \to X$ be an algebra. What is an \emph{interpretation map} for $b$?<br></latex>	pg 45, top right corner.<br>
<latex>~\\<br>What is a \emph{single-sorted signature}? What is an \emph{algebra for} a single-sorted signature?<br></latex>	pg 45, right, "The functor F in the above definition..."
<latex>~\\<br>Read pg 45, right, paragraph: ``A rule of thumb is...'' near bottom.<br></latex>	pg 45<br>
<latex>~\\<br>Final coalgebras can be viewed intuitively as ``pure behavior''. What is the intuitive way to view initial algebras?<br></latex>	pg 45, bottom right paragraph, "Initial algebras are special...", spills to pg 46<br><br>
Read example 2.4.2 on page 46.<br>	pg 46<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An initial algebra $F(A) \to A$ of a functor $F : \mathbb C \to \mathbb C$ is an isomorphism $F(A) \overset{\cong}{\to} A$ in $\mathbb C$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 47, left, lemma 2.4.3<br>todo: add impostor?<br>
<latex>~\\<br>What is the initial algebra of the functor $F(X) \doteq 1 + X$?<br></latex>	pg 47, left, example 2.4.4, read the entire example<br>
<latex>~\\<br>Consider the following induction rule:\\~\\<br>\inferrule<br>  {P(0) \\ \forall n \in \mathbb N. P(n) \longrightarrow P(n+1)}<br>  {\forall n \in \mathbb N. P(n)}\\~\\<br>Formulate this categorically, and argue its validity using initiality.<br></latex>	pg 47, right column, top<br>
<latex>~\\<br>A-labelled binary trees may be constructed from two operations:\\~\\<br>\begin{tabular}{ll}<br>nil & for the empty tree \\<br>node($b_1$,$a$,$b_2$) & for the tree constructed from subtrees $b_1$, $b_2$, and label $a \in A$<br>\end{tabular}\\~\\<br>Thus, the associated signature functor is $T(X) = 1 + (X \times A \times X)$. The initial algebra for this functor is denoted $\mathit{BinTree}(A)$. Suppose we want to define two functions $iotrv : \mathit{BinTree}(A) \to A^\star$ and $potrv : \mathit{BinTree}(A) \to A^\star$, for inorder and preorder traversal, respectively. Show how this can be done formally via initiality.<br></latex>	pg 48, left<br>
<latex>~\\<br>For a fixed set $A$ we can form the functor $F(X) = 1 + (A \times X)$. The initial algebra of this functor is the set $A^\star$ of finite lists of elements of $A$, with algebra structure given by the empty list $\mathit{nil}$ and the prefix operation $\mathit{cons}$ in <br>\begin{center}<br>\begin{tikzcd}<br>1 + (A \times A^\star) \ar[r, "\lbrack nil \text{,} cons \rbrack" above, "\cong" below] & A^\star  <br>\end{tikzcd}<br>\end{center}<br>Define the length function $\mathit{len} : A^{\star} \to \mathbb Z$ via this initiality.<br></latex>	pg 48, top right, example 2.4.6<br>also read the part directly below this about defining an append function; you may decide to turn that into a card<br>
<latex>~\\<br>Assume the set $A$ carries a binary operation $+ : A \times A \to A$. We would like to use it do define an operation $\mathit{sum}$ on lists, namely as<br>$$\mathit{sum}(\langle a_1, \ldots, a_n \rangle, \langle b_1, \ldots, b_n \rangle) = \langle a_1 + b_1, \ldots, a_n + b_n \rangle$$<br>The problem is that this only works for lists of the same length! Hence, what we would like to have is a special type of lists of a certain length $n$. It can be formed as an inverse image:<br>$$\mathit{len}^{-1}(\{n\}) = \{ \sigma \in A^\star \mid \mathit{len}(\sigma) = n \}$$<br>Sketch how we can formalize such a datatype via initiality.<br></latex>	pg 49, left "In [45] a solution is given..."<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an arbitrary functor on a category $\mathbb C$. Assume an $F$-algebra $b : F(B) \to B$. Provide the definition of the functor $F^b$ how is this functor used to represent \emph{refinement types}?<br></latex>	pg 49, bottom left, spills to top right, spills further to the left column of pg 50<br><br>
<latex>~\\<br>What is the difference between \emph{inductive definitions} and \emph{recursive definitions}? State and prove the universal algebra version of the recursion theorem.<br></latex>	pg 50, right column<br>
Show that the left adjoint in a Galois connection preserves joins.	pg 53, proof tree at top right corner.<br>
What is an adjunction? (Give the "bijective correspondence + naturality" definition.)<br>	pg 53<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The obvious forgetful functor $U : \mbf{Prosets} \to \mbf{Sets}$ has both left and right adjoints.\\~\\<br>Prove or disprove.<br></latex>	pg 54, left, example 2.5.2<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$, the forgetful functor $U : \mbf{CoAlg}(F) \to \mbf{Sets}$ has a right adjoint. It sends a set $A$ to the carrier of the final coalgebra of the functor $A \times F(-)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 54, right column, spills onto pg 55. <br>Theorem 2.3.9 is stated on pg 42, right column<br><br>todo: add impostor?
<latex>~\\<br>Consider a natural transformation $\alpha : H \Rightarrow K$ as defined above, for two endofunctors $H,K : \mathbb C \to \mathbb C$. Consider the following statement:\\~\\<br>This $\alpha$ induces translation functors between the corresponding categories of algebras and coalgebras in commuting triangles:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(K) \ar[rr] \ar[dr] & & \ar[dl] \mbf{Alg}(H) \\<br> & \mathbb C & <br>\end{tikzcd}~~~<br>\begin{tikzcd}<br>\mbf{CoAlg}(K) \ar[rr] \ar[dr] & & \ar[dl] \mbf{CoAlg}(H) \\<br> & \mathbb C & <br>\end{tikzcd}\end{center}\\~\\<br>The (horizontal) functors are given on objects by pre-composition for algebras:<br>\begin{center}<br>$\ddisp{K(X)}{b}{X} \mapsto \ddisp{H(X)}{b \circ \alpha_X}{X}$<br>\end{center}<br>and similar post-composition for coalgebras (diagram elided). On morphisms these functors are simply<br>$f \mapsto f$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 56, left column<br>
<latex>~\\<br>Provide the definition for the category $\mbf{DA}$.<br></latex>	<latex>~\\<br>pg 56, right column, def 2.5.6<br><br>Note that the pargraph below gives what is possibly a more succint definition "The first two equations..."<br><br>It may be helpful to think of morphisms as subtyping relations $f : X \to Y$ describes a way to use $X$ where $Y$ is expected. The alphabet set is in a contravariant position in the DFA functor.<br></latex>~\\<br><br>
<latex>~\\<br>Provide the definition of the category $\mbf{DB}$.<br></latex>	pg 56, bottom right, def 2.5.7, spills onto pg 57<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>There is a behavior functor $\mathcal B$ and a realisation functor $\mathcal R$ in an adjunction.<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{DA} \ar[dd, "\mathcal B" left, bend right = 20] \\<br> \dashv \\<br>\mbf{DB} \ar[uu, "\mathcal R" right, bend right = 20]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 57, prop 2.5.8.<br>NOTE: prop 2.3.5 is on pg 41, left<br>
<latex>~\\<br>For automata $M_i = \langle X_i \overset{\langle \delta_i, \epsilon_i \rangle}{\longrightarrow} X_i^{A_i} \times B_i, x_i \in X \rangle$, we can construct new automata using combinators: e.g., $M_1 \mid M_2$ and $M_1 \otimes M_2$. Explain how both of these combinators work. Give their formal definitions.<br></latex>	pg 57, right column
<latex>~\\<br>Let $S : \mathbb A \to \mathbb A$, $T : \mathbb B \to \mathbb B$, and $F : \mathbb B \to \mathbb A$. Consider a natural transformation $\alpha : SF \Rightarrow FT$. Consider the following statement:\\~\\<br>$\alpha$ induces a lifting of $F$ to a functor $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(T) \ar[r, "\mbf{Alg}(F)"] & \mbf{Alg}(S) \\<br>(T(X) \overset{a}{\to} X) \ar[r, mapsto] & (SF(X) \overset{\alpha_X}{\longrightarrow} FT(X) \overset{F(a)}{\longrightarrow} F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	Theorem 2.5.9<br>Note that this theorem goes further than what is asked in the question: read the whole proof. Additionally, it might make sense to make another card for "adjunction preservation" part of the theorem.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor, and let $X,Y$ be a arbitrary sets. How is the mapping $Rel(F)$, which sends a relation $R \subseteq X \times Y$ to a `lifted' relation $Rel(F)(R) \subseteq F(X) \times F(Y)$ defined?<br></latex>	pg 64 left, def 3.1.1<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. What is a \emph{bisimulation} for coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$?<br></latex>	pg 64 right, def 3.1.2 (1). <br>NOTE: 2.15 is on pg 28 left<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. What is a \emph{congruence} for algebras $a : F(X) \to X$ and $b : F(Y) \to Y$?<br></latex>	pg 64 right, def 3.1.2 (2)<br><br>
<latex>~\\<br>What is a \emph{bisimulation equivalence}? What is a \emph{congruence equivalence}?<br></latex>	pg 65, top-left, definition 3.1.3<br>
<latex>~\\<br>When is a relation $R \subseteq X \times X$ a bisimulation with respect to the deterministic automaton coalgebra $\langle \delta, \epsilon \rangle : X \to X^A \times B$?<br></latex>	pg 65, left column, "Bisimulations for deterministic automata"<br>
<latex>~\\<br>When is a relation $R \subseteq X \times X$ a bisimulation with respect to the non-deterministic automaton coalgebra $\langle \delta, \epsilon \rangle : X \to \mathcal P(X)^A \times B$?<br></latex>	pg 65, bottom left / top right, "Bisimulations for Non-deterministic Automata"<br>
<latex>~\\<br>Recall that a monoid is a set $m$ carrying an associative operation $+ : M \times M \to M$ with a unit element $0 \in M$. These two operations $+$ and $0$, but not the relevant monoid equations, can be captured as an algebra:<br>\begin{center}<br>\begin{tikzcd}<br>1 + (M \times M) \ar[r, "\lbrack 0 \text{,} + \rbrack"] & M<br>\end{tikzcd}<br>\end{center}<br>of the functor $F(X) = 1 + (X \times X)$. What does it mean for a relation $R \subseteq X \times X$ to be a congruence on this algebra?<br></latex>	pg 65 right, "Congruences for monoids"
<latex>~\\<br>State the ``binary induction proof principle'' (no need to prove).<br></latex>	pg 66 left, theorem 3.1.4<br>
Read "Bisimulations as Congruences", pg 66 left column<br>	pg 66<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a polynomial functor $F$. What is the bisimilarity relation $\underline{\leftrightarrow}$ with respect to $c$ and $d$?<br></latex>	pg 66 left, def 3.1.5<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves the equality relation:<br>$$ Rel(F)(Eq(X)) = Eq(F(X))$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>Proof by induction on the structure of the functor $F$: I will add more cases each time I visit this card.<br>\begin{description}<br>\item[Base case $F(X) = X$:]~\\<br>$\mathit{Rel}(F)(\mathit{Eq}(X)) = \mathit{Eq}(X) = \mathit{Eq}(F(X))$<br>\item[Base case $F(X) = A$:]~\\<br>$\mathit{Rel}(F)(\mathit{Eq}(X)) = \mathit{Eq}(A) = \mathit{Eq}(F(X))$<br>\end{description}<br>pg 67 left, lemma 3.2.1 (1)<br></latex><br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting commutes with reversal of relations:<br>$$ Rel(F)(R^{\dagger}) = Rel(F)(R)^{\dagger}$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>By induction on the structure of $F$: more cases will be added each time I visit this card.<br>\begin{description}<br>\item[Case $F(X)=X$:]~\\<br>$\mathit{Rel}(F)(R^{\dagger}) = R^\dagger = (\mathit{Rel}(F)(R))^\dagger$<br><br>\item[Case $F(X)=A$:]~\\<br>$\mathit{Rel}(F)(R^\dagger) = \mathit{Eq}(A) = (\mathit{Eq}(A))^\dagger = (\mathit{Rel}(F)(R))^\dagger$<br><br>\item[Case $F(X)=F_1(X) \times F_2(X)$:]~\\<br>Inductive Hypothesis: $\mathit{Rel}(F_i)(R^\dagger) = \mathit{Rel}(F_i)(R)^\dagger$, for $i \in 1..2$\\~\\<br>\begin{tabular}{ll}<br>$((a,b),(c,d)) \in \mathit{Rel}(F_1 \times F_2)(R^\dagger)$ & $\Leftrightarrow$ \\<br>$(a,c) \in \mathit{Rel}(F_1)(R^\dagger) \wedge (b,d) \in \mathit{Rel}(F_2)(R^\dagger) $ & $\Leftrightarrow$ \\<br>$(c,a) \in \mathit{Rel}(F_1)(R) \wedge (d,b) \in \mathit{Rel}(F_2)(R)$ & $\Leftrightarrow$ \\<br>$((c,d),(a,b) \in \mathit{Rel}(F_1 \times F_2)(R)$ & $\Leftrightarrow$ \\<br>$((a,b),(c,d)) \in \mathit{Rel}(F_1 \times F_2)(R)^\dagger$ & <br>\end{tabular}<br><br>\end{description}<br>pg 67, left, lemma 3.2.1<br></latex><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting is monotone:<br>$$R \subseteq S \Longrightarrow Rel(F)(R) \subseteq Rel(F)(S)$$<br>Prove or disprove.<br></latex>	pg 67, left, lemma 3.2.1 (3)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves relation composition:<br>$$ Rel(F)(R \circ S) = Rel(F)(R) \circ Rel(F)(S)$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>Proof by induction. I'll add some more cases to this each time I view the card.<br>\begin{description}<br>\item[Base Case $F(X) = X$:]~\\<br>$\mathit{Rel}(F)(S \circ R) = S \circ R = \mathit{Rel}(F)(S) \circ \mathit{Rel}(F)(R)$<br>\item[Base Case $F(X) = A$:]~\\<br>$\mathit{Rel}(F)(S \circ R) = \mathit{Eq}(A) = \mathit{Eq}(A) \circ \mathit{Eq}(A) = <br>  \mathit{Rel}(F)(S) \circ \mathit{Rel}(F)(R)$<br>\end{description}~\\<br>pg 67, left, lemma 3.2.1 (4)<br></latex><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves reflexivity, symmetry, and transitivity, and thus, if $R$ is an equivalence relation, then so is $Rel(F)(R)$\\~\\<br>Prove or disprove.<br></latex>	pg 67, left, lemma 3.2.1 (5)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor and let $f : X \to Z$ and $g : Y \to W$ be arbitrary functions. Consider the following statement:\\~\\<br>Relation lifting commutes with inverse images: for $R \subseteq Z \times W$, <br>$$Rel(F)((f \times g)^{-1}(R)) = (F(f) \times F(g))^{-1}(Rel(F)(R))$$<br>Prove or disprove.<br></latex>	pg 67 right, lemma 3.2.2 (1)<br>
<latex>~\\<br>Give the definition of the category $\mbf{Rel}$. <br></latex>	pg 68 left, def 3.2.3<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting forms a functor:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Rel} \ar[r, "Rel(F)"] \ar[d] & \mbf{Rel} \ar[d] \\<br>\mbf{Sets} \times \mbf{Sets} \ar[r,"F \times F" below] & \mbf{Sets} \times \mbf{Sets} \\<br>\end{tikzcd}<br>\end{center}<br>where the vertical arrows are the obvious forgetful functors.<br></latex>	true. pg 68, Lemma 3.2.4 (1) (top right)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A bismulation is a $\mathit{Rel}(F)$-coalgebra in the category $\mbf{Rel}$. Similarly, a congruence is a $\mathit{Rel}(F)$-algebra in $\mbf{Rel}$.\\~\\<br>Prove or disprove.<br></latex>	pg 68, lemma 3.2.4 (2)<br>
<latex>~\\<br>For an arbitrary function $f : X \to Y$, what does $\mathit{Ker}(f)$ denote?\\~\\ <br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Ker}(f)) = \mathit{Ker}(F(f))$$<br>Prove or disprove.<br></latex>	true. pg 69 left,  (1)<br>
<latex>~\\<br>For a function $f : X \to Y$, what does $\mathit{Graph}(f)$ denote?\\~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Graph}(f)) = \mathit{Graph}(F(f))$$<br>Prove or disprove.<br></latex>	true. pg 69, top left, (2)<br>todo: add impostor?<br>
<latex>~\\<br>For functions $f : Z \to X$ and $g : Z \to Y$, what does $\mathit{Im}(\langle f , g \rangle)$ denote?\\~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Im}(\langle f , g \rangle)) = \mathit{Im}(\langle F(f), F(g) \rangle)$$<br>Prove or disprove.<br></latex>	pg 69, left (3)<br>todo: add impostor?<br>
<latex>~\\<br>Let $f : X \to Z$ and $g : Y \to Z$ be functions. What does $\mathit{Eq}(f,g)$ denote?\\~\\<br>Consider the following statement.<br>For any Kripke polynomial functor F, we have:<br>$$\mathit{Rel}(F)(\mathit{Eq}(f,g)) = \mathit{Eq}(F(f), F(g))$$<br>Prove or disprove.<br></latex>	pg 69 left (4)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be $F$-coalgebras. Consider the following statement:\\~\\<br>If $R \subseteq X \times Y$ is a bisimulation of $c$ and $d$, then so is $R^{\dagger} \subseteq Y \times X$.\\~\\<br>Prove or disprove.<br></latex>	pg 69, right, prop 3.2.6 (1)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, and $c' : X' \to F(X)$ be $F$-coalgebras. <br>Consider the following statement:\\~\\<br>If $R \subseteq X \times X'$ and $S \subseteq X' \times Y$ are bisimulations, then so is $(S \circ R) \subseteq X \times Y$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be $F$-coalgebras. Consider the following statement:\\~\\<br>If $R_i \subseteq X \times Y$ is a bisimulation for each $i \in I$, then so is $\bigcup_{i \in I} R_i \subseteq X \times Y$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (4)<br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, $c' : X' \to F(X')$, and $d' : Y' \to F(Y')$ be $F$-coalgebras. Consider the following statement:\\~\\<br>For homomorphisms $f : X \to Y$ and $f' : X' \to Y'$, if $R \subseteq Y \times Y'$ is a bisimulation, then so is $(f \times f')^{-1}(R) \subseteq X \times X'$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (4)<br>todo: add impostor?<br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, $c' : X' \to F(X')$, and $d' : Y' \to F(Y')$ be $F$-coalgebras. Consider the following statement:\\~\\<br>For homomorphisms $f : X \to Y$ and $f' : X' \to Y'$, if $R \subseteq X \times X'$ is a bisimulation, then so is $\coprod_{f \times f'}(R) \subseteq Y \times Y'$.\\~\\<br>Prove or disprove.<br></latex>	pg 69 right, prop 3.2.6 (5)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>An arbitrary function $f : X \to Y$ is a homomorphism of coalgebras if and only if its graph relation $Graph(f)$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 70 left, prop 3.2.7 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>The equality relation $\mathit{Eq}(X)$ on $X$ is a bisimulation equivalence. More generally, for a homomorphism $f : X \to Y$, the kernel relation $\mathit{Ker}(f)$ is a bisimulation equivalence.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>For two homomorphisms $X \overset{f}{\leftarrow} Z \overset{g}{\rightarrow} Y$ the image of the tuple $\mathit{Im}(\langle f, g \rangle) \subseteq X \times Y$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (3)<br>todo: add impostor?
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>For two homomorphisms $X \overset{f}{\rightarrow} Z \overset{g}{\leftarrow} Y$ the pullback relation $\mathit{Eq}(\langle f, g \rangle) \subseteq X \times Y$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (4)<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor, with coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$. Consider the following statement:\\~\\<br>The bisimilarity relation $_c\underline{\leftrightarrow}_d \subseteq X \times Y$ is a bisimulation; it is the greatest among all bisimulations between $c$ and $d$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 70 right, prop 3.2.8 (1)<br>todo: add impostor?<br>
Explain the 'ket' notation for discussing multisets.	pg 86 left<br>
<latex>~\\<br>In the ``ket notation'' $m|x\rangle$, what sort of object is $m$?<br></latex>	it's an element of a commutative monoid<br>pg 86 left, near bottom<br><br>
<latex>~\\<br>For a commutative monoid $M = (M,+,0)$, how is the \emph{multiset functor} $\mathcal M_M : \mbf{Sets} \to \mbf{Sets}$ defined? Prove that it actually is a functor.<br></latex>	pg 86 right, def 4.1.1<br>be sure to define its values on both sets (objects) and functions (arrows)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The empty multiset and the sum of multisets make the sets $\mathcal M_M(X)$ (for sets $X$) commutative monoids.\\~\\<br>Prove or disprove.<br></latex>	true. pg 87 left, lemma 4.1.2<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite set $V$, there are isomorphisms:\\<br>$\mathcal M_M(0) \cong 1$\\<br>$\mathcal M_M(1) \cong M$\\<br>$\mathcal M_M(V) \cong M^V$\\~\\<br>Prove or disprove.<br></latex>	pg 87 left, lemma 4.1.2<br>
Read example 4.1.3 on pg 87 left	pg 87 left<br>
<latex>~\\<br>How can we express the set of multivariate polynomials on variable set $X$, using the multiset functors $\mathcal M_{(-)}$? What about the set of univariate polynomials?<br></latex>	pg 87 right<br>
<latex>~\\<br>How is the (discrete probability) \emph{distribution functor} $\mathcal D : \mbf{Sets} \to \mbf{Sets}$ defined? Prove that it is actually a functor.<br></latex>	pg 87 right, def 4.1.5<br>
Read the three paragraphs in the top left part of pg 88<br>	pg 88, top left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For the distribution functor $\mathcal D$ there are the following isomorphisms:<br>$$\mathcal D(0) \cong 0$$<br>$$\mathcal D(1) \cong 1$$<br>$$\mathcal D(2) \cong [0,1]$$<br>Prove or disprove.<br></latex>	true. pg 88 left, lemma 4.1.6<br>todo: add impostor! would be super easy.<br>
<latex>~\\<br>Give the coalgebraic definition of a Markov chain.<br></latex>	pg 88, bottom left paragraph.<br>
<latex>~\\<br>Describe how the ``support function'' establishes a relationship between $\mathcal D(X)$<br>and $\mathcal P(X)$. The ``support function'' is actually a more than just a function: it's an instance of a common construct from category theory. Explain. <br></latex>	pg 89, bottom left corner.<br>it's a natural transformation.<br>
<latex>~\\<br>What does it mean for a monoid to be \emph{zerosum free} or \emph{positive}? What is the motivation for defining this concept?<br></latex>	pg 89 right, "A subtle point is that..."<br>down to<br>"This phenomenon that certain..."<br><br>
Take a gander at diagram (4.5) on pg 90 left.<br>	pg 90<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor and $R \subseteq X \times Y$ be an arbitrary relation, written via explicit functions $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$. Consider the following statement:\\~\\<br>The lifted relation $\mathit{Rel}(F)(R)$, considered as a set, is a \emph{retract} of $F(R)$: there<br>are functions $\alpha : \mathit{Rel}(F)(R) \to F(R)$ and $\beta : F(R) \to \mathit{Rel}(F)(R)$ with<br>$\beta \circ \alpha = id_{\mathit{Rel}(F)(R)}$. Moreover, these $\alpha$ and $\beta$ make the following triangle commute:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Rel}(F)(R) \ar[ddr, tail] \ar[rr, "\alpha" above, tail, bend left = 15] &                        & \ar[ll, "\beta" below, two heads, bend left = 15] \ar[ddl, "~~\langle F(r_1) \text{,} F(r_2) \rangle" right] F(R) \\<br>                          &                        & \\<br>                          & F(X) \times F(Y) &<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 72, top left<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>A relation $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$ is a bisimulation for $c$ and $d$ if and only if $R$ is an \emph{Aczel-Mendler bisimulation}: $R$ itself is the carrier of some coalgebra $e : R \to F(R)$, making the legs $r_i$ homomorphisms of coalgebras, as in:<br>\begin{center}<br>\begin{tikzcd}<br>F(X) & \ar[l, "F(r_1)" above] F(R) \ar[r, "F(r_2)" above] & F(Y) \\<br>X \ar[u,"c" left] & \ar[u, "e" right] \ar[l, "r_1" below] R \ar[r, "r_2" below]  & Y \ar[u, "d" right]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex><br>	true. pg 72 right, theorem 3.3.2<br>
<latex>~\\<br>What is an \emph{Aczel-Mendler bisimulation}?<br></latex>	pg 72 right, in the statement of theorem 3.3.2<br>
<latex>~\\<br>Assume two elements $x \in X$ and $y \in Y$ of coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. The following statements are equivalent:<br>\begin{enumerate}<br>\item $x,y$ are bisimilar: $x~_c\underline{\leftrightarrow}_d~y$.<br>\item There is a span of coalgebra homomorphisms: a coalgebra $Z \overset{e}{\to} F(Z)$ and coalgebra homomorphisms $f : e \to c$ and $g : e \to d$ with $x = f(z)$ and $y = g(z)$ for some $z \in Z$.<br>\item $x,y$ are \emph{behaviorally equivalent}: there is a cospan of coalgebra homomorphisms, i.e., <br>a coalgebra $e : Z \to F(Z)$ and coalgebra maps $h : c \to e$ and $k : d \to e$ with $h(x) = k(y)$.<br>\end{enumerate}<br>Prove or disprove.<br></latex><br>	pg 73, theorem 3.3.3
<latex>~\\<br>Assume two elements $x \in X$ and $y \in Y$ of coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. What does it mean for $x \in X$ and $y \in Y$ to be \emph{behaviorally equivalent}?<br>Prove or disprove.<br></latex>	pg 73, in statement of theorem 3.3.3<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>For a coalgebra $c : X \to F(X)$ and a bisimulation equivalence $R \subseteq X \times X$, the quotient set $X/R$ carries a unique quotient coalgebra structure, written as $c/R : X/R \to F(X/R)$, making the canonical quotient map $[-]_R : X \twoheadrightarrow X/R$ a homomorphism of coalgebras, as in <br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>F(X) \ar[r, "F(\lbrack - \rbrack_R)" above] & F(X/R) \\<br>X \ar[u, "c" left] \ar[r, "a_R" below, two heads] & \ar[u, "c/R" right] X/R  <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove<br></latex>	true. pg 73 right, Theorem 3.3.4 (1)<br>todo: add  impostor?<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A homomorphism of coalgebras $f : X \to Y$ from $X \overset{c}{\to} F(X)$ to $Y \overset{d}{\to} F(Y)$ is a monomorphism/epimorphism in the category $\mbf{CoAlg}(F)$ if and only if $f$ is an injective/surjective function between the underlying sets.\\~\\<br>Prove or disprove<br></latex>	true. pg 73 right, Theorem 3.3.4 (2)<br><br>the proof in the book seems like massive overkill to me.<br><br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Every homomorphism of coalgebras factors as an epimorphism followed by a monomorphism in $\mbf{CoAlg}(F)$. This factorisation is essentially unique because of the following `diagonal-fill-in' property. For each commuting square of  coalgebra homomorphisms as below, there is a unique diagonal homomorphism making both triangles commute:<br>\begin{center}<br>\begin{tikzcd}<br>\bullet \ar[d] \ar[r, two heads] & \bullet \ar[d] \ar[dl, dashed] \\<br>\bullet \ar[r, tail] & \bullet<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove<br></latex>	true. pg 73 right, theorem 3.3.4 (3)<br>
<latex>~\\<br>Assume two algebras $a : F(X) \to X$ and $b : F(Y) \to Y$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>A relation $R \subseteq X \times Y$ is a congruence relation if and only if it carries a (necessarily unique) algebra structure $F(R) \to R$ itself, making the two legs $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$ of the inclusion homomorphisms of algebras, as in<br>\begin{center}<br>\begin{tikzcd}<br>F(X) \ar[d,"a" left] & \ar[l, "F(r_1)" above] F(R) \ar[d] \ar[r, "F(r_2)"] & \ar[d, "b" right] F(Y) \\<br>X     &  \ar[l, "r_1" below] R \ar[r, "r_2" below]  & Y<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 75 right. theorem 3.3.5.<br>todo: add impostor?<br><br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary endofunctor on $\mbf{Sets}$. Consider the following statement:\\~\\<br>If $q : X \twoheadrightarrow X/R$ is the quotient map of an equivalence relation $\langle r_1, r_2 \rangle : R \hookrightarrow X \times X$, then we have a coequaliser diagram:\\~\\<br>\begin{center}<br>\begin{tikzcd}<br>F(R) \ar[r, "F(r_1)" above, shift left = 1.2] \ar[r, "F(R_2)" below, shift right = 1.2] & F(X) \ar[r, "F(q)" above, two head] & F(X/R)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 76 left, lemma 3.3.6<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $R \subseteq X \times X$ be a congruence equivalence relation (i.e. both a congruence and an equivalence relation) on an algebra $F(X) \to X$. Consider the following statement:\\~\\<br>The quotient $X/R$ carries a unique algebra structure $a/R : F(X/R) \to X/R$ making the quotient map $q : X \to X/R$ a homomorphism of algebras.\\~\\<br>Prove or disprove.<br></latex>	pg 76 left, prop 3.3.7<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a (finite) polynomial functor which has a final coalgebra $\zeta : Z \overset{\cong}{\to} F(Z)$. Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be arbitrary coalgebras, with associated behavior homomorphisms $\mathit{beh}_{c} : X \to Z$ and $\mathit{beh}_d : Y \to Z$ given by finality. Consider the following statement:\\~\\<br>Two states $x \in X$ and $y \in Y$ are then bisimilar if and only if they have the same behavior:<br>$$x _c\underline{\leftrightarrow}_d y \Longleftrightarrow \mathit{beh}_c(x) = \mathit{beh}_d(y)$$<br>In particular, bisimilarity $_\zeta\underline{\leftrightarrow}_\zeta \subseteq Z \times Z$ on the final coalgebra is equality.\\~\\<br>Prove or disprove.<br></latex>	true. pg 77 left, theorem 3.4.1<br>
State and prove the "coinduction proof principle".	pg 77 right, corollary 3.4.2<br>todo: add impostor?<br>
<latex>~\\<br>What does it mean for a coalebra $c : X \to F(X)$ to be \emph{observable}?<br></latex>	pg 77 right, in corollary 3.4.3<br>
<latex>~\\<br>Consider two deterministic automata $\langle \delta_i, \epsilon_i \rangle : S_i \to S_i^A \times \{ 0, 1 \}$ with initial states $s_i \in S_i$, for $i = 1,2$. Consider the following statement:\\~\\<br>These states $s_1$ and $s_2$ are then equivalent if and only if they are bisimilar.\\~\\<br>Prove or disprove.<br></latex>	true. pg 77 right, corollary 3.4.4. <br>todo: add impostor<br>
<latex>~\\<br>We would like to view the concept of \emph{bisimulation} as a property of relations. From this perspective, which definition of bisimulation is preferable: the logical (relation lifting) or structural (Aczel-Mendler) one?<br></latex>	pg 75 left, item 1 (at top)<br>
<latex>~\\<br>Which definition of bisimulation is more general: the logical (relation lifting) or structural (Aczel-Mendler) one?<br></latex>	there isn't a clear choice: relation lifting is more "logically general", but it applies to a smaller class of functors<br>pg 75 left, items 2 & 3<br><br><br>
<latex>~\\<br>Under certain circumstances, the Aczel-Mendler approach to bisimulation reduces the notion of bisimulation to equality. What are these circumstances?<br></latex>	pg 75 left, item 4<br>
<latex>~\\<br>Define the set $\mathcal R(A)$ of regular languages over an alphabet $A$. Why does the coinduction proof principle imply that for $L,K \in \mathcal R(A)$,<br>$$L = K \Leftrightarrow \text{there is a bisimulation } R \subseteq \mathcal R(A) \times \mathcal R(A) \text{ with } R(L,K)$$<br>Prove that $(1 + a)^* = a^*$ using this prinicple.<br></latex>	pg 78 right
Read example 2 on pg 79-80<br>	pg 79-80<br>
<latex>~\\<br>Consider a machine that provides 1 and 2 euro coins in exchange for 5 and 10 euro bills. How can we describe the behavior of this machine coalgebraically?<br></latex>	pg 80 right / pg 81 left<br>
From a coalgebraic perspective, what is a <i>process</i>?	pg 81 left, near bottom<br>
Read section 3.5.1 on pg 81 right<br>	pg 81, right<br>
How do we define the <i>null process</i> coalgebraically?	<latex>~\\<br>pg 82 left, ``The Null Process''\\<br>remember that $\zeta_A$ is the final coalgebra of $F(X) = \mathcal P_{fin}(X)^A$.<br></latex>
<latex>~\\<br>How do we define the \emph{sum} of two processes coalgebraically?<br></latex>	pg 82 left, "Sum of Two Processes"<br>
Is the process summation operator a semilattice join? Why or why not?	it is. pg 82 left, "Sum of two processes" near bottom of section
<latex>~\\<br>Given a process $z \in Z_A$ and an action $b \in A$ there is a process $b \cdot z$ which first performs $b$ and then continues with $z$. How does one define this ``action prefixing'' coalgebraically?<br></latex>	pg 82 left, "Prefixing of actions", spills onto right column<br>
<latex>~\\<br>Consider the coalgebra representing a machine that translates 10 and 5 euro bills into 1 and 2 euro coins, depicted in figure 3.1 on pg 81 left. Prove that it satisifies equation 3.5 shown on pg 81 right. Note that this equation uses the process prepend and sum operators, as well as the 0 process; if you can't remember how these are defined, see their definitions on pg 82.<br></latex>	pg 82, example 3.5.1<br>pg 83 (figure 3.2: it's sideways, so you may want to open in Okular and go view -> rotate right,<br>         note that s<sub>10</sub> on the first line should actually be s<sub>0</sub>)<br>
<latex>~\\<br>The \emph{basic process algebra} is a bialgebraic formalization of processes. Give the involved algebra and coalgebra. <br></latex>	pg 82 "3.5.2 Simple Process Algebra", spills onto the right column of the next page (the figure in the left column is related to a previous section and can be ignored)<br><br>note that this uses the notions of "null process", "process summation", and "prefixing", defined on pg 82 left<br><br>
<latex>~\\<br>Let $\Sigma_A$ be the functor underlying the algebra for the basic process algebra over action set $A$. How can we construct the initial $\Sigma_A$-algebra?<br></latex>	It's the free algebra on the empty set<br>pg 83, bottom half of page<br>
<latex>~\\<br>Let $P_A$ be the initial algebra for the basic process algebra on action set $A$. Let $Z_A$ be the final coalgebra for the basic process algebra on action set $A$. Then by initiality and finality we obtain:<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\Sigma_A(P_A) \ar[d, "\alpha" left, "\cong" right] \ar[r, "\Sigma_A(\mit{int}_\alpha)" above] & \Sigma_A(Z_A) \ar[d, "\xi" right] & & \mathcal P_{fin} (P_A)^A \ar[r, "\mathcal P_{fin}(\mit{beh}_\beta)^A"] & \mathcal P_{fin}(Z_A)^A \\<br>P_A \ar[r, "\mit{int}_\alpha" below, dashed] & Z_A & & P_A \ar[u, "\beta" left] \ar[r, "\mit{beh}_\beta" below, dashed] & \ar[u, "\cong" left, "\zeta" right] Z_A<br>\end{tikzcd}<br>\end{center}<br>where $\xi$ is defined (though not named) on page 82 left, and $\beta$ is defined on pg 83, bottom right.<br>Consider the following statement:\\~\\<br>These two maps are equal, so that $\mit{int}_\alpha = \mit{beh}_\beta : P_A \to Z_A$ is a `map of bialgebras' commuting with both the algebra and coalgebra structures. This proves in particular that the behavioral semantics $\mit{beh}_\beta$ of processes is compositional: it commutes with the term-forming operations.\\~\\<br>Prove or disprove.<br></latex>	true. pg 84 left<br><br>todo: add impostor?<br>
<latex>~\\<br>Let $P_A$ be the initial algebra for the basic process algebra on action set $A$. Let $Z_A$ be the final coalgebra for the basic process algebra on action set $A$. Then by initiality and finality we obtain:<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\Sigma_A(P_A) \ar[d, "\alpha" left, "\cong" right] \ar[r, "\Sigma_A(\mit{int}_\alpha)" above] & \Sigma_A(Z_A) \ar[d, "\xi" right] & & \mathcal P_{fin} (P_A)^A \ar[r, "\mathcal P_{fin}(\mit{beh}_\beta)^A"] & \mathcal P_{fin}(Z_A)^A \\<br>P_A \ar[r, "\mit{int}_\alpha" below, dashed] & Z_A & & P_A \ar[u, "\beta" left] \ar[r, "\mit{beh}_\beta" below, dashed] & \ar[u, "\cong" left, "\zeta" right] Z_A<br>\end{tikzcd}<br>\end{center}<br>where $\xi$ is defined (but not named) on pg 82 left, and $\beta$ is defined on pg 83, bottom right.<br>Consider the following statement:\\~\\<br>The bisimilarity relation $\underline{\leftrightarrow}$ on the set $P_A$ of process terms is a congruence.\\~\\<br>Prove or disprove.<br></latex>	pg 84 left, proposition 3.5.3<br>
<latex>~\\<br>What is a \emph{pullback}? What is a \emph{weak pullback}?<br></latex>	pg 91 left, def 4.2.1 (1)<br>
<latex>~\\<br>What does it mean for a functor to be \emph{pullback preserving}? What does it mean for a functor to be \emph{weak pullback preserving}?<br></latex>	pg 91 left, def 4.2.1 (2)<br>
<latex>~\\<br>Concretely, what is the pullback of two maps $X \overset{f}{\to} Z \overset{g}{\leftarrow} Y$ in the category of sets?<br></latex>	pg 91, top right<br>
<latex>~\\<br>How do we represent the inverse images of a predicate $P$ on $Y$ with respect to a map $h : X \to Y$?<br></latex>	pullbacks. pg 91 right.
<latex>~\\<br>How do we frame the notion of \emph{monomorphisms} in terms of weak pullbacks? Prove your answer.<br></latex>	pg 91 right, lemma 4.2.2 near bottom<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Weak pullback preserving functors preserve monos.\\~\\<br>Prove or disprove.<br></latex>	pg 91 right, lemma 4.2.2, spills onto next page.<br><br>
<latex>~\\<br>Assume a category $\mathbb C$ with pullbacks, and a weak-pullback-preserving functor $F : \mathbb C \to \mathbb C$ with a final coalgebra $Z \overset{\cong}{\to} F(Z)$. Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be coalgebras. Consider the following statement:\\~\\<br>The pullback relation on $X, Y$ in <br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Eq}(\mit{beh}_c, \mit{beh}_d) \ar[dr, phantom, "\lrcorner" very near start] \ar[d, tail] \ar[r] & Z \ar[d,"\langle id \text{,} id \rangle" right] \\<br>X \times Y \ar[r, "\mit{beh}_c \times \mit{beh}_d" below] & Z \times Z<br>\end{tikzcd}<br>\end{center}<br>is then the greatest Aczel-Mendler bisimulation on coalgebras $c,d$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 92 left, theorem 4.2.4.<br>see DetailedNotes for additional explanation.<br>todo: add impostor?<br>
<latex>~\\<br>Assume a functor $F : \mathbb C \to \mathbb C$ that preserves ordinary pullbacks. Consider the following statement:\\~\\<br>If the category $\mathbb C$ has pullbacks, then so has the category of coalgebras $\mbf{CoAlg}(F)$.\\~\\<br>Prove or disprove. <br></latex>	true. pg 92 right, prop 4.2.5<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Every exponent polynomial functor $\mbf{Sets} \to \mbf{Sets}$ preserves pullbacks (and also weak ones). \\~\\<br>Prove or disprove.<br></latex>	pg 93 right, prop 4.2.6 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The powerset functors $\mathcal P$ and $\mathcal P_{\mit{fin}}$ preserve weak pullbacks.\\~\\<br>Prove or disprove.<br></latex>	true. pg 93 right, prop 4.2.6 (2)<br>todo: add impostor?<br>
<latex>~\\<br>What does it mean for a commutative monoid $M = (M,0,+)$ to be a \emph{refinement monoid}?<br></latex>	pg 94 right, def 4.2.7<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The multiset functors $\mathcal M_M$ preserve weak pullbacks.\\~\\<br>True or false? (No need to prove).<br></latex>	pg 94 right, paragraph above def 4.2.7<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The natural numbers with addition are a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	true. pg 95 top left<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each Abelian group is a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	true. pg 95 left, above lemma 4.2.8<br>todo: add impostor, perhaps by removing 'abelian'?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A commutative monoid is a positive refinement monoid if and only if the refinement property holds for each pair of numbers $(n,k) \in \mathbb N^2$. That is, if <br>$$r_1 + \cdots + r_n = c_1 + \cdots + c_k$$<br>then there is an $n \times k$ matrix $(m_{ij})_{i \leq n, j \leq k}$ with<br>\begin{mathpar}<br>r_i = \Sigma_j m_{ij} <br>\and<br>\text{and}<br>\and<br>c_j = \Sigma_i m_{ij}<br>\end{mathpar}<br>Prove or disprove.<br></latex>	true. pg 95 left, lemma 4.2.8<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A multiset functor $\mathcal M_M$ preserves weak pullbacks if and only if the commutative monoid $M$ is both positive and a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	pg 95 right, prop 4.2.9 at top<br>todo: add impostor?<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The distribution functor $\mathcal D : \mbf{Sets} \to \mbf{Sets}$ preserves weak pullbacks.\\~\\<br>Prove or disprove.<br></latex>	true. pg 96 left, prop 4.2.10<br>todo: add impostor? (perhaps by removing 'weak'?)<br>
<latex>~\\<br>What is a \emph{subobject}?<br></latex><br>	pg 98 left.<br>
<latex>~\\<br>Let $U$ be a dcpo. What does it mean for a subset $U \subseteq D$ to be \emph{admissible}? Are the admissible subsets of a DCPO its subobjects in the category $\mbf{dcpo}$?<br></latex>	nope. pg 98 bottom left / top right<br>
<latex>~\\<br>A \emph{logical factorisation system} in a category $\mathbb C$ consists of two components: a collection of<br>`abstract monos' $\frak M \subseteq \mathbb C_1$ and a collection of `abstract epis' $\frak E \subseteq \mathbb C_1$. What seven properties must this pair of collections satisfy to be considered a logical factorisation system?<br></latex>	pg 98 right, def 4.3.2<br>note that point 1 is really two properties, which is why the card says 'seven' rather than 'six'.<br><br>
<latex>~\\<br>For a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$, define the following:<br>\begin{itemize}<br>\item the category $\mit{Pred}(\mathbb C)$ of predicates in $\mathbb C$<br>\item the category $\mit{Rel}(\mathbb C)$ of relations in $\mathbb C$ (provided that $\mathbb C$ has binary products) <br>\end{itemize}<br></latex>	pg 99 bottom left / top right, def 4.3.3<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>Each map $f : X \to Y$ in $\mathbb C$ gives rise to a pullback functor $f^{-1} : \mit{Pred(Y)} \to \mit{Pred}(X)$, using diagram (4.8). Similarly, each pair of maps $f_1 : X_1 \to Y_1$. $f_2 : X_2 \to Y_2$ gives rise to a pullback functor $(f_1 \times f_2)^{-1} : \mit{Rel}(Y_1,Y_2) \to \mit{Rel}(X_1,X_2)$. In this way we get two functors:<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb C^{\mit{op}} \ar[r, "\mit{Pred}(-)" above] & \mbf{PoSets} & \text{and} & (\mathbb C \times \mathbb C)^{op} \ar[r, "\mit{Rel}(-)" above] & \mbf{PoSets}<br>\end{tikzcd}<br>\end{center}<br>Is this statement true?<br></latex>	Yes. pg 99, bottom right, lemma 4.3.4 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The posets $\mit{Pred}(X)$ and $\mit{Rel}(X_1,X_2)$ have finite meets $\top, \wedge$.\\~\\<br>Prove or disprove.<br></latex>	pg 100, top left, (2)<br>(proof is at the bottom left of the page)<br><br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Define $\top_X \doteq \xdisp{X}{mapsto}{\mit{id}}{X}$.<br>Consider the following statement:\\~\\<br>The mapping $X \mapsto \top_X$ yields a truth functor $\top : \mathbb C \to \mit{Pred}(\mathbb C)$ that is a right adjoint to the forgetful functor in<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d, bend right = 30] \\<br>\mathbb C \ar[u, phantom, "\dashv"] \ar[u, "\top" right, bend right = 30]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 100 left, (3)<br>todo: add impostor?
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The truth functor $\top : \mathbb C \to \mit{Pred}(\mathbb C)$ has a right adjoint, mapping a predicate $(U \mapsto X)$ to its domain $U$.\\~\\<br>Prove or disprove.<br></latex>	pg 100 left, (4)<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\frak M, \frak E)$. Consider the following statement:\\~\\<br>Each map $f : X \to Y$ and each pair of maps $f_1 : X_1 \to Y_1$, $f_2 : X_2 \to Y_2$ in $\mathbb C$ give rise to functors between posets:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(X) \ar[r, "\coprod_f" above] & \mit{Pred}(Y) & & \mit{Rel}(X_1,X_2) \ar[r, "\coprod_{f_1 \times f_2}" above] & \mit{Rel}(Y_1, Y_2) <br>\end{tikzcd}<br>\end{center}<br>They are defined via factorisations: $\coprod_{f}(m) = \frak m(f \circ m)$ and $\coprod_{f_1 \times f_2}(r) = \frak m((f_1 \times f_2) \circ r)$ in<br>\begin{center}<br>\begin{tikzcd}<br>U \ar[d, "m" left, mapsto] \ar[r] & \coprod_f(U) \ar[d, "\coprod_{f}(m)" right, mapsto] & & R \ar[d, "r = \langle r_1 \text{,} r_2 \rangle" left, mapsto] \ar[r] & \ar[d,"\coprod_{f_1 \times f_2}(r)" right, mapsto] \coprod_{f_1 \times f_2}(R) \\<br>X \ar[r,"f" below] & Y & & X_1 \times X_2 \ar[r, "f_1 \times f_2" below] & Y_1 \times Y_2<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 100, bottom right, prop 4.3.5 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The functors $\coprod$ are left adjoints to the pulback functors from lemma 4.3.4 (1) on pg 99.\\~\\<br>Prove or disprove.<br></latex><br>	true. pg 101 left.<br>todo: add impostor? (right adjoint, maybe?)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each object $X \in \mathbb C$ the equality relation $\mit{Eq}(X) \in \mit{Rel}(X,X)$ is defined by factoring the diagonal $\Delta = \langle id, id \rangle : X \rightarrowtail X \times X$, in <br>\begin{center}<br>\begin{array}{lll}<br>\mit{Eq}(X) & = & \coprod_{\langle id, id \rangle}(\top_X) \\<br>                  &    & \frak{m}(\langle id, id \rangle)  <br>\end{array}~~~~~~<br>i.e.~~~~~~<br>\begin{tikzcd}<br>X \ar[r] \ar[dr, "\langle id \text{,} id \rangle~~~~" below] & \mit{Eq}(X) \ar[d, "\frak m(\langle id \text{,} id \rangle) = \mit{Eq}(X)", mapsto] \\<br>           & X \times X<br>\end{tikzcd}<br>\end{center}<br>Here we deliberately overload the notation $\mit{Eq}(X)$. This equality forms a functor in<br>\begin{center}<br>\begin{tikzcd}<br> & \mit{Rel}(\mathbb C) \ar[d, "\mit{cod}" right] \\<br>\mathbb C \ar[ur, "\mit{Eq}(-)~~~~" above] \ar[r, "\langle id_{\mathbb C} \text{,} id_{\mathbb C}\rangle" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>If diagonals $\Delta = \langle id, id \rangle : X \rightarrowtail X \times X$ are in the set $\frak M$ of abstract monos, then $\mit{Eq}(X)$ is equal to this diagonal, and `internal' equality in our predicate logic and `external' equality coincide, in the sense that for two parallel maps $f,g : Y \to X$ one has<br>\begin{center}<br>\begin{array}{lll}<br>\text{f,g are internally equal} & \overset{\mit{def}}{\Leftrightarrow} & \top \leq \mit{Eq}(f,g) = \langle f,g \rangle^{-1}(\mit{Eq}(X)) \\<br> & \Leftrightarrow & f = g \\<br> & \overset{\mit{def}}{\Leftrightarrow} & f,g \text{ are externally equal} <br>\end{array}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 101 left (3)<br>todo: add impostor?<br>
<latex>~\\<br>Give the definition of the logical factorization system in the category $\mbf{SetsRel}$. Is internal equality equal to external equality in this category?<br></latex>	pg 103 left<br>
<latex>~\\<br>Give the definition of the factorization system for $\mbf{Vect}$, the category of finite-dimensional vector spaces over $\mathbb R$ and linear transformations between them.<br></latex>	pg 103 left, (2) near bottom<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$ and an arbitrary endofunctor $F : \mathbb C \to \mathbb C$. How do we define the functor $\mit{Rel}(F)$?<br></latex>	pg 107 left, def 4.4.1<br>
<latex>~\\<br>For two relations $\langle r_1, r_2 \rangle : R \mapsto X \times Y$ and $\langle s_1, s_2 \rangle : S \mapsto Y \times Z$, how do we define their relational composition $S \circ R \mapsto X \times Z$ categorically?<br></latex>	pg 107 right, fig (4.11)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and\\~\\<br>The functor $\mit{Rel}(F)$ preserves the order $\leq$ between relations (on the same objects): $R \leq S \Longrightarrow \mit{Rel}(F)(R) \leq \mit{Rel}(F)(S)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left, (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and\\~\\<br>The functor $\mit{Rel}(F)$ preserves reversal (also called daggers) $(-)^{\dagger}$ of relations, where<br>$$(R \overset{\langle r_1, r_2 \rangle}{\mapsto} X \times Y)^{\dagger} = (R \overset{\langle r_2, r_1 \rangle}{\mapsto} Y \times X)$$\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left, (2)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and we have the inequality $\mit{Eq}(F(X)) \leq \mit{Rel}(F)(\mit{Eq}(X))$.\\~\\<br>Additionally, we have the equality $\mit{Eq}(F(X)) = \mit{Rel}(F)(\mit{Eq}(X))$ in case either<br>\begin{itemize}<br>\item Diagonals are in $\frak M$, or<br>\item $F$ preserves abstract epis, i.e. $e \in \frak E \Longrightarrow F(e) \in \frak E$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 108 left, (3)<br>todo: add impostor? (remove the conditions on the equality)<br><br><latex>~\\<br>helper notes explaining the diagram of pg 108 (top right):~\\~\\<br>$d;\langle r_1 , r_2 \rangle = \langle F(m_1) , F(m_2) \rangle$~~(bottom left corner)\\~\\<br>$F(e_x);\langle F(m_1) , F(m_2) \rangle$~\\<br>$= \langle F(e_x);F(m_1) , F(e_x);F(m_2) \rangle$~\\<br>$= \langle F(e_x;m_1) , F(e_x;m_2) \rangle$~\\<br>$= \langle F(\mathit{id}),F(\mathit{id}) \rangle$~\\<br>$= \langle \mathit{id} , \mathit{id} \rangle$<br></latex>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and we have the inequality $\mit{Rel}(F)(S \circ R) \leq \mit{Rel}(F)(S) \circ \mit{Rel}(F)(R)$ if $F$ preserves abstract epis.\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left (4)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>These forgetful functors are fibrations.\\~\\<br>Prove or disprove.<br></latex>	true. it's not in the book, but it's not hard to prove. Splittings are pullbacks. Seems like a subcategory of the arrow category, and a subfibration of the codomain fibration.<br>inspired by the text near pg 100 left<br>
<latex>~\\<br>Let $(\frak M, \frak E)$ be a logical factorisation system on a category $\mathbb C$, where $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:\\~\\<br>In this case the lifting $\mit{Rel}(F) : \mit{Rel}(\mathbb C) \to \mit{Rel}(\mathbb C)$ of a functor $F : \mathbb C \to \mathbb C$ preserves reversals $(-)^{\dagger}$, equality, and coproducts $\coprod$. Moreover,<br>if $F$ preserves weak pullbacks, then $\mit{Rel}(F)$ preserves composition of relations and inverse images:<br>$$\mit{Rel}(F)(S \circ R) = \mit{Rel}(F)(S) \circ \mit{Rel}(F)(R)$$<br>$$\mit{Rel}(F)((f_1 \times f_2)^{-1}(S)) = (F(f_1) \times F(f_2))^{-1}(\mit{Rel}(F)(S))$$<br>Prove or disprove.<br></latex>	true. pg 109, prop 4.4.3<br>
<latex>~\\<br>Let $F$ be a weak-pullback-preserving endofunctor on a category $\mathbb C$ with a logical factorisation system $(\frak M, \frak E)$ satisfying $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:<br>$$R \text{ is an equivalence relation} \Longrightarrow \mit{Rel}(F)(R) \text{ is an equivalence relation.}$$<br>Writing $\mit{EqRel}(\mathbb C)$ for the category of equivalence relations $R \mapsto X \times X$ in $\mathbb C$, we get an obvious restriction of the relation-lifting functor $\mit{Rel}(F)$ to $\mit{EqRel}(F)$ in <br>\begin{center}<br>\begin{tikzcd}<br>\mit{EqRel}(\mathbb C) \ar[d] \ar[r, "EqRel(F)" above] & \ar[d] \mit{EqRel}(\mathbb C) \\<br>\mathbb C \ar[r, "F" below] & \mathbb C<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 110 left, corollary 4.4.4<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\frak M, \frak E)$. What is a \textbf{relator} for a functor $F : \mathbb C \to \mathbb C$, also known as an $\mit{F}$-relator?<br></latex>	pg 110 left, def 4.4.5<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be a functor, where the category $\mathbb C$ carries a logical factorisation system $(\frak M, \frak E)$ with $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:\\~\\<br>$F$ has a relator if and only if $F$ preserves weak pullbacks. Moreover, this relator, if it exists, is uniquely determined.\\~\\<br>Prove or disprove.<br></latex>	true. pg 110 right, theorem 4.4.6.<br>
<latex>~\\<br>Consider a functor $F : \mathbb C \to \mathbb C$ on a category $\mathbb C$ with a logical factorisation system, together with the resulting lifting $\mit{Rel}(F) : \mit{Rel}(\mathbb C) \to \mit{Rel}(\mathbb C)$.\\~\\<br>In this setting, what is a \emph{logical F-bisimulation}? What is a \emph{logical F-congruence}?<br></latex>	pg 112 bottom left / top right, def 5.4.1<br><br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system. Consider the following statement:\\~\\<br>For each coalgebra $c : X \to F(X)$ the equality relation $\mit{Eq}(X) \mapsto X \times X$ on its state is a bisimulation. As a result, there is a lifting of the equality functor in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{CoAlg}(F) \ar[d] \ar[r, "\mit{Eq}(-)"] & \mbf{CoAlg}(\mit{EnRel}(F)) \ar[d] \\<br>\mathbb C \ar[loop below, "F" below] \ar[r, "\mit{Eq}(-)" below] & \mit{EnRel}(\mathbb C) \ar[loop below, "\mit{EnRel}(F)" below]<br>\end{tikzcd}<br>\end{center}<br>This lifiting sends<br>\begin{center}<br>$(X \overset{c}{\to} F(X)) \mapsto$<br>\left (<br>\begin{tikzcd}<br>\mit{Eq}(X) \ar[r] \ar[d, mapsto] & \mit{Eq}(F(X)) \leq \mit{Rel}(F)(\mit{Eq}(X)) \ar[d, start anchor={[xshift=-5ex]}, end anchor = {[xshift-1ex]}, mapsto] \ar[d, start anchor={[xshift = 5ex]}, end anchor = {[xshift=1ex]}, mapsto] \\<br>X \times X \ar[r, "c \times c" above] & F(X) \times F(X) <br>\end{tikzcd}<br>\right )<br>\end{center}<br>where we use that the functor $\mit{Rel}(F)$ and $\mit{EnRel}(F)$ coincide on endorelations.\\~\\<br>Prove or disprove.<br></latex>	true. pg 112 right, lemma 4.5.2<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, logical bisimulation implies Aczel-Mendler bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! This requires the side condition that abstract epis are split.<br>pg 113 left
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if abstract epis are split then logical bisimulation implies Aczel-Mendler bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, Aczel-Mendler bisimulation implies logical bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, the span-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the cospan-of-coalgebra-maps notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. this requires the side condition that the ambient category has pushouts.<br>pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the span-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the cospan-of-coalgebra-maps notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3.<br><br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the Aczel-Mendler notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. this is only true with the side condition that the functor F preserves weak pullbacks and that diagonals are in the set of abstract monos.<br><br>pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Suppose that the functor $F$ preserves weak pullbacks, and further suppose that the diagonals $\Delta_X = \langle id_X, id_X \rangle$ are in $\frak M$. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the Aczel-Mendler notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the Aczel-Mendler notion of bisimulation implies the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left).\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. It should be possible to find a counterexample.<br>pg 113 left.<br>
<latex>~\\<br>Let $c,d : X \to \mathcal D(X)$ be two coalgebras of the distribution functor, with the same state space $X$. Consider the following statement:\\~\\<br>An equivalence relation $R \subseteq X \times X$ is then a logical bisimulation for $\mathcal D$-coalgebras $c,d$ if and only if $R$ is a `probabilistic bisimulation': for all $x,y \in X$,<br>$$ R(x,y) \Longrightarrow c(x)[Q] = d(y)[Q],~~~~\text{for each R-equivalence class } Q \subseteq X$$<br>where for $\varphi \in \mathcal D(X)$ and $U \subseteq X$ we write $\varphi[U] = \Sigma_{x \in U}~ \varphi(x)$.\\~\\<br>Prove or disprove.<br></latex>	pg 114 right, prop 4.5.4<br>
<latex>~\\<br>What is a \emph{monad}?<br></latex>	pg 130 left<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a monad $T$, coalgebras $X \to T(X)$ form a monoid, where $X$ is a fixed object.<br>For two coalgebras $c,d : X \to T(X)$ we define a `c then d' coalgebra $c \ocircle d$ as <br>$X \overset{c}{\longrightarrow} T(X) \overset{T(d)}{\longrightarrow} T^2(X) \overset{\mu_X}{\longrightarrow} T(X)$.\\~\\<br>Prove or disprove.<br></latex>	<latex>~\\<br>We just need to show that $- \ocircle -$ is a monoid operator. pg 130 top right.<br></latex><br>
Explain how the powerset functor (direct image version) is a monad. What are some variations on the powerset functor that are also monads?	pg 130 right, example 5.1.3<br>
<latex>~\\<br>Recall that coalgebras $X \to \mathcal P(X)$ of the powerset monad $\mathcal P -$ are unlabelled transition systems. What, then, is the intuitive interpretation of Klesli-composition of powerset coalgebras?<br></latex>	exactly what you would expect:<br>pg 130, bottom right
<latex>~\\<br>Explain how the distribution functor $\mathcal D$ forms a monad. What are the unit and multiplication of this monad? What, intuitively, is Klesli composition for this monad?<br></latex>	pg 131 left, item 4<br>
<latex>~\\<br>Let $M$ be a monoid. In what way does the functor $M \times (-) : \mbf{Sets} \to \mbf{Sets}$ form a monad?<br></latex>	pg 131 right, point 5<br>
Explain how the state monad works.	pg 131 right, point 6<br>
Explain how the continuation monad works.	pg 131 bottom right, point 7, spills onto pg 132<br>
Read exercise 2.2.7 on pg 38 right. Explain how the neighborhood functor is a special case of the continuation monad.	pg 131 bottom right
Explain how the semantics of Java statements can be represented as a monad.	pg 132, point 8<br>
<latex>~\\<br>Provide the definition of $\frak D : \mbf{Sets} \to \mbf{Sets}$, the Dijkstra monad on $\mbf{Sets}$.<br></latex>	pg 133 left, point 10<br>
<latex>~\\<br>Provide the definition of the Hoare monad $\mathcal H : \mbf{Sets} \to \mbf{Sets}$.<br></latex>	pg 133 left<br>
<latex>~\\<br>What is a \emph{semiring}? What is a \emph{morphism of semirings}?<br></latex>	pg 133 bottom right, def 5.1.4<br>
<latex>~\\<br>Let $S$ be a semiring. Consider the following statement:<br>The multiset functor $\mathcal M_S : \mbf{Sets} \to \mbf{Sets}$, taking multiplicities in $S$, is a monad, with unit and multiplication as for the distribution monad:<br>\begin{mathpar}<br>\eta(X) = 1 \! \mid \! x \rangle <br>\and<br>\text{and}<br>\and<br>\mu(\Sigma_i s_i \! \mid \! \varphi_i \rangle)(x) = \Sigma_i ~{s_i \cdot \varphi_i(x)}<br>\end{mathpar}<br>where $\varphi_i \in \mathcal M_S(X) = \{ \psi : X \to S \mid supp(\psi) \text{ is finite} \}$.<br></latex>	pg 134, lemma 5.1.5, lemma 5.1.5<br><br><br>
<latex>~\\<br>Let $M$ be a monoid. Consider the following statement:<br>The multiset functor $\mathcal M_M : \mbf{Sets} \to \mbf{Sets}$, taking multiplicities in $M$, is a monad.<br></latex>	IMPOSTOR. M must be a semiring for this to work. pg 134, lemma 5.1.5<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each adjunction $F \dashv G$ the endofunctor $GF$ is a monad, as depicted in<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb D \ar[d, "G"] \\<br>\mathbb C \ar[u, "F", bend left = 50, "~\dashv" right] \ar[loop below, "T = GF~\text{monad}"]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 134 right, lemma 5.1.6<br>
<latex>~\\<br>Let $T,S : \mathbb C \to \mathbb C$ be two monads on the same category. What is a \emph{map of monads} $\sigma : T \Rightarrow S$?<br></latex>	pg 134 right, def 5.1.7<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with coproducts $+$. Assume for each object $X$, the functor $X + F(-) : \mathbb C \to \mathbb C$ has an initial algebra, written as<br>\begin{center}<br>\begin{tikzcd}<br>X + F(F^*(X)) \ar[r, "\cong" below, "\alpha_X" above] & F^*(X) <br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The mapping $X \mapsto F^*(X)$ forms a monad, that is the free one on the functor $F$, via a universal natural transformation $\theta : F \Rightarrow F^*$.\\~\\<br>Prove or disprove.<br></latex>	pg 134 right, prop 5.1.8<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorization system. Consider the following statement:\\~\\<br>A morphism in the category $\mit{EnRel}(\mathbb C)$ is a pair of arrows $c : X \to Y$ and $d : X \to Y$<br>making the following diagram commute:<br>\begin{center}<br>\begin{tikzcd}<br>R \ar[d, "", mapsto] \ar[r, dotted] & S \ar[d, mapsto] \\<br>X \times X \ar[r,"c \times d" below] & Y \times Y<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	Nope. Recall the pullback-based formulation of EnRel. It requires that c = d: they cannot be distinct.<br>pg 112 top right<br>
<latex>~\\<br>Let $T$ be a monad on a category $\mathbb C$. Provide the definition of the \emph{Kleisli} category $\mathcal K \ell(T)$.<br></latex>	pg 137 right, def 5.2.1
<latex>~\\<br>The Klesli category $\mathcal K \ell(\mathcal P)$, where $\mathcal P$ is the powerset functor, is a well known category. Explain.<br></latex>	It is SetsRel.<br><br>pg 138 top left.<br>
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>There is an adjunction<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell (T) \ar[d, "U" right, "\dashv" left] \\<br>\mathbb C \ar[u, bend left = 38, "J" left]<br>\end{tikzcd}<br>\end{center}<br>where\\~\\<br>\left \{ \begin{array}{l} U(Y) = T(Y) \\ U(f) = \mu \circ T(f) \end{array} \right ~ \\~\\<br>and\\~\\<br>\left \{ \begin{array}{l} J(X) = X \\ J(f) = \eta \circ f \end{array} \right ~ \\~\\<br>\text{Prove or disprove.}<br></latex>	true. pg 138, prop 5.2.2 (1)<br>TODO: add impostor<br>
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>If the monad $T$ comes as $T = HL$ from an adjunction $L \dashv H$ (as in lemma 5.1.6 on pg 134)<br>then there is a `comparison' functor $K$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell (T) \ar[rr, "K"] \ar[dr, "~U" above, "\dashv~~" left] & & \ar[dl,"H" right, bend left = 40, "\dashv~~~" above] \mathbb D \\<br> & \ar[ul, "J" below, bend left = 40] \mathbb C \ar[ur, "L~" above] \ar[loop below, "T = HL" right] & <br>\end{tikzcd}<br>\end{center}<br>where\\~\\<br>$\left \{ \begin{array}{l} K(Y) = L(Y) \\ K(f) = \varepsilon \circ L(f) \end{array} \right ~$ \\~\\<br>The functor comparison functor $K$ satisfies $K \circ J = L$ and $H \circ K = U$.\\~\\<br>Prove or disprove.<br></latex> 	true. pg 138, prop 5.2.2 (2)<br>todo: add impostor?
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>The Kleisli category inheirts coproducts and coequalizers from $\mathbb C$ - if any - and $J : \mathbb C \to \mathcal K \ell (T)$ preserves them.\\~\\<br>Prove or disprove. <br></latex>	true. pg 138 left, prop 5.2.2 (3)<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category with<br>\begin{itemize}<br>\item a mapping $\mathbb C \ni X \mapsto T(X) \in \mathbb C$, on objects only<br>\item a map $\eta_X : X \to T(X)$, for each $X \in \mathbb C$<br>\end{itemize}<br>Then consider the following statement:\\~\\<br>The following are equivalent.<br>\begin{enumerate}<br>\item The mapping $X \mapsto T(X)$ is functorial, $\eta$ is a natural transformation, and there is a natural transformation $\mu : T^2 \Rightarrow T$ making $(T, \eta, \mu)$ a monad.<br>\item There is a `Kleisli extension' operation $(-)^{\$}$ sending <br>\begin{mathpar}<br>X \overset{f}{\longrightarrow} T(Y) <br>\and<br>\text{to}<br>\and<br>T(X) \overset{f^{\$}}{\longrightarrow} T(Y)<br>\end{mathpar}<br>in such a way that the following equations hold<br>\begin{mathpar}<br>f^\$ \circ \eta = f \and \eta^\$ = id \and g^\$ \circ f^\$ = (g^\$ \circ f)^\$<br>\end{mathpar}<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 138, bottom right
<latex>~\\<br>Let $T : \mathbb C \to \mathbb C$ be a monad and $F : \mathbb C \to \mathbb C$ an ordinary endofunctor, both on the same category $\mathbb C$. What is a \emph{distributive law} or $\mathcal K \ell$\emph{-law} of $F$ over $T$? <br></latex>	pg 139 right, def 5.2.4<br>
<latex>~\\<br>Let $T : \mathbb C \to \mathbb C$ be a monad and $F : \mathbb C \to \mathbb C$ a functor. Consider the following statement:\\~\\<br>There is a bijective correspondence between<br>\begin{enumerate}<br>\item A distributive $\mathcal K \ell$-law $\lambda : FT \to TF$<br>\item a lifting of $F : \mathbb C \to \mathbb C$ to a functor $\mathcal K \ell (F) : \mathcal K \ell(T) \to \mathcal K \ell (T)$ in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell(T) \ar[r, "\mathcal K \ell(F)"] & \mathcal K \ell (T) \\<br>\mathbb C \ar[u, "J"] \ar[r, "F" below] & \mathbb C \ar[u, "J"] <br>\end{tikzcd}<br>\end{center}<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 139 right, prop 5.2.5
<latex>~\\<br>Let $F$ be an endofunctor and $T$ a monad on a category $\mathbb C$, together with a distributive $\mathcal K \ell$-law $FT \Rightarrow TF$ of $F$ over $T$. Consider the following statement:\\~\\<br>The adjunction $J \dashv U$ between the Kleisli category $\mathcal K \ell(T)$ and $\mathbb C$ lifts to an adjunction $\mbf{Alg}(J) \vdash \mbf{Alg}(U)$ by Theorem 2.5.9 on page 58 left.\\~\\<br>Prove or disprove.<br></latex>	NOTE: this is a *corollary* to proposition 5.2.5 on pg 139 bottom right; understanding that proposition is very important context for understanding the corollary. The paragraph directly above this corollary statement is very important as well.<br><br>true. pg 140 bottom left / corollary 5.2.6.<br><br>todo: add impostor?<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each weak-pullback-preserving functor $F : \mbf{Sets} \to \mbf{Sets}$ there is a distributive $\mathcal K \ell$-law $\triangledown : F \mathcal P \to \mathcal P F$ obtained by applying relation lifting to the reverse inhabitation relation $\ni \subseteq \mathcal P(X) \times X$. <br>This $\triangledown$ may be used to describe relation lifting: if, for an arbitrary relation $R \subseteq X \times Y$ we write $\hat{R} : X \to \mathcal P(Y)$ for the corresponding function, as in (2.16, pg 28 left), then the following triangle commutes:<br>\begin{center}<br>\begin{tikzcd}<br> & F \mathcal P(Y) \ar[dd, "\triangledown" right] \\<br>F(X) \ar[dr, "\widehat{\mit{Rel}(F)(R)}~~~~~~" below] \ar[ur, "F(\hat{R})~~~" above] & \\<br> & \mathcal P F(Y)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 140 right, lemma 5.2.7.<br>todo: add impostor?<br><br>
<latex>~\\<br>A weak-pullback-preserving functor $F : \mbf{Sets} \to \mbf{Sets}$ has two liftings: a `computational' one and a 'logical' one. Provide the definition of each.<br></latex>	pg 141 right, corollary 5.2.8<br>
<latex>~\\<br>What does it mean for a functor to be \emph{strong}? What does it mean for a monad to be strong?<br></latex>	pg 142 left column.<br>
<latex>~\\<br>What does it mean for a strong monad to be \emph{commutative}? With respect to commutative strong monads, what does $\mit{dst}$ denote?<br></latex>	pg 142, def 5.2.9 (3)<br>
<latex>~\\<br>Let $T$ and $S$ be monads. What does it mean for a map of monads $\sigma : T \Rightarrow S$ to be a \emph{strong map}?<br></latex>	pg 142 right, def 5.2.9 (4)
<latex>~\\<br>Provide the definition of the categories $\mbf{CMnd}(\mathbb C)$ and $\mbf{StMnd}(\mathbb C)$.<br></latex>	pg 142 left, below def 5.2.9
<latex>~\\<br>Consider the following statement:\\~\\<br>$\mbf{StMnd}(\mbf{Sets}) = \mbf{Mnd}(\mbf{Sets})$\\~\\<br>Prove or disprove.<br></latex>	pg 142 right, lemma 5.2.10<br>todo: add impostor? Maybe find some alternative category for sets where this equality does not hold?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A monoid $M$ is commutative if and only if the associated monad $M \times (-) : \mbf{Sets} \to \mbf{Sets}$ is commutative.\\~\\<br>Prove or disprove.<br></latex>	pg 143, lemma 5.2.11 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A semiring $S$ is commutative if and only if the multiset monad $\mathcal M_S : \mbf{Sets} \to \mbf{Sets}$ is commutative.\\~\\<br>Prove or disprove.<br></latex>	pg 143 left, lemma 5.2.11 (2)<br>
<latex>~\\<br>Let $T : \mbf{Sets} \to \mbf{Sets}$ be a commutative monad, and $F : \mbf{Sets} \to \mbf{Sets}$ a simple polynomial functor. Consider the following statement:\\~\\<br>There is a distributive $\mathcal K \ell$-law $\lambda : FT \Rightarrow TF$\\~\\<br>Prove or disprove.<br></latex> 	pg 143 right, lemma 5.2.12<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with finite products and $T : \mathbb C \to \mathbb C$ a commutative monoid. Consider the following statement:\\~\\<br>The cartesian product then becomes a functor $\times : \mathcal K \ell (T) \times \mathcal K \ell (T) \to \mathcal K \ell (T)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 143 right, prop 5.2.13<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor, on a category $\mathbb C$ with a logical factorisation system, which has an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$. Consider the following statement:\\~\\<br>Each logical congruence is reflexive. More precisely, suppose we have two arbitrary algebras $a : F(X) \to X$ and $b : F(Y) \to Y$ and a relation $\langle r_1, r_2 \rangle : R \mapsto X \times Y$. Assume this $R$ is a logical congruence, in the sense that the pair $(a,b)$ forms an algebra $\mit{Rel}(F)(R) \to R$ in the category $\mit{Rel}(\mathbb C)$ of relations. Then there is a map $\mit{Eq}(A) \to R$ in $\mit{Rel}(\mathbb C)$, namely:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Eq}(A) \ar[r, dashed] \ar[d, mapsto] & \ar[d, mapsto] R \\<br>A \times A \ar[r, "\mit{int}_a \times \mit{int}_b" below] & X \times Y<br>\end{tikzcd}<br>\end{center}<br>where $\mit{int}_a : A \to X$ and $\mit{int}_b : A \to Y$ are the algebra homomorphisms obtained by initiality.\\~\\<br>Prove or disprove.<br></latex>	true. pg 115, theorem 4.5.5.<br>todo: add impostor?<br>
<latex>~\\<br>Assume relation lifting preserves equality. Consider the following statement:\\~\\<br>The lifted equality functor $\mit{Eq}(-) : \mbf{Alg}(F) \to \mbf{Alg}(EnRel(F))$ preserves initial objects.\\~\\<br>Thus, if $F(A) \overset{\cong}{\to} A$ is initial in the category $\mbf{Alg(F)}$, then the logical congruence $\mit{Eq}(A) \mapsto A \times A$ is initial in $\mbf{Alg}(\mit{EnRel}(F))$, i.e. is the initial logical congruence.\\~\\<br>Prove or disprove.<br></latex>	true. pg 115, corollary 4.5.6<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system. What does it mean for $\mathbb C$ to \emph{admit quotients}?<br></latex>	pg 116 left, def 4.5.7<br>
<latex><br>Assume a logical factorisation system with quotients on a category $\mathbb C$, and an endofunctor $F : \mathbb C \to \mathbb C$ whose relation lifting $\mit{Rel}(F)$ preserves equality. Consider the following statement:\\~\\<br>The coinduction principle holds: the equality functor $\mit{Eq}(-) : \mbf{Coalg}(F) \to \mbf{CoAlg}(\mit{EnRel}(F))$ from lemma 4.5.2 preserves final objects.\\~\\<br>Prove or disprove.  <br></latex>	pg 116 left, theorem 4.5.8<br>todo: add impostor?<br>
Java statements can be modeled as coalgebras or Kleisli maps. Explain the distinction between these two approaches.	pg 5612<br>
<latex>~\\<br>Let $F$ be the list functor: $F(X) \doteq 1 + L \times X$. Let $c : X \to \mathcal PF(X)$ be a coalgebra<br>in the Kleisli category $\mathcal K \ell(\mathcal P)$. How, intuitively, can we think of such a coalgebra: what is its practical significance? What is a \emph{trace} for such a coalgebra $c$?<br></latex>	It's a transition system, and trace is defined on:<br>pg 146, top left<br>
<latex>~\\<br>Let $F(X) \doteq 1 + A \times X$ be the list functor on $\mbf{Sets}$. Concretely describe the lifted functor $\mathcal K \ell(F) : \mbf{SetsRel} \to \mbf{SetsRel}$.<br></latex>	pg 146 right, "First we need to move..."<br>
<latex>~\\<br>Complete the following statement:\\<br>A transition system, or $\mathcal P F$-coalgebra in $\mbf{Sets}$, is a $\mathcal K \ell(F)$-coalgebra<br>in the category \underline{~~~~~~~~~~}.<br></latex>	SetsRel<br>pg 146, bottom right, point 1<br>
<latex>~\\<br>Let $\mit{trace}_c : X \to \mathcal P(L^*)$ be the \emph{trace coalgebra}, where $c : X \to \mathcal P(1 + L \times X)$ is a transition system coalgebra. Consider the following statement:\\~\\<br>If we consider $\mit{trace}_c$ as a homomorphism in $\mbf{SetsRel}$, then it is a homomorphism of $\mathcal K \ell(F)$-coalgebras in $\mbf{SetsRel}$:<br>\begin{center}<br>\begin{tikzcd}[sep=60]<br>F(X) \ar[r,"\mit{Rel}(F)(\mit{trace}_c)" above] & F(L^*) \\<br>X  \ar[u,"c" left] \ar[r,"\mit{trace}_c" below] & \ar[u, "\cong" left, "\mit{Graph}(\alpha^{-1})" right] L^*<br>\end{tikzcd}<br>\end{center}<br>where $\alpha = [\mit{nil}, \mit{cons}] : F(L^*) \overset{\cong}{\to} L^*$ is the initial algebra map, and the graph functor $\mit{Graph}(-) : \mbf{Sets} \to \mbf{SetsRel}$ is the canonical map $J : \mbf{Sets} \to \mathcal K \ell(\mathcal P)$ described in prop 5.2.2 pg 138.<br></latex>	true. pg 146 bottom right, pg 147 top left.<br><br>Read point 3 on pg 147 while you're at it.<br>
<latex>~\\<br>Consider a natural transformation $\alpha : SF \Rightarrow FT$ in a situation:<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb A \ar[r, "S"] & \mathbb A \\<br>\mathbb B \ar[u, "F" left] \ar[r, "T" below] & \mathbb B \ar[u, "F" right]<br>\end{tikzcd}<br>\end{center}<br>It induces a lifting of $F$ to a functor $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(T) \ar[r, "\mbf{Alg}(F)", mapsto] & \mbf{Alg}(S) \\<br>(T(X) \overset{a}{\to} X) \ar[r, mapsto] & (SF(X) \overset{\alpha_x}{\to} FT(X) \overset{F(a)}{\to} F(X) <br>\end{tikzcd}<br>\end{center}<br>If $\alpha$ is an isomorphism, then a right adjoint $G$ to $F$ induces a right adjoint $\mbf{Alg}(G)$ to $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\mathbb A \ar[d, "G" right, bend left = 30] & \ar[l, "U" above] \mbf{Alg}(S) \ar[d, "\mbf{Alg}(G)" right, bend left = 30] \\<br>\mathbb B \ar[u, "F" left, "~~\dashv" right, bend left = 30] & \ar[l, "U" below] \mbf{Alg}(T) \ar[u, "\mbf{Alg}(F)" left, "~~\dashv" right, bend left = 30]<br>\end{tikzcd}<br>\end{center}<br>where the $U$s are forgetful functors. The functor $\mbf{Alg}(G)$ arises from $\beta : TG \Rightarrow GS$, the adjoint transpose of $FTG \cong SFG \overset{S\epsilon}{\Longrightarrow} S$.\\~\\<br>Prove or disprove.<br></latex>	true. page 104 (yep, it's in a previous chapter, but it's relevant to this one)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a weak-pullback-preserving functor with an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$. Consider the following statements:\\~\\<br>Lemma 5.2.7 on page 140 left then yields a distributive $\mathcal K \ell$-law $F \mathcal P \Rightarrow \mathcal P F$ and thus a lifting of $F$ to an endofunctor $\mathcal K \ell(F)$ on the Kleisli category $\mathcal K \ell(\mathcal P) = \mbf{SetsRel}$.\\~\\<br>The map $\mit{Graph}(\alpha^{-1}) : A \overset{\cong}{\to} \mathcal K \ell(F)(A)$ is then a final coalgebra in $\mbf{SetsRel}$ for the lifted functor $\mathcal K \ell(F) : \mbf{SetsRel} \to \mbf{SetsRel}$.\\~\\<br>Prove or disprove. <br></latex>	true. pg 147 right, theorem 5.3.1<br>
<latex>~\\<br>In what way is a context-free grammar a coalgebra in $\mbf{SetsRel}$? Calling this coalgebra $g$, describe its trace $\mit{trace}_g$.<br></latex>	pg 148 left, example 5.3.2<br>
What does it mean for a category to be <i>dcpo-enriched</i>? Give an example of a dcpo-enriched category.	pg 148, bottom left (note that their example is a complete lattice: closed under all joins, but directed ones in particular)<br><br>
<latex>~\\<br>What does it mean for a map $f : X \to Y$ in a dcpo-enriched category to be an \emph{embedding}?<br></latex>	pg 148, upper right<br>
What is a <i>coreflection</i>?	pg 148, upper right<br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then consider the following statement:\\~\\<br>The coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$.\\~\\<br>Prove or disprove.<br></latex>	pg 148, prop 5.3.3 (1)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then it can be proven that the coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$. Consider the following statement:\\~\\<br>The projections $\pi_n : A \to X_n$ are jointly monic: if $h,h' : Y \to A$ satisfy $\pi_n \circ h = \pi_n \circ h'$ for all $n \in \mathbb N$, then $h = h'$.<br>\\~\\<br>Prove or disprove.<br></latex>	true. pg 148 right, prop 5.3.3 (3)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then it can be proven that the coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$. Consider the following statement:\\~\\<br>For a cone $g_n : Y \to X_n$, where $f_n^P \circ g_{n+1} = g_n$, there is a unique mediating map $g : Y \to A$, given by $g = \bigvee_n \kappa_n \circ g_n$.<br>\\~\\<br>Prove or disprove.<br></latex>	true pg 148, bottom right, prop 5.3.3 (4)
<latex>~\\<br>Assume we have the following data on a category $\mathbb C$.<br>\begin{itemize}<br>\item Both an initial and final object $0,1 \in \mathbb C$<br>\item A monad $T : \mathbb C \to \mathbb C$ for which<br>\begin{enumerate}<br>\item the Kleisli category $\mathcal K \ell(T)$ is dcpo-enriched<br>\item the map $T(0) \to 1$ is an isomorphism, so that $0 \in \mathcal K \ell(T)$ is a zero object<br>\item the resulting zero maps ($X \overset{!}{\longrightarrow} 0 \overset{!}{\longrightarrow} Y$) in $\mathcal K \ell (T)$ are least elements in the hom-set dcpos.<br>\end{enumerate}<br>\item A functor $F : \mathbb C \to \mathbb C$ for which<br>\begin{enumerate}<br>\item there is a distributive $\mathcal K \ell$-law $FT \Rightarrow TF$, or equivalently by Proposition 5.2.5, a lifting $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$.<br>\item this lifting $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$ is `locally monotone': $f \leq g$ implies $\mathcal K \ell (T)(f) \leq \mathcal K \ell(T)(g)$.<br>\item there is an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$ in $\mathbb C$, obtained as colimit of the chain $F^n(0)$ as in (4.12). <br>\end{enumerate}<br>\end{itemize}<br>Consider the following statement:\\~\\<br>The map $J(\alpha^{-1}) : A \overset{\cong}{\longrightarrow} F(A) = \mathcal K \ell(F)(A)$ is then a final coalgebra in the Kleisli category $\mathcal K \ell (T)$, for the lifted functor $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$.\\~\\<br>Prove or disprove.<br></latex>	pg 149, bottom right<br>
<latex>~\\<br>Let $\ni_X$ be the reverse inclusion relation on $X$ in the category $\mbf{Sets}$, i.e., $\ni_X : \ni_X \mapsto \mathcal P(X) \times X$.<br>Consider the following statement:\\~\\<br>$(\mathcal{P}(f) \times \mit{id})^{-1}(\ni_Y) = \coprod_{id \times f}(\ni_X)$\\~\\<br>Prove or disrpove.<br></latex>	<latex>~\\<br>true. pg 141 left. todo: add impostor? The solution is not given in the book, so we provide it here:\\~\\<br>First, for a function $f : X \to Y$, consider $(\mathcal P(f) \times id_Y)^{-1}$ its signature is<br>$\mathcal P(\mathcal P(Y) \times Y) \to \mathcal P(\mathcal P(X) \times Y)$. It's defined as <br>$(\mathcal P(f) \times id_Y)^{-1}(A \subseteq \mathcal P(Y) \times Y) \doteq \{ (U,y) \mid (f[U],y) \in A \}$.\\~\\<br>Now, we describe $\ni_Y$ at a more low level as $\{ (V,y) \mid V \subseteq Y \wedge y \in V \}$.\\~\\<br>Then we have $(\mathcal P(f) \times id_Y)^{-1}(\ni_Y) = (\mathcal P(f) \times id_Y)^{-1}(\{ (V,y) \mid V \subseteq Y \wedge y \in V \}) = \{ (U \subseteq X, y) \mid y \in f[U] \}$.\\~\\~\\<br>On the other hand, consider the expression $\coprod_{\mit{id} \times f}(\ni_X)$; as a reminder, this refers to the top-right object of the following epi-mono decomposition:<br>\begin{center}<br>\begin{tikzcd}<br>\ni_X \ar[d,mapsto, "\ni_X" left] \ar[r, two heads] & \ar[d, mapsto, "\coprod_{\mit{id} \times f} \ni_X" right] \coprod_{\mit{id} \times f}(\ni_X) \\<br>\mathcal PX \times X \ar[r,"\mit{id} \times f" below] & \mathcal PX \times Y<br>\end{tikzcd}<br>\end{center}<br>Upon reflection, it's not hard to see that this is the same set we described above.<br></latex>
<latex>~\\<br>Let $\eta_X$ be the unit of the powerset monad at a set $X$. Let $\ni_X \subseteq \mathcal P(X) \times X$ be the reverse inclusion relation. Consider the following statement:<br>$$(\eta_X \times \mit{id}_X)^{-1}(\ni_X) = \mit{Eq}(X)$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>true. pg 141 left. proof isn't given in the book, so here it is:\\~\\<br>First note the ``signature'': $(\eta_X \times \mit{id_X})^{-1} : \mathcal P(\mathcal P(X) \times X) \to \mathcal P(X \times X)$\\~\\<br>Then note that $$(\eta_X \times \mit{id}_X)^{-1}(A \subseteq \mathcal P(X) \times X) = \{ (x_1,x_2) \in X \times X \mid (\{ x_1 \}, x_2) \in A \}$$<br>Finally, we have<br>$$(\eta_X \times \mit{id}_X)^{-1}(\ni_X) = \{ (x_1, x_2) \in X \times X \mid x_2 \in \{ x_1 \} \} = \{ (x_1,x_2) \mid x_2 = x_1 \} = \mit{Eq}(X)$$<br>TODO: add impostor?<br></latex>
<latex>~\\<br>Let $\mu_X : \mathcal P^2(X) \to \mathcal P(X)$ be the multiplication for the powerset monad and let $\ni_X \subseteq \mathcal P(X) \times X$ be the reverse of the $\in_X : X \times \mathcal P(X)$ relation.<br>Consider the following statement:\\~\\<br>$$(\mu_X \times id)^{-1} (\ni_X) = \ni_X \circ \ni_{\mathcal P(X)}$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>true. pg 141 left.\\~\\<br>First, note the ``type signature'' $(\mu_X \times \mit{id}_X)^{-1} : \mathcal P(\mathcal P(X) \times X) \to \mathcal P(\mathcal P^2(X) \times X)$.\\~\\<br>Then, note that $$(\mu_X \times \mit{id}_X)^{-1}(A \subseteq \mathcal P(X) \times X) = \{ (V \in \mathcal P^2(X), x) \mid (\bigcup V, x) \in A \}$$<br>Finally, we have $$(\mu_X \times \mit{id}_X)^{-1}(\ni_X) = \{ (V \in \mathcal P^2(X),x) \mid x \in \bigcup V \} = \{ (V \in \mathcal P^2(X),x) \mid \exists Q \in V.~x \in Q \}$$<br>It's not hard to see that this is equal to <br>$$\ni_X \circ \ni_{\mathcal P(X)}$$<br></latex>
<latex>~\\<br>Let $T = (T, \eta, \mu)$ be a monad on a category $\mathbb C$. Provide the definition of the category $\mathcal E \mathcal M(T)$.<br></latex>	pg 154 left, def 5.4.1<br>
<latex>~\\<br>What is the difference between a \emph{functor algebra} and a \emph{monad algebra}?<br></latex>	pg 154 right<br>
<latex>~\\<br>Let $S : \mathbb C \to \mathbb C$ be a comonad. Consider the following statement:\\~\\<br>The obvious forgetful functor $\mathcal E \mathcal M (S) \to \mathbb{C}$ has a right adjoint.\\~\\<br>Prove or disprove.<br></latex>	pg 155 left<br>
<latex>~\\<br>Let $S$ be a comonad on a category $\mathbb C$. Then the obvious forgetful functor $\mathcal U : \mathcal{EM}(S) \to \mathbb C$ has a right adjoint $\mathcal G : \mathbb C \to \mathcal{EM}(T)$ defined as $\mathcal G(Y) \doteq S(Y) \overset{\delta_Y}{\to} S^2(Y)$. Describe the monad that this adjunction gives rise to. <br></latex>	<latex>~\\<br>\[\begin{tikzcd}<br> SX & {S^2X} && SSSX & SX \\<br> X & SX && SSX & X<br> \arrow["\alpha"', from=2-1, to=2-2]<br> \arrow["\alpha", from=2-1, to=1-1]<br> \arrow["{S \alpha}", from=1-1, to=1-2]<br> \arrow["{\delta_X}"', from=2-2, to=1-2]<br> \arrow["{S \epsilon;\epsilon}"', from=2-4, to=2-5]<br> \arrow["{\delta_{SX}}", from=2-4, to=1-4]<br> \arrow["{SS \epsilon; S \epsilon}", from=1-4, to=1-5]<br> \arrow["\alpha"', from=2-5, to=1-5]<br> \arrow["{S \epsilon}"{description}, from=2-4, to=1-5]<br>\end{tikzcd}\]<br></latex><br><br><br>pg 155 left, lemma 5.4.2<br>also see exercise 5.4.8 (dual of this)<br><br>
<latex>~\\<br>What is a \emph{monoid action}? How is a monoid action a type of monad algebra?<br></latex>	pg 155, example 5.4.3 (1), bottom right
<latex>~\\<br>Recall the definition of a semiring. (It's on pg 133 right if you need help.) Recall how the multiset functor on a semiring $\mathcal M_S$ forms a monad. (This is described in lemma 5.1.5 on pg 134 left.)<br>Letting $S$ be a semiring, show that the monad algebras of $\mathcal M_S$ correspond to the modules (recall that the notion of a module is a generalization of that of a vector space) over the semiring $S$.<br></latex>	pg 155, bottom right, example 5.4.3 (2)<br>spills onto pg 156 top left<br>
<latex>~\\<br>Show that each monad algebra $\alpha : \mathcal P(X) \to X$ of the powerset monad encodes a poset. Further, show that this poset is more specifically a complete lattice. What are algebra maps between such algebras?<br></latex>	pg 156 left, example 3 near bottom<br><br>the maps are continuous functions. they preserve joins.
<latex>~\\<br>Define the \emph{ideal monad} $\mathit{Idl} : \mbf{Posets} \to \mbf{Posets}$.  What, concretely, are monad algebras $\mathit{Idl}(X) \to X$?<br></latex>	pg 156 right, example 4<br>make sure to examine what it means for these algebras to satisfy the laws (5.18), shown on pg 154 left.
<latex>~\\<br>Consider the following statement:\\~\\<br>The Eilenberg-Moore category $\mathcal{EM}(T)$ for a monad $T : \mathbb C \to \mathbb C$ has the same kind of limits as the underlying category $\mathbb C$. (By ``kind of limits'' we mean ``type of diagram'', i.e. the domain category of the diagram functor; search for ``diagram of type J'' in awodey.)\\~\\<br>Prove or disprove.<br></latex>	pg 157 left, lemma 5.4.4.<br>(It isn't proven here, but a hint is provided in the statement of the lemma.).<br>Also note that this applies to all algebra categories, not just the special case of Eilenberg-Moore categories.<br><br>Note that we can look at the domains of our EM-algebras and the codomains of our EM-algebras, and both collections form J-diagrams. From there, the rest of the reasoning should be simple.<br>The limit of the domains is a cone of the codomain diagram, and therefore it has a unique arrow to the limit of codomains.<br><br><br>
Read pg 157, starting at "The following useful result..." on the bottom left, down to "Under suitable circumstances...".<br><br>This stretch of text involves several unproven lemma statements, which is why I did not make traditional cards for it.<br><br>	<latex>~\\<br>It may at first be a little ambiguous as to what a bihomomorphism is: a bihomomorphism is simply taking to separate algebra homomorphisms, one from $\alpha$ to $\gamma$ and the other from $\beta$ to $\gamma$, <br>and combining them into a single ``bihomomorphism'' from $\alpha \times \beta$ to $\gamma$, as depicted in the diagram directly above prop 5.4.7\\~\\<br>pg 157<br></latex>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an arbitrary functor. Recall the free monad $F^* : \mathbb C \to \mathbb C$ on page 134 (right side), and the cofree comonad $F^{\infty}$ on $F$ from exercise 5.1.15, described via the initial algebras and final coalgebras:<br>\begin{center}<br>\begin{tikzcd}<br>X + F(F^*(X)) \ar[r,"\alpha_X" above, "\cong" below] & F^*(X)<br>\end{tikzcd}<br>\text{~~~and~~~}<br>\begin{tikzcd}<br>F^{\infty}(X) \ar[r, "\zeta_X" above, "\cong" below] & X \times F(F^{\infty}(X))<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>Assuming the above constructions exist in $\mathbb C$, there are isomorphisms of categories of monad (co)algebras and functor (co)algebras:<br>$$\mathcal{EM}(F^*) \cong \mbf{Alg}(F)\text{~~~~and~~~~}\mathcal{EM}(F^{\infty}) \cong \mbf{CoAlg}(F)$$<br>Prove or disprove.<br></latex>	pg 157 bottom right, prop 5.4.7, spills onto next page.<br>
<latex>~\\<br>Let $T$ be a commutative monad.<br>What is a \emph{bihomomorphism} of $T$-algebras? <br></latex>	<latex>~\\<br>It is a single morphism $f : X \times Y \to Z$ which serves as an algebra ``homomorphism'' simultaneously from both algebras $\alpha : T(X) \to X$ and $\beta : T(Y) \to Y$ to $\gamma : T(Z) \to Z$ I.e., it is a single ``bihomomorphism'' from $\alpha \times \beta : F(X) \times F(Y) \to X \times Y$ to $\gamma : T(Z) \to Z$, as depicted in the figure on pg 157 right.<br></latex>
<latex>~\\<br>Let $T : \mathbb{C} \to \mathbb{C}$ be a monad and $G : \mathbb{C} \to \mathbb{C}$ an ordinary functor. What is a \emph{distributive law} a.k.a. $\mathcal{EM}$-\emph{law} of $T$ over $G$?<br></latex>	pg 158, bottom right corner, def 5.4.8, spills onto next page<br>
<latex>~\\<br>Scroll half-way up on pg 159 so that you can see prop 5.4.9 but not its proof. Prove prop 5.4.9.<br></latex>	pg 159 left<br><br><latex>~\\~\\<br>\[\begin{tikzcd}<br> &&& GX && GY \\<br> X & Y & \mapsto & GTX && GTY \\<br> TX & TY && TGX && TGY<br> \arrow["\alpha", from=3-1, to=2-1]<br> \arrow["\beta"', from=3-2, to=2-2]<br> \arrow["Tf"', from=3-1, to=3-2]<br> \arrow["f", from=2-1, to=2-2]<br> \arrow["{\rho_X}", from=3-4, to=2-4]<br> \arrow["{G \alpha}", from=2-4, to=1-4]<br> \arrow["TGf"', from=3-4, to=3-6]<br> \arrow["{\rho_Y}"', from=3-6, to=2-6]<br> \arrow["{G \beta}"', from=2-6, to=1-6]<br> \arrow["{G f}", from=1-4, to=1-6]<br> \arrow["GTf", from=2-4, to=2-6]<br>\end{tikzcd}\]<br><br>\[\begin{tikzcd}<br> && GX \\<br> && GTX \\<br> GX && TGX<br> \arrow["{\eta_{GX}}"', from=3-1, to=3-3]<br> \arrow["{\rho_X}"', from=3-3, to=2-3]<br> \arrow["{G \eta_X}"{description}, from=3-1, to=2-3]<br> \arrow[curve={height=-12pt}, equals, no head, from=3-1, to=1-3]<br> \arrow["{G \alpha}"', from=2-3, to=1-3]<br>\end{tikzcd}\]<br><br><br>For functoriality of $R$, assuming $Tf;b = a;f$, we need the following diagram to commute:<br>\begin{center}<br>\begin{tikzcd}<br>TGX \ar[d, "\rho; Ga" left] \ar[r, "TGf"] & \ar[d, "\rho;Gb"] TGY \\<br>GX \ar[r, "Gf" below] & GY<br>\end{tikzcd}<br>\end{center}<br>We have this, since $TGf;\rho;Gb = \rho Gtf;Gb = \rho;G(Tf;b)=\rho;G(a;f)=\rho;Ga;Gf$.<br></latex><br><br>
<latex>~\\<br>Let $T$ be a monad and $G$ an endofunctor on a category $\mathbb C$, with an $\mathcal{EM}$-law $\rho : TG \Rightarrow GT$ between them. Consider the following statement:\\~\\<br>If $G$ has a final coalgebra $\zeta : Z \overset{\cong}{\to} G(Z)$ in $\mathbb C$, then $Z$ carries an Eilenberg-Moore algebra structure obtained by finality, as in <br>\begin{center}<br>\begin{tikzcd}<br>GT(Z) \ar[r,dashed,"G(\beta)"] & G(Z) \\<br>T(Z) \ar[u, "\rho \circ T(\zeta)" left] \ar[r,dashed,"\beta" below] & Z \ar[u,"\cong" left, "\zeta" right]<br>\end{tikzcd}<br>\end{center}<br>The map $\zeta$ then forms a map of algebras as below, which is the final coalgebra for the lifted functor $\mathcal{EM}(G) : \mathcal{EM}(T) \to \mathcal{EM}(T)$:<br>\begin{center}<br>$\ddisp{T(Z)}{\beta}{Z}$ <br>\begin{tikzcd}<br> ~ \ar[r,"\zeta" above, "\cong" below] & ~<br>\end{tikzcd}<br>$\mathcal{EM}(G) \ddisp{T(Z)}{\beta}{Z} = \ddisp{TG(Z)}{G(\beta) \circ \rho}{G(Z)}$ <br>\end{center}<br>Prove or disprove.<br></latex>	<br>pg 159 right, prop 5.4.10<br><br><latex>~\\<br>To show that $\beta$ is an $\mathcal {EM}$-algebra, proving the unit law is interesting.\\~\\<br>We have $\eta ; \beta = \eta;(T \zeta ; \rho ; G(\beta) ; \zeta^{\circ})$\\~\\<br>\begin{tabular}{lll}<br>$\eta ; \beta$ & $= \eta (T \zeta ; \rho ; G \beta ; \zeta^{\circ})$ & \\<br> & $= \zeta;\eta;\rho;G \beta;\zeta^{\circ}$ & (naturality of $\eta$) \\<br> & $= \zeta;G \eta; G \beta;\zeta^\circ$ & ($\mathcal{EM}$-law $\eta$ property)\\<br> & $= \zeta;G(\eta;\beta);\zeta^\circ$<br>\end{tabular}~\\~\\<br>Then, post-composing by $\zeta$ on both sides gives:<br>$$\eta ; \beta; \zeta = \zeta ; G(\eta;\beta); \zeta^{\circ} ; \zeta = \zeta ; G(\eta;\beta)$$<br>In words, $(\eta;\beta) : Z \to Z$ is an algebra map from $\zeta$ to $\zeta$. Since $\zeta$ is a final coalgebra and $\mathit{id}_Z : Z \to Z$ is also an algebra map from $\zeta$ to $\zeta$, we have $\eta;\beta = \mathit{id}_Z$.<br></latex><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Given an $\mathcal{EM}$-law of the form $TG \Rightarrow GT$, the free algebra functor $\mathcal F : \mathbb C \to \mathcal{EM}(T)$ can be lifted, as in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{CoAlg}(GT) \ar[r, "\mathcal F_{\mathcal{EM}}"] \ar[d] & \ar[d] \mbf{CoAlg}(\mathcal{EM}(G)) \\<br>\mathbb{C} \ar[loop left, "G" left] \ar[loop below, "T" below] \ar[r, "\mathcal F" above] & \ar[loop right, "\mathcal{EM}(G)"] \mathcal{EM}(T)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 159 right, lemma 5.4.11.<br><br>todo: add impostor?
<latex>~\\<br>Discuss the distinction between $\mathcal{EM}$-laws and $\mathcal{KL}$-laws.<br></latex>	For this, you will want to open two copies of NewMiscStudy (use Okular), one to page 158 (EM laws are discussed in the bottom right, def 5.4.8) and one to page 139 (where KL laws are discussed at the top right)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. What does $\mathit{Pred}(F)$ denote?<br></latex>	pg 174 left, def 6.1.1
<latex>~\\<br>Let $F: \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Consider the following statement:<br>\begin{center}<br>$\mathit{Rel}(F)(\coprod_{\Delta_X}(P)) = \coprod_{\Delta_{F(X)}}(\mathit{Pred}(F)(P))$<br>\end{center}<br>where $\Delta_X \doteq \langle id_X, id_X \rangle$.<br>Prove or disprove.<br></latex>	true. pg 174, lemma 6.1.2.<br>proven by induction...ah. I tried doing some factorisation system diagram chasing and got stuck. I wonder what the categorical genralization (if any) of this is.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Consider the following statement:<br>\begin{center}<br>$\mathit{Pred}(F)(\coprod_{\pi_i}(R)) = \coprod_{\pi_i}(\mathit{Rel}(F)(R))$<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 174 left, lemma 6.1.2. TODO: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Let $X$ be a set and $P \subseteq X$ a predicate on $X$. How can we express $\mathit{Pred}(F)(P)$ in terms of relation lifting? Prove your answer.<br></latex>	pg 174, lemma 6.1.2 (3)<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>For every collection of predicates $(P_i \subseteq X)_{i \in I}$,<br>$$\mathit{Pred}(F)(\cap_{i \in I} P_i) = \bigcap_{i \in I} \mathit{Pred}(F)(P_i)$$<br>Prove or disprove.<br></latex>	true. pg 174, lemma 6.1.3 (1)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Predicate lifting is monotone: $P \subseteq Q \Rightarrow \mathit{Pred}(F)(P) \subseteq \mathit{Pred}(F)(Q)$\\~\\<br>Prove or disprove.<br></latex>	true. pg 174 right, lemma 6.1.3 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting $\mathit{Pred}(F)$ may be described as a natural transformation<br>$$\mathcal P \overset{\mathit{Pred}(F)}{\Longrightarrow} \mathcal{P}F$$<br>for the contravariant $\mathcal P$ functor<br>$$\mbf{Sets}^{\mbf{op}} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	true. pg 175, corollary 6.1.4, top left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting $\mathit{Pred}(F)$ may be described as a natural transformation<br>$$\mathcal P \overset{\mathit{Pred}(F)}{\Longrightarrow} \mathcal{P}F$$<br>for the covariant $\mathcal P$ functor<br>$$\mbf{Sets} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	true. pg 175, top left, corollary 6.1.4<br>
<latex>~\\<br>Provide the defintion of the category $\mbf{Pred}$. How is this category relevant to predicate lifting?<br></latex>	pg 175 left, below cor 6.1.4.<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting for a polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ yields a functor $\mathit{Pred}(F)$ in a commuting square:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Pred} \ar[d] \ar[r, "\mathit{Pred}(F)"] & \ar[d] \mbf{Pred} \\<br>\mbf{Sets} \ar[r, "F" below] & \mbf{Sets}<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 175, corollary 6.1.5<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Applying predicate lifting $\mathit{Pred}(F)$ to a predicate $m : P \rightarrowtail X$ is the same as applying the<br>functor $F$ itself to the domain $P$, in<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(F)(P) \ar[dr,tail] \ar[rr, no head, double] & & F(P) \ar[dl, "~~F(m)" right, tail] \\<br> & F(X) & \\<br>\end{tikzcd}<br>\end{center}<br></latex>	pg 175 right, lemma 6.1.6<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>There is an operation $\underset{\longleftarrow}{\mathit{Pred}} : \mathcal P(F(X)) \to \mathcal P(X)$ satisfying<br>\begin{center}<br>$\underset{\longleftarrow}{\mathit{Pred}}(F)(Q) \subseteq P \Leftrightarrow Q \subseteq \mathit{Pred}(F)(P)$<br>\end{center}<br>Hence $\underset{\longleftarrow}{\mathit{Pred}}$ is the left adjoint of $\mathit{Pred}(F)$ in a Galois connection $\underset{\longleftarrow}{\mathit{Pred}}(F) \dashv \mathit{Pred}(F)$\\~\\<br>Prove or disprove.<br></latex>	pg 176 left, prop 6.1.7<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Its opposite predicate lifting operation $\underset{\longleftarrow}{\mathit{Pred}}(F) : \mathcal P(F(X)) \to \mathcal P(X)$ preserves unions $\bigcup$ of predicates.\\~\\<br>Prove or disprove.<br></latex>	true. pg 176 lemma 6.1.8, bottom left / top right<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Its opposite predicate lifting operation $\underset{\longleftarrow}{\mathit{Pred}}(F) : \mathcal P(F(X)) \to \mathcal P(X)$ preserves direct images $\coprod$, in the sense that for $f : X \to Y$,<br>\begin{center}<br>$\underset{\longleftarrow}{\mathit{Pred}}(F)(\coprod_{F(f)}(Q)) = \coprod_f \underset{\longleftarrow}{\mathit{Pred}}(F)(Q)$<br>\end{center}<br>This means that $\underset{\longleftarrow}{\mathit{Pred}}(F)$ forms a natural transformation:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal PF \ar[r, Rightarrow, "\underset{\longleftarrow}{\mathit{Pred}}(F)"] & \mathcal P<br>\end{tikzcd}<br>\end{center}<br>for the covariant<br>$$\mbf{Sets} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	pg 176, lemma 6.1.8 (2), bottom left / top right
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathfrak M, \mathfrak E)$. For a predicate $(m : U \mapsto X) \in \mathit{Pred}(\mathbb C)$, how is $\mathit{Pred}(F)(m)$ defined? Is $\mathit{Pred}(F)$ functorial?<br></latex>	pg 117 bottom left, def 6.1.11<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>Predicate lifting is monotone and preserves truth $\top$.\\~\\<br>Prove or disprove.<br></latex>	pg 177 left, prop 6.1.12 (1)<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If diagonals $\Delta = \langle id, id \rangle : X \to X \times X$ are in $\mathfrak M$ - that is, if internal and external equality coincide (see Remark 4.3.6) - then $\coprod_{\Delta} \mathit{Pred}(F) = \mathit{Rel}(F)\coprod_{\Delta}$, as in the square below:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(X) \ar[r,"\coprod_{\Delta}" above] \ar[d,"\mathit{Pred}(F)" left] & \ar[d,"\mathit{Rel}(F)"] \mathit{Rel}(X) \\<br>\mathit{Pred(F(X))} \ar[r,"\coprod_{\Delta}" below] & \mathit{Rel}(F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 117 right, prop 6.1.12 (2) <br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If the functor $F$ preserves abstract epis, then the rectangle below commutes for $i \in \{ 1, 2 \}$.<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(X) \ar[d,"\mathit{Pred}(F)" left] & \ar[l,"\coprod_{\pi_i}" above] \ar[d,"\mathit{Rel}(F)"] \mathit{Rel}(X) \\<br>\mathit{Pred(F(X))} & \ar[l,"\coprod_{\pi_i}" below] \mathit{Rel}(F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 117 right, prop 6.1.12 (3)
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If $F$ preserves abstract epis, predicate lifting commutes with sums (direct images) $\coprod$, as in<br>$$\mathit{Pred}(F)(\coprod_f(U)) = \coprod_{F(f)}\mathit{Pred}(F)(U)$$<br>Prove or disprove.<br></latex>	true. pg 117 right, prop 6.1.12 (4)<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If $\frak E \subseteq \mathit{SplitEpis}$ and $F$ preserves weak pullbacks, then predicate lifting commutes with inverse images:<br>$$\mathit{Pred}(F)(f^{-1}(V)) = F(f)^{-1}(\mathit{Pred}(F)(V))$$<br>Additionally, predicate lifting preserves meets $\wedge$ of predicates.\\~\\<br>Prove or disprove.<br></latex>	pg 178 right, item 5<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor with predicate lifting functor $\mathit{Pred}(F) : \mbf{Pred} \to \mbf{Pred}$. What is an \emph{invariant}?<br></latex>	pg 179 bottom right / 180 top left<br>
<latex>~\\<br>Consider two coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>If $R \subseteq X \times Y$ is a bisimulation, then both its domain $\coprod_{\pi_1} R = \{ x \mid \exists y. R(x,y) \}$ and codomain $\coprod_{\pi_2} R = \{ y \mid \exists x. R(x,y) \}$ are invariants.\\~\\<br>Prove or disprove.<br></latex>	true. pg 180 left, lemma 6.2.2 (1)<br>
<latex>~\\<br>Consider two coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>An invariant $P \subseteq X$ yields a bisimulation $\coprod_{\Delta} P = \{ (x,x) \mid x \in P \} \subseteq X \times X$.\\~\\<br>Prove or disprove.<br></latex>	pg 180 left, lemma 6.2.2 (2)<br>It seems that we can also prove this using the diagonal fill-in property.
Read points 1 and 2 on page 180 right (contains some not-too-surprising material about invariants on DFAs and NFAs)<br>	pg 180 right<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. Consider the following statement:\\~\\<br>Invariants are closed under arbitrary unions and intersections: if predicates $P_i \subseteq X$ are invariants for $i \in I$, then their union $\bigcup_{i \in I} P_i$ and intersection $\bigcap_{i \in I} P_i$ are invariants. In particular, falsity $\bot$ (union over $I = \emptyset$) and truth $\top$ (intersection over $I = \emptyset$) are invariants.\\~\\<br>Prove or disprove.<br></latex>	pg 180 right, proposition 6.2.4 (1)<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. Consider the following statement:\\~\\<br>Invariants are closed under direct and inverses images along homomorphisms: if $f : X \to Y$ is a homomorphism of coalgebras, and $P \subseteq X$ and $Q \subseteq Y$ are invariants, then so are $\coprod_{f}(P) \subseteq Y$ and $f^{-1}(Q) \subseteq X$. In particular, the image $\mathit{Im}(f) = \coprod_f(\top)$ of a coalgebra homomorphism is an invariant.\\~\\<br>Prove or disprove.<br></latex>	pg 180 right, prop 6.2.4 (2)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Set}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A predicate $m : P \rightarrowtail X$ on the state space of a coalgebra $c : X \to F(X)$ is an invariant if and only if $P \rightarrowtail X$ is a \emph{subcoalgebra}: there is a coalgebra structure $P \to F(P)$ making $m : P \rightarrowtail X$ a homorphism of coalgebras:<br>\begin{center}<br>\begin{tikzcd}<br>F(P) \ar[r,"F(m)", tail] & F(X) \\<br>P \ar[u] \ar[r,"m" below, tail] & X \ar[u,"c" right]<br>\end{tikzcd}<br>\end{center}<br>Uniqueness of this coalgebra $P \to F(P)$ follows because $F(m)$ is injective by lemma 4.2.2.\\~\\<br>Prove or disprove.<br></latex>	pg 181, theorem 6.2.5
What is a Mealy machine?	pg 5922, near top<br>
<latex>~\\<br>With respect to Mealy machines, what does the notation $s \overset{a \mid b}{\longrightarrow}s'$ mean?<br></latex>	pg 5922, near top.<br>
<latex>~\\<br>Provide the definition and intuition of the meet-semilattice $\mathcal B$ used by Bonsangue et al. in their coalgebraic logic.<br></latex>	pg 5921, near bottom<br>
<latex>~\\<br>Let $f : S \to (B \times S)^A$ be a Mealy machine. What does the notation $f(s) = \langle s[a], s_a \rangle$ mean?<br></latex>	pg 5922<br>
<latex>~\\<br>What does it mean for a Mealy machine to be \emph{binary}? What does it mean for a Mealy machine to be \emph{fully specified}?<br></latex>	pg 5922m "Machines where A is..."<br>
<latex>~\\<br>What is a \emph{homomorphism} from a Mealy machine $(S,f)$ to a Mealy machine $(T,g)$? <br></latex>	It's just a coalgebra morphism of the functor M.<br>pg 5922, "A homomorphism from a Mealy..."<br>
<latex>~\\<br>Let $(S,f)$ and $(T,g)$ be two Mealy machines. We does it mean for a relation $R \subseteq S \times T$ to be a \emph{simulation}. What does it mean for $R$ to be a \emph{bisimulation}?<br></latex>	pg 5922, definition 1<br>
<latex>~\\<br>Let $(S,f)$ and $(T,g)$ be two Mealy machines. For $s \in S$, $t \in T$, what does $s \lesssim t$ mean? What does $s \sim t$ mean?<br></latex>	pg 5922, below def 1 near bottom<br><br>
Read the paragraph starting with "Now, note..." on pg 5923. (Because I didn't get it upon the first reading.)<br>	pg 5923<br>
<latex>~\\<br>Let $A^{\omega} = \{ \sigma \mid \sigma : \{ 0,1,2,\ldots\} \to A \}$ be the set of all infinite \emph{streams} over $A$.  What does it mean for a function $f : A^{\omega} \to B^{\omega}$ to be \emph{causal}? What does Bonsangue use the symbol $\Gamma$ to denote?<br></latex>	pg 5923, "We call a function..."<br>
<latex>~\\<br>Provide the definition of the coalgebra $(\Gamma, \gamma)$. Consider the following statement:\\~\\<br>For every Mealy machine $(S,f)$ there exists a unique homomorphism $h : S \to \Gamma$. It satisifies, for all<br>$s, s' \in S$:<br>$$s \lesssim s' \Longleftrightarrow h(s) \lesssim h(s')$$<br>where on $\Gamma$, similarity coincides with the elementwise ordering induced by $B$:<br>$$f \lesssim g \Longleftrightarrow \forall \sigma \in A^\omega. \forall n \geq 0. f(\sigma)(n) \leq_B g(\sigma)(n)$$<br>Prove or disprove.<br></latex>	true. the proof isn't provided, but it shouldn't be too hard.<br>pg 5923, theorem 2 near bottom.<br> 
<latex>~\\<br>What does $L_g^c$ denote? Provide the definition of the coalgebra $\lambda : L_g^c \to (B \times L_g^c)^A$.<br></latex>	pg 5924<br>
<latex>~\\<br>Let $\phi$ be a formula in Bonsangue's modal logic. How is the semantics $\sem{\phi}$ of $\phi$ defined?<br></latex>	It's defined as a causal stream from A^\omega to B^\omega, via finality.<br>pg 5925<br>
<latex>~\\<br>Let $(S,f)$ be a Mealy coalgebra, $s \in S$, and $\phi$ a formula of Bonsangue's modal logic.<br>What does $s \vDash \phi$ mean?<br></latex>	pg 5925<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For all states $s,s'$ of a Mealy machine $(S,f)$,<br>$$s \sim s' \text{  iff  } \forall \phi \in L^c_g.~s \vDash \phi \Leftrightarrow s' \vDash \phi$$<br>Prove or disprove.<br></latex>	pg 5926, theorem 4 (1)<br><br>
<latex>~\\<br>Let $S$ be finite. Consider the following statement:\\~\\<br>There exists for any $s \in S$ a formula $\phi_s \in L^c_g$ such that <br>$$\forall s' \in S.~s \sim s' \text{ iff } s' \vDash \phi_s$$<br>Prove or disprove.<br></latex>	pg 5926, theorem 4 (2)<br>
<latex>~\\<br>Consider the following Mealy machine, which computes the twos complement of its input:<br>\begin{center}<br>\begin{tikzcd}<br>s_1 \ar[loop left, "0 \mid 0"] \ar[r, "1 \mid 1"] & s_2 \ar["1 \mid 0\text{,}0 \mid 1" right, loop right] <br>\end{tikzcd}<br>\end{center}<br>Give the characterizing formula of this Mealy machine.<br></latex>	pg 5926, near bottom<br>
<latex>~\\<br>Give the $(refl)$, $(top)$, $(\wedge - e1)$, and $(\wedge - e2)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top<br>
<latex>~\\<br>Give the $(trans)$, $(\wedge - i)$, $(a \downarrow -~\top)$, $(a \downarrow -~\wedge)$, and $(a \downarrow - \leq)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top
<latex>~\\<br>Give the $(a() -~\top)$, $(a() -~\wedge)$, and $(a() - \leq)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top<br><br>
<latex>~\\<br>Give the $(\nu - i)$ and $(\nu - e)$ rules for Bonsangue's proof system.<br></latex>	pg 5927<br>
Give the definition of the <i>norm</i> function for Mealy logic formula normalization. <br>(Hint: it uses auxiliary functions conj, rem, and flatten)<br>	pg 5929, section 4.1<br><br>
<latex>~\\<br>Provide the definition of $\delta$, the one-step synthesis function for transforming a formula of Bonsangue's logic into a "partial Mealy machine".<br></latex>	pg 5930, section 4.2 (read to the bottom of the page)<br>
<latex>~\\<br>What is the purpose of Bonsangue's auxiliary function $D$. Give its definition.<br></latex>	pg 5931, near top.<br>it's basically a breadth-first search<br>
<latex>~\\<br>How does Bonsangue define the $\Delta$ function, which transforms Mealy formulas into Mealy machines?<br></latex>	pg 5931<br>
<latex>~\\<br>Demonstrate how the $\Delta$ function transforms the formula $1 \downarrow 0 \wedge (\nu x. 1(x))$ into a Mealy machine.<br></latex>	pg 5931, diagram near the middle. They do not show the process, but they do present the result.<br>
<latex>~\\<br>Show how Bonsangue's $\Delta$ algorithm transforms the formula $\phi_1 \doteq 1(1 \downarrow 0) \wedge (\nu x. 1(x))$ into a Mealy machine. <br></latex>	pg 5931, near bottom<br> 
<latex>~\\<br>Consider the following statement:\\~\\<br>For a comonad $S$, the Kleisli category $\mathcal K\ell(S)$ can be embedded into $\mathcal E \mathcal M(S)$ via a commuting triangle.<br>\begin{center}<br>\begin{tikzcd}<br> \mathcal K \ell (S) \ar[rr] \ar[dr] & & \ar[dl] \mathcal E \mathcal M (S) \\<br> & \mathbb C & <br>\end{tikzcd}<br>\end{center}\\~\\<br>Prove or disprove.<br></latex>	pg 155 right, "The functor ..."<br>Recall that maps in Kleisli categories are used to represent computations. By embedding them into EM categories, we can study them in a richer universe (which, e.g., has all limits and colimits of a diagram whenever the ambient category does)<br><br>
<latex>~\\<br>For a Kripke polynomial functor $F$ and an arbitrary set $X$, write $\mathit{sts}_X : F(X) \to \mathcal P(X)$ for the following composite:<br>$$ \mathit{sts}_X \doteq (F(X) \overset{\{-\}}{\longrightarrow} \mathcal P(F(X)) \overset{\underset{\longleftarrow}{\mathit{Pred}}(F)}{\longrightarrow} \mathcal P(X))$$<br>Consider the following statement:\\~\\<br>These $\mathit{sts}$ maps form a natural transformation $F \Rightarrow \mathcal P$: for each function $f : X \to Y$ the following diagram commutes:<br>\begin{center}<br>\begin{tikzcd}<br>F(X) \ar[r, "\mathit{sts}_X" above] \ar[d, "Ff" left] & \ar[d, "\mathcal P(f) = \coprod_f" right] \mathcal P(X) \\<br>F(Y) \ar[r, "\mathit{sts}_Y" below] & \mathcal P(Y) <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.\\~\\<br>What is the intuition behind $\mathit{sts}$? (Hint: why is it called $\mathit{sts}$?)<br></latex>	true. pg 176 bottom right / pg 177 top left<br><br>the intuition is that it produces the set of states (elements of X) in an element of F(X).<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An invariant on an initial algebra is always true.\\~\\<br>Prove or disprove.<br></latex>	true. pg 181 left, thm 6.2.6.<br><br>
<latex>~\\<br>Consider binary trees as algebras of the functor $F(X) = 1 + (X \times A \times X)$, with initial algebra<br>\begin{center}<br>\begin{tikzcd}<br>1 + (\mathit{BinTree}(A) \times A \times \mathit{BinTree(A)}) \ar[r, "\cong" below, "\text{[nil, node]}" above] & \mathit{BinTree}(A)<br>\end{tikzcd}<br>\end{center}<br>Give concretely predicate lifting $\mathit{Pred}(F)(P) \subseteq F(X)$ of an arbitrary predicate $P \subseteq X$. Use the unary induction proof principle to derive conditions on a predicate $P$ which entail that $P$ holds for all binary trees $t$.<br></latex>	pg 181, example 6.2.7<br>
<latex>~\\<br>Let $c : X \to F(X)$ be a coalgebra of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. For an arbitrary predicate $P \subseteq X$ on the state space of $c$, how is the predicate $\square P \subseteq X$ (pronounced \emph{henceforth} P) defined?<br></latex>	pg 183 left, def 6.3.1<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$$\square P \subseteq P$$<br>Prove or disprove.<br></latex>	pg 183 right, lemma 6.3.2 (1)<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$$\square P \subseteq \square \square P$$<br>Prove or disprove.<br></latex><br>	pg 183 right, lemma 6.3.2 (2)<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:<br>$$P \subseteq Q \Rightarrow \square P \subseteq \square Q$$<br>Prove or disprove.<br></latex>	pg 183 right, lemma 6.3.2 (3)<br><br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$P$ is an invariant if and only if $P = \square P$\\~\\<br>Prove or disprove.<br></latex>	pg 183 left, lemma 6.3.2 (4)<br>
<latex>~\\<br>Consider a coalgebra $c : X \to FX$ of a Kripke polynomial functor $F$ with an arbitrary predicate $P \subseteq X$. Consider the following statement:\\~\\<br>The greatest invariant $\square P \subseteq P \subseteq X$ carries a subcoalgebra structure, say $c_p$, in<br>\begin{center}<br>\begin{tikzcd}<br>F(\square P) \ar[r, "F(m)" above, hook] & F(X) \\<br>\square P \ar[u, "c_p" left] \ar[r, "m" below, hook] & X \ar[u,"c" right] <br>\end{tikzcd}<br>\end{center}<br>This subcoalgebra has the following universal property: each coalgebra homomorphism $f : (Y \overset{d}{\to} FY) \to (X \overset{c}{\to} FX)$ which factors through $P \hookrightarrow X$ -- i.e. satisfies $f(y) \in P$ for all $y \in Y$ -- also factors through $\square P$, namely as the (unique) coalgebra homomorphism $f' : (Y \overset{d}{\to} FY) \to (\square P \overset{c_p}{\to} F(\square P))$ with $f';m = f$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 183 left, prop 6.3.3 / pg 184 top left
<latex>~\\<br>Consider the following statement:\\~\\<br>The category $\mbf{CoAlg}(F)$ of coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ has equalisers: for two coalgebras $X \overset{c}{\to} FX$ and $Y \overset{d}{\to} FY$ with two homomorphisms $f,g : X \to Y$ between them, there is an equaliser diagram in $\mbf{CoAlg}(F)$,<br>$$\left ( \begin{array}{c} F(\square E(f,g)) \\ \uparrow \\ \square E(f,g) \end{array} \right ) <br>  \overset{m}{\rightarrowtail} \left ( \begin{array}{c} F(X) \\ ~\uparrow c \\ X \end{array} \right )<br>  \begin{array}{c} f \\ \rightrightarrows \\ g \end{array}<br>   \left ( \begin{array}{c} F(Y) \\ ~\uparrow d \\ Y \end{array} \right )$$<br>where $E(f,g) \hookrightarrow X$ is the equaliser $\{ x \in X \mid f(x) = g(x) \}$ as in $\mbf{Sets}$. The greatest invariant $\square E(f,g) \hookrightarrow E(f,g)$ carries a subcoalgebra structure.\\~\\<br>Prove or disprove.<br></latex>	pg 184 left, theorem 6.3.4<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$, the category $\mbf{CoAlg}(F)$ of coalgebras has arbitrary products $\prod$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 184 right, theorem 6.3.5<br>
<latex>~\\<br>Let $P,Q \subseteq X$ be a predicate, i.e. an object of the category $\mbf{Pred}$. How are the following predicates defined?<br>\begin{itemize}<br>\item $\neg P$<br>\item $P \wedge Q$<br>\item $P \Rightarrow Q$<br>\end{itemize}<br></latex>	pg 188 left, above def 6.4.1<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra of a Kripke polynomial functor $F$. How is the \emph{nexttime} operator $\bigcirc : \mathcal P(X) \to \mathcal P(X)$ defined?<br></latex>	pg 188, def 6.4.1<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>$P \subseteq Q \Rightarrow \bigcirc P \subseteq \bigcirc Q$\\~\\<br>Prove or disprove.<br></latex>	<latex>~\\<br>True. pg 188 right, lemma 6.4.2 (1)\\<br>Note that this makes $\bigcirc$ an endofunctor.<br></latex>
<latex>~\\<br>Let $Q \subseteq Y$ be a predicate, $c : X \to FX$ and $d : Y \to FY$ coalgebras, and $f : X \to Y$ a homomorphism from $c$ to $d$. Consider the following statement:\\~\\<br>$\bigcirc(f^{-1}Q) = f^{-1}(\bigcirc Q)$\\~\\<br>Prove or disprove.<br></latex>	pg 188 right (2)<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra and $\bigcirc$ its nexttime operator. Consider the following statement:\\~\\<br>The $\bigcirc$-coalgebras in the category $\mathcal P(X)$ of $X$-predicates ordered by inclusion are exactly $c$'s invariants.\\~\\<br>Prove or disprove.<br></latex>	true. pg 188, top right (3)<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra and $\bigcirc$ its nexttime operator. Consider the following statement:\\~\\<br>$\bigcirc$ preserves meets (intersections) of predicates, i.e. $\bigcirc (P \wedge Q) = (\bigcirc P) \wedge (\bigcirc Q)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 188, top right (4)<br><br>Expand the definition of the nexttime operator and use the fact that Pred is a right adjoint, which preserves limits.<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra, $\bigcirc$ its nexttime operator and $\square$ its greatest invariant operator. Consider the following statement:\\~\\<br>For all predicates $P \subseteq X$, $\square P$ is the cofree $\bigcirc$-coalgebra on $P$: i.e., it is the final coalgebra of the operator $S \mapsto P \wedge \bigcirc S$ on $\mathcal P(X)$.\\~\\<br>Prove or disprove.  <br></latex>	true. pg 188, top right (5)<br>
<latex>~\\<br>Give the definitions of the standard temporal logic operators $\bigcirc -$, $\square -$, $\lozenge -$, and $-\mathcal U-$.<br></latex>	pg 188 bottom right
<latex>~\\<br>Consider the following transition system over lists of symbols drawn from the alphabet $\{ M, I, U \}$.\\~\\<br>\begin{mathpar}<br>x I \to x I U <br>\and<br>M x \to M x x<br>\and<br>x III y \to x U y<br>\and<br>x UU y \to xy<br>\end{mathpar}\\~\\<br>Is it the case that $MI \to^* MU$? Use coalgebraic temporal logic to make your argument.<br></latex>	pg 189 left<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$,<br>$$P \subseteq (\cdot \neq x) \Longleftrightarrow \neg P(x)$$<br>Prove or disprove.<br></latex>	true. pg 191.<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a function $f : Y \to X$,<br>$$f^{-1}(\cdot \neq x) = \bigcap_{y \in f^{-1}(x)} (\cdot \neq y)$$<br>Prove or disprove.<br></latex>	true. pg 191 left, lemma 6.4.5 (2)<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a Kripke polynomial functor $F$ and a predicate $Q \subseteq F(X)$,<br>$$\underset{\longleftarrow}{\mathit{Pred}}(F)(Q) = \{ x \in X \mid Q \not \subseteq \mathit{Pred}(F)(\cdot \neq x) \}$$<br>Prove or disprove.<br></latex>	true. pg 191, lemma 6.4.5 (3)
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra of a polynomial functor on states. For states $x, x' \in X$, what does $x \to x'$ mean?<br></latex>	pg 191 right, def 6.4.6<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\to^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$,<br>\begin{itemize}<br>\item $\bigcirc P = \{ x \in X \mid \forall x'. x \to x' \Longrightarrow P(x') \}$<br>\item $\square P = \{ x \in X \mid \forall x'. x \longrightarrow^* x' \Rightarrow P(x') \}$<br>\item $\lozenge P = \{ x \in X \mid x \longrightarrow^* x' \wedge P(x') \}$ <br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 191 right, prop 6.4.7 (1)<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\longrightarrow^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$, the following three statements are equivalent:<br>\begin{itemize}<br>\item $P$ is an invariant<br>\item $\forall x,x' \in X. P(x) \wedge x \to x' \Longrightarrow P(x')$<br>\item $\forall x,x' \in X. P(x) \wedge x \longrightarrow^* x' \Longrightarrow P(x')$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 192, top left (2)<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\longrightarrow^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For arbitrary states $x, x' \in X$, the following are equivalent:<br>\begin{itemize}<br>\item $x \longrightarrow^* x'$<br>\item $P(x) \Rightarrow P(x')$, for all invariants $P \subseteq X$<br>\item $x \in \lozenge(\cdot = x')$, i.e. eventually there is a successor state of $x$ that is equal to $x'$.<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 192, top left (3)<br>
<latex>~\\<br>For a coalgebra $c : X \to FX$ on a polynomial functor $F$, and a predicate $P \subseteq X$ on its carrier $X$, how do we defined the predicate $\underset{\longleftarrow}{\bigcirc} P$? What about the predicate $\underset{\longleftarrow}{\lozenge} P$?<br></latex>	pg 192 right, def 6.4.8<br><br>
<latex>~\\<br>For a functor $F : \mbf{Sets} \to \mbf{Sets}$, what is a \emph{coalgebraic modal logic}?<br></latex>	pg 195 left, def 6.5.1<br>
<latex>~\\<br>Explain how coalgebraic modal logics are a generalization of predicate lifting.<br></latex>	pg 195 bottom left, figure 6.11 and the paragraph below it.<br>
<latex>~<br>Consider a simple coalgebra $c = \langle c_1, c_2 \rangle : X \to X \times X$ involving two transition maps $c_1, c_2 : X \to X$. Define two logical operators $\bigcirc_1$ and $\bigcirc_2$ as\\~\\<br>\begin{mathpar}<br>\bigcirc_1(P) = \{ x \mid c_1(x) \in P \}<br>\and<br>\bigcirc_2(P) = \{ x \mid c_2(x) \in P \}<br>\end{mathpar}\\~\\<br>How can we describe this pair of operators using an $L$-algebra?<br></latex>	pg 195, top right<br>
<latex>~\\<br>Read example 6.5.2, pg 195/196 down to ``Thus we have used four...''. Formulate this logic as an L-algebra.<br></latex>	pg 195/196<br>
<latex>~\\<br>There's a canonical way to define a coalgebraic logic $(L, L \mathcal P \overset{\delta}{\Rightarrow} \mathcal P F)$ when $F$ is the identity functor. There's also a canonical way to define a coalgebraic logic when $F$ is a constant functor. Give these coalgebraic logics. Why do we care?<br></latex>	pg 196 right, def 6.5.3 (1)<br><br>motivation is explained in the paragraph above def 6.5.3<br>
<latex>~\\<br>There's a canonical way to define a coalgebraic logic $(L, L \mathcal P \overset{\delta}{\Rightarrow} \mathcal P F)$ when $F$ is the covariant powerset functor. There's also a canonical way to define a coalgebraic logic when $F$ is the distribution functor. Give these coalgebraic logics. Why do we care?<br></latex>	pg 197, top left (3) and (4).<br><br>for motivation, the paragraph above def 6.5.3, pg 96<br>
<latex>~\\<br>Let $F_1, F_2 : \mbf{Sets} \to \mbf{Sets}$ be two functors, each with a coalgebraic modal logic $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>There is also a coalgebraic modal logic for the composite functor $F_1 \circ F_2$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197 left, lemma 6.5.4 (1)<br>
<latex>~\\<br>Let $(F_i)_{i \in I}$ be an $I$-indexed collection of functors $(F_i)_{i \in I}$ with coalgebraic modal logics $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>There is a coalgebraic modal logic for the coproduct functor $\coprod_{i \in I}F_i$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197 left, lemma 6.5.4 (2)<br>
<latex>~\\<br>Let $(F_i)_{i \in I}$ be an I-indexed collection of functors with logics $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>A product functor $\prod_{i \in I} F_i$ has a canonical coalgebraic modal logic.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197, top right (3)<br>
Give the expression syntax of safeFTS, which involves nonterminals e (expressions), a (property assignment), c (call signature), p (parameter).  	pg  5974 / 5975<br><br>be sure to read the paragraphs below the figure on pg 5975, which tie up some loose ends<br>
Give the safeFTS syntax for statements. This should include non-terminals s (for statements) and u (for variable declarations).<br>	pg 5975, near bottom<br><br>
Give the safeFTS synatax for types. This should include nonterminals T (for types), P (for primitive types), O (for object types), L (for object type literals), and M (for type members).<br>	pg 5976<br>
What does it mean for a safeFTS type to be a <i>callable</i> type?	pg 5976, near bottom.
In Featherweight Typescript, what are Object, Function, String, Number, and Boolean?	pg 5977 near top<br>
Give the safeFTS syntax for declarations. This should include one nonterminal D (interface declaration).<br>	pg 5977, near top<br>
<latex>~\\<br>In FTS, what is an \emph{interface table} $\Sigma$?<br></latex> 	pg 5977<br>
In FTS, what, formally, is a <i>program</i>?	pg 5977.<br>It is an interface table paired with a sequence of statements.
<latex>~\\<br>There are three ``sanity conditions'' that every FTS interface table must satisfy. What are they?<br></latex>	pg 5977<br>
Give the definition of a featherweight typescript <i>tree type</i>.	pg 5979
<latex>~\\<br>Let $\# : I \to \mathbb N$ be an arity with associated endofunctor $F_\#(X) = \coprod_{i \in I} X^{\# i}$ on $\mbf{Sets}$. From a set $V$ of ``variables'', and a collection $(f_i)_{i \in I}$ of function symbols, how do we define the set $\mathcal T_\#(V)$ of terms?<br></latex>	pg 202 left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The set of terms $\mathcal T_{\#}(V)$ built from an arity $\# : I \to \mathbb N$ and a set of variables $V$ is the free monad $F^*_\#$ on $F_\#$ with $\mbf{Alg}(F_\#) \cong \mathcal E \mathcal M(F^*_\#)$,<br>as summarised in <br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(F_\#) \cong \mathcal E \mathcal M(F^*_\#) \ar[d, "U"] \\<br>\mbf{Sets} \ar[u,"\mathcal T_\#" left, "\dashv" right, bend left = 40] \ar[loop right, "F^*_\# = U \mathcal T_\#" right]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 202 left, prop 6.6.1<br><br>IMPORTANT: the paragraph below the proposition statement gives its intuitive significance: read it!<br><br>
<latex>~\\<br>For a monad $T$ on $\mbf{Sets}$, what does $\mathcal K \ell_{\mathbb N}(T) \hookrightarrow \mathcal K \ell(T)$ denote? What does $\mbf{Law}(T)$ denote? What is a \emph{model} of $T$? <br></latex>	pg 202, bottom right<br>pg 203<br><br><latex>~\<br>REMEMBER: A finite product preserving functor is a functor $F$ such that the arrow<br>$\langle F\pi_1, F\pi_2 \rangle$ has an inverse.<br></latex>
<latex>~\\<br>Let $T$ be a monad on sets. Does the category $\mbf{Law}$(T) have finite products? Why or why not?<br></latex>	It does. See pg 203 left, first bullet point.<br>
<latex>~\\<br>For a monad $T$, why is the category $\mbf{Law}(T)$ defined as $\mathcal K \ell (T)^{op}$ rather than $\mathcal K \ell (T)$?<br></latex>	pg 203 left, second bullet point.<br>
<latex>~\\<br>The coprojections $\kappa_i : 1 \to m$ in $\mbf{Sets}$ yield copojections $\kappa_i;\eta : 1 \to m$ in $\mathcal K \ell_{\mathbb N}(T)$ (easy exercise). In the category $\mbf{Law}(T)$, what intuitively is this map $m \to 1$? Why? <br></latex>	pg 203, third bullet point<br><br><latex>~\\<br>$\kappa_i$ injects into the $i$th variable and then $\eta$ promotoes it to a term.<br></latex>
<latex>~\\<br>Consider the following claim:<br>Kleisli composition corresponds to substitution in terms.<br>True or false? Explain your answer.<br></latex>	pg 203 left<br>
<latex>~\\<br>How do we express weakening in Kleisli categories (and, relatedly, Lawvere theories)?<br></latex>	pg 203 right, second bullet point.
<latex>~\\<br>Consider the following statement:\\~\\<br>For a monad $T : \mbf{Sets} \to \mbf{Sets}$ there is a faithful functor from Eilenberg-Moore algebras to models:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal E \mathcal M(T) \ar[r, "\mathcal L"] & \mbf{Model}(T) = [\mbf{Law}(T), \mbf{Sets}]_{fp} \\<br>(T(X) \overset{\alpha}{\to} X) \ar[r,mapsto] & (n \mapsto X^n)<br>\end{tikzcd}<br>\end{center}<br>This $\mathcal L$ is an equivalence if $T$ is a finitary functor.\\~\\<br>The above statement is true. (No need to prove it, the proof is rather long and on pg 204, thm 6.6.3).<br>Just think about the ramifications of the theorem.<br></latex>	pg 204 left, thm 6.6.3<br>
<latex>~\\<br>Assume there is a limit $Z \in \mathbb C$ of the chain starting at the final object $1 \in \mathbb C$.<br>\begin{center}<br>\begin{tikzcd}<br>1 & \ar[l, "!" above] F(1) & \ar[l, "F(!)" above] F^2(1) & \ar[l, "F^2(!)" above] F^3(1) & \ar[l] \cdots & \ar[l] Z<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>If $F$ is continuous (preserves $\omega$-limits), then we get a final coalgebra $Z \overset{\cong}{\longrightarrow} F(Z)$.\\~\\<br>Prove or disprove.<br></latex>	pg 118 left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In $\mbf{Sets}$, limits of $\omega$-chains exist and are computed as follows. For a chain $(X_{n+1} \overset{f_n}{\to} X_n)_{n \in \mathbb N}$ the limit $Z$ is a subset of the infinite product $\prod_{n \in \mathbb N} X_n$ given by <br>$$Z = \{ (x_0,x_1,x_2,\ldots) \mid \forall n \in \mathbb N. x_n \in X_n \wedge f_n(x_{n+1}) = x_n \}$$<br>Prove or disprove.<br></latex>	true. pg 118, lemma 4.6.2 right<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each exponent polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ -- without powerset -- is continuous.\\~\\<br>Prove or disprove.<br></latex>	true. pg 118 right, lemma 4.6.2 (2)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each exponent polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ has a final coalgebra, which can be computed as the limit of an $\omega$-chain as in (4.13, pg 118 left point 2).\\~\\<br>Prove or disprove.<br></latex>	true. pg 118 right, corollary 4.6.3<br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be \emph{bounded}?<br></latex>	pg 119 left, def 4.6.5<br>
<latex>~\\<br>Recall that deterministic automata are described as coalgebras of the functor $D(X) \doteq X^A \times B$, for suitable sets $A, B$. Consider the following statement:\\~\\<br>The functor $D$ is bounded by the set $\mathcal P(A^\star)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 119 right, example 4.6.6<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a bounded functor. Consider the following statement:\\~\\<br>$F$ is \emph{accessible}: there is a set $M$ such that for each set $X$,<br>$$F(X) = \bigcup \{ F(U) \mid U \subseteq X~~\text{and}~~|U|<|M| \}$$<br>Prove or disprove.<br></latex>	true. pg 119, prop 4.6.7<br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be $\emph{accessible}$? \\~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an accessible functor. Consider the following statement:\\~\\<br>There are sets $A,B$ with a natural transformation:<br>$$(-)^A \times B \overset{\sigma}{\Longrightarrow} F$$<br>where for each set $X \neq \emptyset$ the component $\sigma_X : X^A \times B \to F(X)$ is surjective.\\~\\<br>Prove or disprove.<br></latex>	true. pg 120 left, (2) => (3)<br> 
<latex>~\\<br>The following statement is true:\\~\\<br>Each finite Kripke polynomial functor is bounded.\\~\\<br>Obviously, the proof of this fact is by induction on the structure of the functor. Prove the cases for identity, product, and exponent functors.<br></latex>	pg 120 right, 1st, 3rd, and 5th bullet points.<br>
<latex>~\\<br>The following statement is true:\\~\\<br>Each finite Kripke polynomial functor is bounded.\\~\\<br>Obviously, the proof of this fact is by induction on the structure of the functor. Prove the cases for constant, coproduct, and finite powerset functors.<br></latex>	pg 120 right. second, fouth, and sixth bullet points.<br>
<latex>~\\<br>What does it mean for a functor to be \emph{finitary}? <br></latex>	pg 119, bottom right, below prop 4.6.7<br><br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be \emph{finitary}?<br></latex>	yes, this was defined in a previous chapter, but it's relevant to this one, so I made a redundant card.<br><br><latex>~\\<br>A functor $F : \mbf{Sets} \to \mbf{Sets}$ is bounded by a set $M$ if for every coalgebra $X \overset{c}{\to} FX$ and every $x \in X$ there exists a subcoalgebra $S \overset{d}{\to} FS$ of $c$ such that $x \in S$ and $|S| < |M|$. $F$ is \emph{finitary} if it is bounded by the set of natural numbers $\mathbb N$.<br></latex>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a functor for which the free monad $F^*$ on $F$ exists. Consider the following statement:\\~\\<br>If $F$ is finitary, then so is $F^*$.\\~\\<br>Prove or disprove.<br></latex>	pg 205 right, lemma 6.6.4<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a functor with free monad $F^*$. Consider the following statement:\\~\\<br>There is a faithful functor from functor algebras to models:<br>$$\mbf{Alg}(F) \overset{\mathcal L}{\longrightarrow} \mbf{Model}{(F^*)} = [\mbf{Law}(F^*),\mbf{Sets}]_{fp}$$<br>This $\mathcal L$ is an equivalence if the functor $F$ is finitary.\\~\\<br>Prove or disprove.<br></latex>	true. pg 205, bottom right, Corollary 6.6.5.<br>In addition to the two previous lemmas, this corollary also depends on Prop 5.4.7 on page 157 bottom right / 158 top left.<br>
<latex>~\\<br>What is an \emph{algebraic specification}?<br></latex>	pg 208 left, "An algebra for..." down to "Our main focus..."<br>
<latex>~\\<br>In algebra terminology, what is a \emph{theorem}?<br></latex>	pg 208 right, "In general an equation..." <br>
Read example 6.7.1 and remark 6.7.2 on pg 208 right<br>	pg 208 right
<latex>~\\<br>What is an \emph{axiom system} for a monad $T$ on $\mbf{Sets}$? What is an axiom system for an endofunctor $F : \mbf{Sets} \to \mbf{Sets}$?<br></latex>	pg 209 right, def 6.7.3<br>
<latex>~\\<br>Let $T$ be a monad on $\mbf{Sets}$ and $\mathcal A$ be an axiom system on $T$. Consider a model of the monad T, i.e. a finite product preserving functor of the form:<br>$$\mbf{Law}(T) = \mathcal K \ell_{\mathbb N} (T)^{op} \overset{M}{\longrightarrow} \mbf{Sets}$$<br>What does it mean for $M$ to \emph{satisfy the axioms} of $\mathcal A$?<br></latex>	pg 209, bottom right, below def 6.7.3.<br>ALSO MAKE SURE TO READ pg 210 top left.<br><br>
<latex>~\\<br>Let $T$ be a monad and $\mathcal A$ a system of axioms on $T$.<br>What category does $\mathcal E \mathcal M(T, \mathcal A)$ denote?<br></latex>	pg 210 left, near top<br>
What do expressions denote in Jacobs' coalgebraic Java semantics?	Its a function from Expr to ExprResult<br>pg 5616<br>
<latex>~\\<br>How does Jacobs define $\mathit{StatResult}(S)$? How does Jacobs define $\mathit{ExprResult}(S,B)$?<br></latex>	pg 5616
<latex>~\\<br>How does Jacobs define $\mathit{StatAbn}(S)$? How does Jacobs define $\mathit{ExprAbn}(S)$?<br></latex>	pg 5616 bottom / 5617 top<br><br>
<latex>~\\<br>How does Jacobs interpret a void method \begin{verbatim}void m(A1 a1, ..., An an){ ... }\end{verbatim}<br>How does Jacobs interpret a non-void method \begin{verbatim}B m(A1 a1, ..., An an){ ... }\end{verbatim}<br></latex>	pg 5617<br>As a state transformer function of the following form<br><latex>~\\<br>void method:\\~\\<br>$S \times A_1 \times \cdots \times A_n \to \mathit{StatResult}(S)$\\~\\<br>Or, coalgebraically, $S \to\mathit{StatResult}(S)^{A_1 \times \cdots \times A_n}$\\~\\<br>non-void:\\~\\<br>$S \times A_1 \times \cdots \times A_n \to \mathit{ExprResult}(S,B)$<br></latex>
<latex>~\\<br>How does Jacobs defines the composition $(s;t) : S \to \mathit{StatResults}(S)$ of two statements $s,t : S \to \mathit{StatResult}(S)$?<br></latex>	pg 5617 (1)<br><br>
<latex>~\\<br>Given the interpretation of statement $\sem{t} : S \times A \to \mathit{StatResult}(S)$, Jacobs defines an \emph{extension} $t^*$. How is $t^*$ defined and what is its purpose?<br></latex>	pg 5618 near top<br>
<latex>~\\<br>How does Jacobs define the functor $J$ aka ``the Java monad''? Explain the motivation behind it. This functor forms a monad; give its unit and multiplication.<br></latex>	motivation starts in section 4 pg 5618<br>defined in definition 1 pg 5619<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The Java monad $J$ is a strong monad.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5619, section 4.1 near bottom. Spills onto pg 5619. You will have to provide some of the details yourself.<br>
<latex>~\\<br>Using a strength map for $J$, there is a standard way to turn functions $f : A \times B \to J(C)$ into functions $f^* : A \times J(B) \to J(C)$. Explain.<br></latex>	pg 5620<br>
Recall that Java has two conjunctions, namely “and” & and “conditional and” &&. The first one (&) always evaluates both arguments, but the second one (&&) only does so if the first argument evaluates to true. The difference is relevant in the presence of side-effects, non-termination, or exceptions. Show how the two conjunction operations can be described concisely via extension w.r.t. the Java monad.	pg 5621, example 2<br>
<latex>~\\<br>Translate Kleisli composition for the Java monad $J$ into a concrete definition (``source code'') in the category $\mbf{Sets}$.<br></latex>	pg 5622
<latex>~\\<br>Let $s : A \to J(A)$ be the interpretation of a Java statement. How does Jacobs define $s^n$ for natural numbers $n$?<br></latex>	pg 5622<br>
<latex>~\\<br>Let $J$ be the Java monad. Show how Jacobs enriches its Kleisli cateogry $\mathcal K \ell(J)$ by giving each homset a partial order. Given $f : A \to B \in \mathcal K \ell(J)_1$, do we necessarily have $f \bullet \bot_{A,A} = \bot_{B,B} \bullet f$? <br></latex>	pg 5622 section 4.2,<br>pg 5623 near top<br>
<latex>~\\<br>What does \emph{cppo} stand for? Is $\mathcal K \ell(J)$ \emph{cppo}-enriched?<br></latex>	complete pointed partial order. yep. pg 5623<br>
<latex>~\\<br>Consider a function $f : A \times B \to J(C)$ and its extension $f^* : A \times J(B) \to J(C)$. Consider the following statement:\\~\\<br>For each $a \in A$, the function $f^*(a, -) : J(B) \to J(C)$ is continuous.\\~\\<br>Prove or disprove.<br></latex>	The lemma is stated on pg 5623, but no proof is given. TODO: complete the proof and transcribe into the answer side of this card.
<latex>~\\<br>Consider a function $f : A \times B \to J(C)$ and its extension $f^* : A \times J(B) \to J(C)$. Consider the following statement:\\~\\<br>If the set $A$ carries an ordering in such a way that for each $b \in B$, the function $f(-,b) : A \to J(C)$ is continuous, then for each $g \in J(B)$, $f^*(-,g) : A \to J(C)$ is also continuous.\\~\\<br>Prove or disprove.<br></latex>	true. lemma is stated on pg 5623, but it isn't proved anywhere in the paper. you should prove it right here.<br>
<latex>~\\<br>How does Jacobs define the following \emph{conditional operator}:<br>\begin{center}<br>\begin{tikzcd}[sep=60] T(bool) \times (T(B)^A)^2 \ar[r,"\mathit{IfThenElse}"] & T(B)^A \end{tikzcd}<br>\end{center}<br></latex>	pg 5625 top.<br>also see lemma 4 (2) on pg 5623<br>
<latex>~\\<br>For a condition $c \in T(\mathit{bool})$ and a statement $s : A \to T(A)$, how does Jacobs define the semantics of a while statement $\mathit{while}(c)(s) : A \to T(A)$?<br></latex>	pg 5625, definition 6<br><br>
<latex>~\\<br>How does Jacobs define the functions $N(c,s),E(c,s) : A \to \mathbb N^S$? What is the purpose of these functions?<br></latex>	pg 5626. read the entirety of the page<br>
<latex>~\\<br>Give Jacobs ``operational'' definition (it's still denotationall, really) of the semantics of while statements.<br></latex>	pg 5626, prop 7<br>
<latex>~\\<br>How does Jacobs define the interpretation of recursive statements $H : T(B)^A \to T(B)^A$? Jacobs provides an alternative ``operational'' version of the denotational semantics of recursive statements, using an auxiliary function $U : A \to \mathbb N^S$. Explain.<br></latex>	pg 5628, definition 8 and the paragraph below it.<br>
<latex>~\\<br>Describe the two modal operators for the coalgebraic Java functor $L$.<br></latex>	pg 5629, Ns and Es<br>
<latex>~\\<br>Describe and define the three observer predicates in the modal logic for Java's coalgebra functor $L$.<br></latex>	pg 5629<br>
<latex>~\<br>What does it mean for an assertion to be \emph{affirmative}? What does it mean for an assertion to be \emph{refutative}?<br></latex>	pg 5694 near bottom<br>pg 5695 near top<br><br>
<latex>~\\<br>There is something wrong with the way that the term \emph{irrefutable} is used in common parlance. Explain.<br></latex>	pg 5695 near top.<br>
<latex>~\\<br>Is the assertion ``some babies have plaid eyes'' refutative? Why or why not?<br></latex>	pg 5695<br>
<latex>~\\<br>Suppose we know someone named Smith and have the ability to meet up with him. Is the statement ``Smith is exactly six feet tall'' an affirmative statement? It it refutative?<br></latex>	pg 5695, near bottom<br>
<latex>~\\<br>For what assertions $P$ is the assertion $\neg P$ affirmative?<br></latex>	pg 5696<br>
<latex>~\\<br>Let $P$ and $Q$ be propositions. Under what conditions is $P \vee Q$ affirmative?<br></latex>	pg 5696, near bottom<br>*also read pg 5697 top, which contains some interesting follow up points*<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An infinite conjunction of affirmative assertions is affirmative.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! pg 5697, section 3<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A finite conjunction of affirmative assertions is affirmative.\\~\\<br>true or false?<br></latex>	pg 5697, section 3<br>
<latex>~\\<br>Is the assertion $\mathit{true}$ affirmative? Is the assertion $\emph{false}$ affirmative? Why or why not?<br></latex>	pg 5697, section 4<br>
<latex>~\\<br>Do we include the $\emph{implication}$ logical connective in our logic of affirmable assertions? Why or why not?<br></latex>	pg 5698<br>
<latex>~\\<br>Suppose that $P$ is affirmative, and for a finite family $(Q_i)_{i \in I}$, each $Q_i$ is affirmative. Intuitively, should the distributive law $P \vee \bigwedge_{i \in I} Q_i \Leftrightarrow \bigwedge_{i \in I} (P \vee Q_i)$ hold in our logic of affirmable assertions?<br></latex>	pg 5698<br>
<latex>~\\<br>Does the forgetful functor from $\mbf{Posets}$ to $\mbf{Preorders}$ have a left adjoint?<br></latex>	yes. pg 5702, right above "meet and join"<br>
<latex>~\\<br>What does it mean for a lattice to be \emph{distributive}?<br></latex>	pg 5707, def 3.4.3<br>
<latex>~\\<br>Let $U$ be an infinite set. Is $\mathcal P_{fin} U$ a distributive bounded lattice? Why or why not?<br></latex>	it's not bounded because the nullary join U is an infinite set.<br>pg 5708, example 3.4.8<br>
<latex>~\\<br>What is a \emph{frame}? What is the intuitive motivation behind the definition of \emph{frame}?<br></latex>	pg 5709, top paragraph & definition 3.5.1
<latex>~\\<br>What does it mean for a function between two frames to be a $\emph{frame homomorphism}$?<br></latex>	pg 5709<br>
<latex>~\\<br>What is \emph{The Sierpinski Frame}?<br></latex>	pg 5710, near top<br>
<latex>~\\<br>What does it mean for some subset of a frame be a \emph{subframe}? In particular consider a subframe of a powerset: are such subframes known by a more popular name in mathematics?  <br></latex>	yes. they are topologies.<br>pg 5710<br>
<latex>~\\<br>Let $P$ be a poset. What is the \emph{Alexandrov topology} on $P$?<br></latex>	pg 5710<br>
<latex>~\\<br>Let $X$ be a topological space and $S \subseteq X$. How do we define $\mathit{Int}(S)$?<br></latex>	pg 5711<br>
<latex><br>If $x \in N \subseteq X$ then what does it mean for $N$ to be a \emph{neighborhood} of $x$?<br></latex>	pg 5711, above section 3.7<br><br>
Read section 3.7, starting on pg 5711 and continuing down to the top of pg 5713<br>	pg 5711<br>
<latex>~\\<br>If $l = l_1 l_2 \ldots l_n$ is a finite list of bits then let $\mbf{starts}~l$ denote the assertion $s_1=l_1 \wedge s_2=l_2 \wedge \cdots \wedge s_n=l_n$. The following statement is true, and this should be clear with a bit of thought:\\~\\<br>every observation is a disjunction of observations $\mbf{starts}~l$ where $l$ is a finite list of bits\\~\\<br>See pg 5713<br></latex>	pg 5713<br>
<latex>~\\<br>Let $l$ and $m$ be bitstrings. Is it the case that if $l \sqsubseteq m$ then $\mbf{starts}~l \geq \mbf{starts}~m$?<br></latex>	yes. pg 5713, lemma 3.7.2<br>
Read the last paragraph of pg 5714, "We can argue this using..."<br>	pg 5714<br>
<latex>~\\<br>What does Vickers use $\Omega 2^{*\omega}$ to denote?<br></latex>	pg 5715<br>
Read the section titled "Different physical assumptions", starting on pg 5715 and going to pg 5716.<br>	pg 5715<br>
Read the "Flat domains" section, starting on pg 5716 and continuing to pg 5717.<br>	pg 5716<br>
Read "function spaces", starting on pg 5717 and continuing to 5719.<br>	pg 5717<br>
Read section 3.8, pgs 5719-5720<br>	pg 5719<br>
Give the form of the subbasic observations for Vickers' frame of real number assertions.	pg 5720, tio paragraph of "The real line"
<latex>~\\<br>Translate $x \vDash (q \pm \varepsilon)$ into an inequality. Does the translation use weak or strict inequalities? Why?<br></latex>	pg 5720
<latex>~\\<br>Let $S = \{ (0 \pm \varepsilon) \mid \varepsilon > 0 \}$. What is $\bigcap S$? What is $\bigwedge S$? <br></latex>	pg 5723 near top, the last paragraph on the above page (5722) puts this into context<br>
<latex>~\\<br>Let $A$ be a bounded lattice. What does it mean for $A$ to be a \emph{Heyting lattice}? What does it mean for a function between Heyting algebras to be a \emph{Heyting algebra morphism}? What is a \emph{complete Heyting algebra}? What is a \emph{complete Heyting algebra morphism}?<br></latex>	it means it has exponentials<br>pg 5723, def 3.10.1<br><br>
<latex>~\\<br>Let $A$ be a bounded lattice. Consider the following statement:\\~\\ <br>$A$ is a frame iff it is a cHa.\\~\\<br>Prove or disprove.<br></latex>	pg 5723, prop 3.10.2<br>
How does Vickers define the term <i>semilattice</i>?	He defines it as what I would call a bounded semilattice: a poset with all finite meets (or joins).<br>pg 5726<br>
<latex>~\\<br>Give the four algebraic laws of bounded semilattices.<br></latex>	pg 5726, prop 4.1.2<br>
<latex>~\\<br>What is the algebraic definition of a semilattice homomorphism?<br></latex>	pg 5727 top<br>
Intuitively, give the four steps of <i>presenting</i> a frame.<br>	pg 5727, section 4.2 Generators and Relations,<br>spills to pg 5278 where the term presentation is defined<br><br>
<latex>~\\<br>What, concretely, is the frame $\mathit{Fr}\langle~\mid~\rangle$, with no generators and no relations?<br></latex>	pg 5728, example 4.2.1<br>
<latex>~\\<br>What, concretely, is the frame $\mathit{Fr}\langle a, b \mid~\rangle$? Draw a Hasse diagram.<br></latex>	pg 5728, example 4.2.2, spills to pg 5729<br><br>
<latex>~\\<br>What does it mean for a presentation of a frame to be \emph{free}?<br></latex>	pg 5729, def 4.2.3<br>
<latex>~\\<br>Let $\mathbb T$ denote an algebraic theory (e.g., bounded semilattices, frames, etc.). What does the notation $\mathbb T \langle \mathit{generators} \mid \mathit{relations} \rangle$ mean?<br></latex>	pg 5730, near top, "In general..."<br><br>
Read definition 4.3.1 on pg 5730.<br>	pg 5730<br>
<latex>~\\<br>Provide an algebraic rather than an order-theoretic definition of \emph{frame}.<br></latex>	pg 5731, example (ii) near top.<br>
<latex>~\\<br>Let $\mathbb T \langle G \mid R \rangle$ be a presentation. What is a \emph{model} for this presentation?<br></latex>	pg 5731, def 4.3.3<br><latex>~\\<br>Here is a more categorical take: (This is wrong actually TG should be T*G, the free monad on T at G; so this situation is actually more complicated than what is described below. TODO: correct the below explanation) <br>\begin{itemize}<br>\item We have a $\mathbb T$-algebra $TA \overset{\alpha}{\to} A$. (Note that this is not just any $T$ algebra, but one that respects the equations of the theory $\mathbb T$.)<br>\item We have a function $\sem{\cdot} : G \to A$ (Instead of using the notation $\sem{\cdot}$, we'll call it $h : G \to A$ for notational convenience.)<br>\item To lift $h : G \to A$ to terms, we apply the functor $T$:~~~$Th : TG \to TA$.<br>\item To evaluate the resulting terms, we post-compose with $\alpha$:~~~$(Th;\alpha) : TG \to A$.<br>\end{itemize}<br>Categorically, the relation $R$ is a mono $R \rightarrowtail TG \times TG$.<br>Now, in order for $\alpha$ to truly be a model, it must respect the equations of $R$, i.e. we have a unique arrow \begin{tikzcd} R \ar[r, dashed] & A \end{tikzcd} such that:\\~\\<br>\begin{tikzcd}[sep=60]<br>R \ar[d,tail] \ar[r, dashed] & A \ar[d, tail, "\langle \mathit{id} \text{,} \mathit{id} \rangle"] \\<br>TG \times TG \ar[r,"(Th;\alpha) \times (Th;\alpha)" below] & A \times A<br>\end{tikzcd}<br></latex><br><br>
<latex>~\\<br>Let $\mathbb T$ be an algebraic theory. Formally, what does it mean for a $\mathbb T$-algebra to be \emph{presented} by a presentation $\mathbb T \langle \text{generators} \mid \text{relations} \rangle$?<br></latex>	pg 5732, def 4.3.4. Also read the below text. You might want to make your own version of the definition. I think it is a bit sloppy.<br><br>
<latex>~\\<br>Let $\mathbb T$ be a \emph{finitary} alebraic theory, i.e. one in which<br>\begin{itemize}<br>\item the operators form a set (not a proper class), and<br>\item each operator has finite arity<br>\end{itemize}<br>Consider the following statement:\\~\\<br>Every presentation $\mathbb T \langle G \mid R \rangle$ presents a $\mathbb T$-algebra.\\~\\<br>Prove or disprove.<br></latex>	pg 5733, theorem 4.3.6<br><br>
<latex>~\\<br>Let $\mathbb T$ be a finitary algebraic theory, and let $A$ be a $\mathbb T$-algebra. Consider the following statement:\\~\\<br>$A$ has a presentation.\\~\\<br>Prove or disprove.<br></latex>	pg 5733
<latex>~\\<br>Let $S$ be a semilattice. What is the \emph{universal distributive lattice} $L$ over $S$?<br></latex><br>	pg 5733 bottom / pg 5734 top<br><br>
<latex>~\\<br>Let $A$ be a frame; we call its elements \emph{opens}. Let $X$ be a set; we call its elements points. Let $\vDash$ be a subset of $X \times A$, writing $x \vDash a$ iff $(x,a) \in~\vDash$. What does it mean for $X$ and $A$, equipped with $\vDash$, to be a \emph{topological system}?<br></latex>	pg 5740, def 5.1.1<br>
<latex>~\\<br>Let $D = (X,A)$ be a toplogical system. What does $\mathit{pt}~D$ denote? What does $\Omega D$ denote? <br></latex>	pg 5740 below def 5.1.1<br><br>
Read example 5.1.2 on pg 5740 and example 5.1.3 on pg 5741.<br>Read the entirety of pg 5741.<br>Read example 5.1.4.<br>Read examples 5.1.5 and 5.1.6 on pg 5742.<br><br><br>	pg 5740-5742<br>
Read section 5.2, starting on pg 5742, down to def 5.2.1 on pg 5743.<br>	pg 5742-5743<br>
<latex>~\\<br>Let $D$ and $E$ be topological systems. What is a \emph{continuous map} from $D$ to $E$?<br></latex>	pg 5743, def 5.2.1<br>
Read example 5.2.2 on pg 5743-5744 (note that this demonstrates Vickers' notion of a <i>continuous function</i> defined above).<br>	pg 5743, example 5.2.2<br><br>
<latex>~\\<br>Do topological systems and continuous maps between topological systems form a category? Why or why not?<br></latex>	they do. see def 5.2.3 on pg 5744.<br>
<latex>~\\<br>What does it mean for a continuous map $f : D \to E$ to be a homeomorphism?<br></latex>	categorically: it's just an isomorphism in the category of topological systems and continuous functions<br>pg 5744, def 5.2.4<br>
<latex>~\\<br>Let $a$ be an open in a topological system $D$. What is $a$'s \emph{extent} in $D$? <br></latex>	pg 5747, def 5.3.3<br>
<latex>~\\<br>Let $D$ be a topological system. What is the \emph{spatialization} $\mathit{Spat}~D$ of $D$?<br></latex>	pg 5747, theorem 5.3.4 (i) and also read the paragraph directly above this definition.
<latex>~\\<br>Consider the following statement:\\~\\<br>There is a natural continuous map $e : \mathit{Spat}~D \to D$ defined by <br>\begin{mathpar}<br>\mathit{pt}~e(x)=x \and \Omega e(a) = \text{extent of }a\text{ in D}<br>\end{mathpar}<br>such that any other continuous map \underline{from a topological space E} into $D$ factors uniquely via $e$:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Spat}~D \ar[r, "e" above] & D \\<br>E \ar[u, dashed, "g" left] \ar[ur, "~f=g;e" right] & <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 5747, theorem 5.3.4 (ii) and (iii), proof on next page<br><br>
<latex>~\\<br>What does it mean for a topological system to be \emph{spatial}?<br></latex>	it is homeomorphic to some topological space.<br>pg 5748, paragraph above prop 5.3.5<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The following are equivalent for a toplogical system $D$:<br>\begin{enumerate}<br>\item $D$ is spatial<br>\item $\forall a,b \in \Omega D. ((\forall x \in \mathit{pt}~D. x \vDash a \leftrightarrow x \vDash b) \to a = b)$<br>\item $\forall a,b \in \Omega D. ((\forall x \in \mathit{pt}~D. x \vDash a \to x \vDash b) \to a \leq b)$<br>\end{enumerate}<br>Prove or disprove.<br></latex>	true. pg 5748, prop 5.3.5<br>todo: add impostor?<br>
<latex>~\\<br>Let $A$ be a frame. What is the \emph{locale} corresponding to $A$? What does it mean for a topological system to be \emph{localic}?<br></latex>	pg 5749, def 5.4.1. <br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>The continuous maps from $D$ to $E$ are equivalent to frame homomorphisms from $\Omega E$ to $\Omega D$.\\~\\<br>Prove or disprove.<br></latex>	pg 5749, prop 5.4.2<br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>The continuous maps from $D$ to $E$ are equivalent to frame homomorphisms from $\Omega D$ to $\Omega E$.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! pg 5749, prop 5.4.2<br>
<latex>~\\<br>Let $D$ be a toplogical system. What is its \emph{localification}?<br></latex>	pg 5750, theorem 5.4.3 (i)<br>
<latex>~\\<br>Let $D$ be a toplogical system. Consider the following statements:\\~\\<br>(i) There is a natural continuous map, the localification map $p : D \to \mathit{Loc}~D$ defined by<br>\begin{mathpar}<br>pt~pt(x)(a) = \mbf{true}~~\mathit{iff}~~x \vDash a<br>\and<br>\Omega p(a) = a<br>\end{mathpar}<br>(ii) Any other continuous map from $D$ to a locale $E$ factors uniquely via $p$:<br>\begin{center}<br>\begin{tikzcd}<br>D \ar[dr, "f = p;g~~~" below] \ar[r, "p"] & \mathit{Loc}~D \ar[d,"g" right, dashed] \\<br>                                                    & E<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 5750, theorem 5.4.3 (ii) and (iii)<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$ be upper closed.\\~\\<br>\begin{enumerate}<br>\item What does it mean for $F$ to be a \emph{filter}?<br>\item What does it mean for $F$ to be \emph{prime}?<br>\end{enumerate}<br></latex>	pg 5752, def 5.4.5 (i) and (ii)<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$ be upper closed.\\~\\<br>\begin{enumerate}<br>\item What does it mean for $F$ to be a \emph{completely prime filter}?<br>\item What does it mean for an element $p \in A$ to be \emph{prime}?<br>\end{enumerate}<br></latex>	pg 5752<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$. Consider the following statement:\\~\\<br>$F$ is the true-kernel of a point of the locale of $A$ iff $F$ is a completely prime filter.\\~\\<br>Prove or disprove.<br></latex>	pg 5752, lemma 5.4.6 (i)<br><br><latex>~\\<br>It's not proven in the book, but I can prove it right here.\\~\\<br>$(\Leftarrow)$ Assume that $F$ is a completely prime filter. Consider the function $h : A \to \mbf{2}$ defined such that $h(a) \Leftrightarrow a \in F$. Then $h$ is a frame homomorphism:\\~\\ First, let $S \subseteq A$. Then $h(\bigvee S) \Leftrightarrow \bigvee S \in F \Leftrightarrow \exists s \in S. s \in F \Leftrightarrow \bigvee_{s \in S} h(s)$.\\~\\<br>Second, if $S \subseteq_{fin} A$ then $h(\bigwedge S) \Leftrightarrow \underline{\bigwedge S \in F \Leftrightarrow \forall s \in S. s \in F} \Leftrightarrow \bigwedge_{s \in S} h(s)$.\\~\\<br>The underlined part above can be justified by noting that if $s \not \in F$ for some $s \in S$ then $\bigwedge S \not \in F$, since $F$ is upward closed.\\~\\<br>$(\Rightarrow)$ Let $F$ be the true kernel of a point $h$ of a locale.\\~\\<br>Let $x \in F$. Then $h(x) = true$. Then for all $y$ such that $x \leq y$ we have $h(y) = h(x \vee y) = h(x) \vee h(y) = \mathit{true} \vee h(y) = true$. So $F$ is upward closed.\\~\\<br>Let $x,y \in F$. Then $h(x \wedge y) = h(x) \wedge h(y) = \mathit{true} \wedge \mathit{true} = \mathit{true}$. Hence $F$ is closed under finite meets.\\~\\<br>Let $S \subseteq F$ with $\bigvee S \in F$. Then $h(\bigvee S) = true \therefore \bigvee_{s \in S} h(s) = \mathit{true} \therefore \exists s \in S. h(s) = \mathit{true} \therefore \exists s \in S. s \in F$. Hence $F$ is inaccessible via arbitrary joins.<br></latex><br>
<latex>~\\<br>Let $A$ be a frame and let $I \subseteq A$. Consider the following statement:\\~\\<br>$I$ is the $\mbf{false}$-kernel of a point of the locale of $A$ iff $I = \downarrow p$ for some prime element $p$ of $A$.\\~\\<br>Prove or disprove.<br></latex>	pg 5752, lemma 5.4.6 (ii)<br><br>todo: add impostor?
<latex>~\\<br>There are three equivalent ways of describing the points of a locale. What are they?<br></latex>	pg 5752
<latex>~\\<br>Consider the functors\\~\\<br>$\mathit{Loc} : \text{Topological spaces} \to \text{Locales}$\\<br>$\mathit{Spat} : \text{Locales} \to \text{Topological spaces}$\\~\\<br>Is it true that $\mathit{Loc} \dashv \mathit{Spat}$?<br></latex>	pg 5753, near top<br><br><latex>~\\<br>First, we must define the functorial aspects of $\mathit{Spat}$ and $\mathit{Loc}$. We start with $\mathit{Spat}$:\\~\\<br>$\mathit{pt}~\mathit{Spat}~f : \mathit{pt}~X \to \mathit{pt}~Y = \mathit{pt}~f$\\<br>$\Omega~\mathit{Spat}~f : \mathcal P(\mathit{pt}~Y) \to \mathcal P(\mathit{pt}~X) = \mathit{pt}~ f^{-1}$\\~\\<br>It's not hard to see that $f^{-1}$ is a frame homomorphism (exercise). Also, $\mathit{pt}~f(x) \in A \leftrightarrow x \in \Omega \mathit{Spat} (A) = f^{-1}(A)$.\\~\\<br>Now, we define the functorial aspects of $\mathit{Loc}$.\\~\\<br>$\mathit{Loc}~\matht{pt}~f : \mathit{pt}~\mathit{Loc}~X \to \mathit{pt}~\mathit{Loc}~Y$\\<br>$\mathit{Loc}~\mathit{pt}~f(h) \doteq (\Omega f);h$\\~\\<br>$\mathit{Loc}~\Omega f : \Omega~\mathit{Loc}~Y \to \Omega~\mathit{Loc}~X$\\<br>$\mathit{Loc}~\Omega f \doteq \Omega f$\\~\\<br>It's not hard to see that $\mathit{Loc}~\mathit{pt}~f(h) \vDash a \leftrightarrow h \vDash \Omega f(a)$.<br>TODO: show the adjunction, unit, counit, etc.<br></latex>
Read page 5753, starting at "The point of this is that..." down to the bottom.<br>	<br>
<latex>~\\<br>Consider the following statement, from Vickers:\\~\\<br>\emph{A proof of spatiality of a locale shows completeness of a logical system.} \\~\\<br>Elaborate on what is meant by this.<br></latex>	teh quote is near the bottom of pg 5753. the explanation is in the two paragraphs directly above it.
<latex>~\\<br>Let $X$ be a toplogical space. What does it mean for a closed set $F \subseteq \mathit{pt}~X$ to be \emph{irreducible}?<br></latex>	pg 5754, near def 5.5.1
<latex>~\\<br>If $F$ is a closed set and $x \in \mathit{pt}~X$, what does it mean for $x$ to be a \emph{generic point} for $F$?<br></latex>	pg 5754, def 5.5.1, part 2<br><br><br>
<latex>~\\<br>Let $X$ be a topological space. What does it mean for $X$ to be \emph{sober}?<br></latex>	pg 5754, def 5.5.1<br>
<latex>~\\<br>Consider the following statements:<br>\begin{itemize}<br>\item If $X$ is a toplogical space, then $\mathit{Loc}~X$ is spatial (and localic)<br>\item If $D$ is a locale, then $\mathit{Spat}~D$ is localic (and spatial).<br>\end{itemize}<br>Prove or disprove.<br></latex>	pg 5755, prop 5.5.4<br>
<latex>~\\<br>Let $D$ be a toplogical space, and $Y \subseteq \mathit{pt}~D$. What is the \emph{subspace topology} on $Y$?<br></latex>	pg 5758, def 6.1.1<br>read the paragraph above that definition: it is helpful<br><br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>If a continuous map $i : E \to D$ has $\Omega i$ surjective then $\mathit{pt}~i$ is injective.\\~\\<br>Prove or disprove.<br></latex>	pg 5758, near bottom<br><br>
<latex>~\\<br>What does it mean for a continuous map $i$ to be an \emph{embedding}?<br></latex>	pg 5759, def 6.1.2 near top.<br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems. How do we define their \emph{toplogical sum} $\Sigma_{\lambda} D_{\lambda}$? Provide motivation for this definition.<br></latex>	pg 5765, def 6.3.1 and the text above it.<br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems and let $\mu \in \lambda$. How do we define the $\mu$-\emph{injection} continuous map $i_{\mu} : D_{\mu} \to \Sigma_{\lambda} D_{\lambda}$?<br>Consider the following statement:\\~\\<br>$\Sigma_\lambda D_{\lambda}$ is a topological system, and the maps $i_{\mu}$ are embeddings.\\~\\<br>Prove or disprove.<br></latex>	pg 5766, theorem 6.3.2 (i) (also see the text directly above)<br><br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems. Consider the following statement:\\~\\<br>The topological sum $\Sigma_{\lambda} D_\lambda$, as defined by Vickers, is a categorical coproduct.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5766, theorem 6.3.2 (ii)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The topological sum of spatial systems is still spatial.\\~\\<br>Prove or disprove.<br></latex>	pg 5766, prop 6.3.3 (i) near bottom.<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A topological sum of localic systems is still localic.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5767, point (ii) at top of page<br>
<latex>~\\<br>What is the initial object of the category $\textbf{topological systems}$?<br></latex>	pg 5767, bottom paragraph<br>
<latex>~\\<br>Let $D$ be a topological system. Consider the following statement:\\~\\<br>Up to homeomorphism, decompositions $D \cong E + E'$ correspond to complementary pairs of opens of $D$, i.e. pairs $a,b \in \Omega D$ such that $a \wedge b = \mbf{false}$ and $a \vee b = \mbf{true}$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5768, prop 6.3.4.<br>
Read pg 5768, "Topological products", down to def 6.4.1 on pg 5769<br>	pg 5768<br>
<latex>~\\<br>Let $A$ and $B$ be two frames. How do we define their \emph{tensor product}?<br></latex>	pg 5769, def 6.4.1<br>the simplest way to describe it: a *coproduct* of frames!<br>
<latex>~\\<br>Recall that $A \otimes B$ denotes the tensor product of frames $A$ and $B$. Define <br>$$i_a(a) \doteq a \otimes \mbf{true}$$<br>and<br>$$i_b(b) \doteq \mbf{true} \otimes b$$<br>Consider the following statement:\\~\\<br>Let $f : A \to C$ and $g : B \to C$ be frame homomorphisms. Then there is a unique frame homomorphism $h : A \otimes B \to C$ such that $f = i_A;h$ and $g = i_B;h$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5770, prop 6.4.2<br>todo: add impostor?
Read lemma 6.4.3 on bottom of pg 5770 (no need to prove)<br>	<br>
<latex>~\\<br>Let $D$ and $E$ be toplogical systems. How do we define the \emph{topological product} $D \times E$ of $D$ and $E$?<br></latex>	pg 5771, def 6.4.4<br><br>
<latex>~\\<br>Let $D$ and $E$ be topological systems and let $D \times E$ be the product system of $D$ and $E$. How do we define the projections $p : D \times E \to D$ and $q : D \times E \to E$.<br></latex>	pg 5771, below def 6.4.4
<latex>~\\<br>Let $D$ and $E$ be topological systems and $p : D \times E \to D$ and $q : D \times E \to E$ its projection maps. Consider the following statement:\\~\\<br>$D \times E$ is a topological system, and $p$ and $q$ are continuous.\\~\\<br>Prove or disprove.<br></latex>	pg 5771
<latex>~\\<br>Let $D$ and $E$ be topological systems, $D \times E$ their product system, and $p : D \times E \to D$ and $q : D \times E \to E$ its projections. Consider the following statement:\\~\\<br>If $f : F \to D$ and $g : F \to E$ are continuous maps, then there is a unique continuous map $h : F \to D \times E$ such that $f = h;p$ and $g = h;q$.\\~\\<br>Prove or disprove.<br></latex>	pg 5771, theorem 6.4.5 (ii)<br><br>
<latex>~\\<br>Let $x$ and $y$ be two points. What does it mean for $y$ to \emph{specialize} $x$?<br></latex>	pg 5777, def 7.1.1<br>
<latex>~\\<br>Let $D$ be the system $2^{*\omega}$: points are finite and infinite sequences of bits. Consider the following statement:\\~\\<br>For sequences $s$ and $t$, $s \sqsubseteq t$ iff $s$ is a prefix of $t$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5777, example 7.1.2<br>
Read pg 5778, starting at "Now the finite sequences occur..."	pg 5778<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In any Hausdorff topological space, $x \sqsubseteq y$ iff $x = y$.\\~\\<br>Prove or disprove.<br></latex>	pg 5779, prop 7.1.3<br><br>
<latex>~\\<br>What does it mean for a topological system to be $T_0$?<br></latex>	pg 5779. def 7.1.4<br>
<latex>~\\<br>Give two examples of topological systems that are \emph{not} $T_0$.<br></latex>	pg 5779<br>
<latex>~\\<br>Let $D$ be a toplogical system. What is the $T_0$-ification of $D$?<br></latex>	pg 5780, second point under "Some examples are --"<br>
<latex>~\\<br>What does it mean for a topological system to be $T_1$? $T_2$?<br></latex>	pg 5780, second and third points under "some examples are"<br>
<latex>~\\<br>To define a disjunction of points, a naive approach might be:<br>$$\bigvee S \vDash a~~~\text{   iff   }~~~x \vDash a \text{ for some } x \in S$$<br>What is the problem with this approach and what is the solution?<br></latex>	pg 5780, section 7.2<br>
<latex>~\\<br>Let $\sqsubseteq$ be a preorder on a set $X$. What does it mean for a subset $S \subseteq X$ to be \emph{directed}? <br></latex>	pg  5780, def 7.2.1 near bottom<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Any disjunction of points is a join.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5781, prop 7.2.2<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Any join of points is a disjunction.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. see pg 5781, below prop 7.2.2
<latex>~\\<br>Read the section starting with "The second counterexample shows..." near the top of pg 5782<br></latex>	pg 5782<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In a locale $D$, any directed set of points has a disjunction.\\~\\<br>Prove or disprove.<br></latex>	pg 5782, theorem 7.2.3<br><br>
<latex>~\\<br>What, intuitively, is a Scott Topology? How does Vickers arrive at the concept?<br></latex>	pg 5783, section 7.3 top paragraph
<latex>~\\<br>Let $X$ be a poset. What is a \emph{Scott open} subset of $X$? <br></latex>	pg 5783, theorem 7.3.1 (i)<br><br>
<latex>~\\<br>Let $X$ be a poset. What is a \emph{Scott open} subset of $X$? Consider the following statement:\\~\\<br>If $X$ and $Y$ two posets, then a function from $X$ to $Y$ is Scott continuous iff it preserves directed joins.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5783, theorem 7.3.1 (iv)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In a locale, the extent of any open is Scott open with respect to the specialization order.\\~\\<br>Prove or disprove.<br></latex>	ture. pg 5784, corollary 7.3.2.<br>
Read example 7.3.3 on pg 5784.	pg 5784<br>
<latex>~\\<br>Let $A$ be a frame. Consider the following statement:\\~\\<br>There is a 1-1 correspondence between<br>\begin{itemize}<br>\item functions from $A$ to $\mbf{2}$ that preserve finite meets and directed joins, and <br>\item subsets of $A$ that are both filters and open in the Scott topology on $A$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 5786, prop 8.1.1<br>
What is a <i>Scott open filter</i>?	it is a subset of a frame that is both a filter and open in the Scott topology.<br>pg 5786, prop 8.1.1<br><br>
<latex>~\\<br>Let $F$ and $F'$ be Scott open filters of a frame $A$ and $a \in A$.<br>\begin{itemize}<br>\item What does $F \vDash a$ mean?<br>\item What does $F \sqsubseteq F'$ mean?<br>\end{itemize}<br></latex>	pg 5787 top<br>
<latex>~\\<br>Consider the following statement:~\\~\\<br>If $A$ is a frame, then the following conditions on a monotone function $F : A \to \mbf{2}$ are equivalent:<br>\begin{enumerate}<br>\item $F$ preserves directed joins <br>\item if $X \subseteq A$ and $F \vDash \bigvee X$ then $F \vDash \bigvee X'$ for some finite $X' \subseteq X$.<br>\end{enumerate}<br>Prove or disprove.<br></latex>	true. pg 5787, prop 8.1.2<br>
<latex>~\\<br>Let $D$ be a topological system. Consider the following two statements:<br>\begin{enumerate}<br>\item A finite set $C$ of points of $D$ gives rise to a Scott open filter in $\Omega D$, its \emph{conjunction} $\bigwedge C$, defined by $$\bigwedge C \vDash a~~~\text{iff}~~~x \vDash a \text{ for all }x \in C\text{, i.e. }C \subseteq \mathit{extent}(a)$$<br>In other words, as a filter, $\bigwedge C$ is the intersection of the completely prime filters corresponding to the points in $C$.<br>\item If $C \subseteq C'$ then $\bigwedge C \supseteq \bigwedge C'$<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 5787, prop 8.1.3<br>
<latex>~\\<br>What does it mean for a set $C$ of points to be \emph{compact}?<br></latex>	pg 5787, def 8.1.4 near bottom<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Let $f : D \to E$ be a continuous map and let $C \subseteq \mathit{pt} D$ be compact. Then so is its image $f(C) = \{ \mathit{pt} f(x) \mid x \in C \}$.\\~\\<br>Prove or disprove.<br></latex>	pg 5788, prop 8.1.5
<latex>~\\<br>Given a monad $\mbf{T} = (T, \eta, \mu)$, on a category $\mathcal V$, what is its \emph{Kleisli resolution}? <br></latex>	pg 6438, def 2.1.10<br><br>
<latex>~\\<br>Given a monad $\mbf{T} = (T, \eta, \mu)$ on a category $\mathcal V$, what is its \emph{Eilenberg-Moore} resolution? <br></latex>	pg 6439, def 2.1.11<br>Jacobs coalgebra (contained in this document) also has a good discussion of EM categories (todo: find the page to refer to)<br><br><br>
<latex>~\\<br>What is the standard way to decompose a continuations monad into a resolution?<br></latex>	pg 6439, prop 2.1.13<br>(You solved an exercise in Jacobs Coalgebra about this)<br>
<latex>~\\<br>What is the standard decomposition of the global state monad into a resolution?<br></latex>	pg 6439, prop 2.1.12<br><br><br>
<latex>~\\<br>If $J : \mathcal D \to \mathcal V$ is a diagram and $A$ an object in $\mathcal V$, we say that a natural transformation $\alpha : \Delta(A) \to J$ is a \emph{cone over} $J$. What does the notation $\Delta(A)$ mean in this case?<br></latex>	pg 6640 very top paragraph<br><br>
<latex>~\\<br>Given a diagram $J$, what does $\mathit{pr}^J$ denote?<br></latex>	pg 6440<br>def 2.1.17<br>
<latex>~\\<br>What is a \emph{kernel pair} of a morphism $f : A \to B$?<br></latex>	pg 6440, def 2.1.20<br><br>
<latex>~\\<br>Let $\alpha : J \to \Delta(A)$ be a cocone of a diagram $J$. What does $[\alpha]$ denote?<br></latex>	pg 6441<br>
<latex>~\\<br>What is a \emph{Countable Lawvere Theory}?<br></latex>	pg 6444, def 2.1.34<br>(Also: Jacobs Coalgebra has a nice description of Lawvere theories)<br><br><br>
<latex>~\\<br>What is a \emph{model} of a countable Lawvere theory?<br></latex>	pg 6444, def 2.1.36<br>(see Jacobs coalgebra for a more in-depth explanation)<br>
<latex>~\\<br>Given models $\mathcal M_1 : \mathcal L \to \mathcal V$ and $\mathcal M_2 : \mathcal L \to \mathcal V$ of a countable Lawvere theory $I : \aleph_1^{op} \to \mathcal L$, what does $\mathit{Mod}(L,V)$ denote?<br></latex>	pg 6444, def 2.1.37<br>
State Zorn's lemm (no need to prove)	pg 5789 top<br><br>
<latex><br>Let $D$ be a locale, and $F$ a Scott open filter on $\Omega D$. Let <br>$$C = \{ x \in \mathit{pt}~D : F \sqsubseteq x \} = \bigcap \{ \mathit{extent}(a) : F \vDash a \}$$<br>Consider the following statement:<br>$$F = \wedge C$$<br>Prove or disprove.<br></latex>	pg 5789, lemma 8.2.2<br>
<latex>~\\<br>Let $D$ be a topological system, and let $C$ and $C'$ be subsets of $\mathit{pt}~D$ (not necessarily compact). Furthermore, let $\wedge C \sqsubseteq \wedge C'$. Consider the following statement:\\~\\<br>For every $y \in C'$ there exists $x \in C$ with $x \sqsubseteq y$.\\~\\<br>Prove or disprove.<br></latex>	pg 5790 (i) => (ii)<br><br><latex>~\\<br>My approach was slightly different using proof-by-contrapositive.\\~\\<br>Let $y \in C'$. Suppose $\forall x \in C. x \not \sqsubseteq y$, i.e. $\forall x \in C. \exists a_x. x \vDash a_x \wedge y \not \vDash a_x$.\\~\\<br>Hence $a_x \not \in C'$. Hence $\bigvee_{x \in C} a_x \not \in \wedge C'$ but $\bigvee_{x \in C} a_x \in \wedge C$.<br></latex>
<latex>~\\<br>Let $D$ be a topological space, and let $C$ and $C'$ be subsets of $\mathit{pt}~D$ (not necessarily compact). Further, assume that for every $y \in C'$ there exists $x \in C$ with $x \sqsubseteq y$. Consider the following statement:<br>$$ \wedge C \subseteq \wedge C' $$<br>Prove or disprove.<br></latex>	pg 5790, proof at top (ii) => (i)<br>
<latex>~\\<br>What is the \emph{saturation} of a compact set of points X?<br></latex>	the greatest compact set that has the same conjunction as X.<br>pg 5788, third bullet point.<br> 
<latex>~\\<br>Let $D$ be a topological system and $C$ a set of points. Consider the following statement:\\~\\<br>There is a greatest set of points with the same conjunction as $C$, namely $\uparrow C$.\\~\\<br>Prove or disprove.<br></latex>	it's obvious<br>pg 5790, lemma 8.2.4 (i)<br>
<latex>~\\<br>Let $D$ be a topological system and $C$ a set of points. Consider the following statement:\\~\\<br>$\uparrow C$ is the intersection of the extents of the opens satisfied by $\wedge C$.\\~\\<br>Prove or disprove.<br></latex>	pg 5790, lemma 8.2.4 (ii)<br><br>
<latex>~\\<br>State the \emph{Scott Open Filter Theorem} (no need to prove).<br></latex>	pg 5790, theorem 8.2.5<br>
<latex>~\\<br>Let $P$ be a poset. What is an \emph{ideal} of $P$? What does \emph{Idl(P)} denote? What does it mean for an element $x \in P$ to be \emph{compact}?<br></latex>	pg 5804, def 9.1.1<br><br>
<latex>~\\<br>Let $P$ be a poset. What does $KP$ denote? <br></latex>	pg 5804<br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>\emph{Idl}(P) is a dcpo.\\~\\<br>Prove or disprove.<br></latex>	pg 5804, prop 9.1.2 (i)<br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>The ideals $\downarrow x$ are precisely the compact elements of \emph{Idl}(P)\\~\\<br>Prove or disprove.<br></latex>	pg 5804, prop 9.1.2<br><br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>Every element of $\mathit{Idl}(P)$ is the directed join of the compact elements less than it.\\~\\<br>Prove or disprove.<br></latex>	pg 5804, prop 9.1.2 (iv)<br><br>
<latex>~\\<br>Let $P$ be a poset and let $f : P \to D$ be a monotone function into a dcpo. Consider the following statement.\\~\\<br>$f$ extends uniquely to a Scott continuous map from $\mathit{Idl}(P)$ to $D$.\\~\\<br>Prove or disprove.<br></latex>	pg 5804.<br>
<latex>~\\<br>What does it mean for a dcpo to be \emph{algebraic}?<br></latex>	pg 5805, def 9.1.3<br>This definition seems sloppy, but I think it's trying to convery the same thing as Amadio and Curien's definition from "Domains and Lambda Calculi":<br><br><latex><br>A dcpo $D$ is called algebraic if for all $x \in D$ the set $\{ d \in KD \mid d \leq x \}$ is directed and has lub $x$.<br></latex><br><br>actually, that's equivalent to this definition. im dum<br>
<latex>~\\<br>Give Ahman's value type syntax for eMLTT.<br>Give Ahman's computation type syntax for eMLTT.<br></latex>	pg 6466<br>
<latex>~\\<br>Explain the purpose of the type constructor $\underline{C} \multimap \underline{D}$ in Ahman's eMLTT.<br></latex>	The inhabitants of this type are effectful functions that accept computations of type $\underline{C}$ as their arguments and additionally guarantee that the argument computations "happens first" in function application.<br>pg 6466 bottom / 6467 top<br><br> 
<latex>~\\<br>Give the form of Ahman's ``function application'' value term. Give the form of the ``force'' computation term.<br></latex>	pg 6468/6469<br>
<latex>~\\<br>Give the full syntax of Ahman's ``homomorphism terms'' (metavariable K).<br></latex>	pg 6469 near top<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In Ahman's eMLTT, value terms can contain free computation variables.\\~\\<br>True or false? (no need to prove)<br></latex>	False. pg 6470, prop 3.1.3 (a)<br> 
<latex>~\\<br>Consider the following statement:\\~\\<br>Every homomorphism term $K$ contains exactly one free computation variable.\\~\\<br>True or false? (no need to prove)<br></latex>	true. pg 6470, prop 3.1.3 (b)<br>
<latex>~\\<br>Give the form of Ahman's ``computational pattern-matching'' term. How does it compare to the ``sequential composition'' terms $M~\mbf{to}~x.~N$ that we find in both CBPV and eMLTT?<br></latex>	pg 6471, second paragraph. Don't forget that the body is a homomorphism term K!<br>
<latex>~\\<br>Compare and contrast eMLTT's ``homomorphism terms'' with its ``computation terms''. Why are homomorphism terms called ``homomorphism terms''?<br></latex>	pg 6471. Third and fourth paragraphs.<br>
<latex>~\\<br>Read definition 3.1.4 on pgs 6472/6473<br></latex>	pg 6472<br>
Read the propositions stated on pg 6473.<br>	pg 6473.<br>
<latex>~\\<br>In eMLTT, we define the substitution of a computation term $M$ for a computation variable $\mathit{FCV}(K) =z$ in a homomorphism term $K$ by induction on the structure of $K$. For example,<br><br>$$z[M/z] \doteq M$$<br><br>Complete the following definitions:<br><br>$$(K~\mbf{to}~x:A~\mbf{in}_{\underline{C}}~N)[M/z] \doteq \underline{~~~~~~~~~~~~}$$<br><br>$$ (\lambda x : A. K)[M/z] \doteq \underline{~~~~~~~~~~~~~~} $$<br><br></latex>	pg 6474, def 3.1.10 near top.<br>*Now that you're done answering the question, you must read propositions 3.1.11 and 3.1.12 as part of answering this card*<br>
<latex>~\\<br>Let $D$ be a locale. What does $QD$ denote? Consider the following statement:\\~\\<br>$QD$ under $\sqsubseteq$ has finite meets and directed joins, and the finite meets distribute over directed joins.\\~\\<br>Prove or disprove.<br></latex>	pg 5790, theorem 8.2.6 (i)<br>
<latex>~\\<br>Let $D$ be a locale. Consider the following statement:\\~\\<br>The finite meets and directed joins for both $QD$ and $\Omega D$ are logical conjunctions and disjunctions with respect to $\vDash$.\\~\\<br>Prove or disprove.<br></latex>	pg 5791 (ii) near top<br>
<latex>~\\<br>Let D be a locale. Consider the following statement:\\~\\<br>Treating the Scott open filters concretely as subsets of $\Omega D$, we have that $\sqsubseteq$, $\bigsqcap$, and $\bigsqcup^{\uparrow}$ become $\supset$, $\bigcup$, and $\bigcap^{\downarrow}$.\\~\\<br>Prove or disprove.<br></latex>	pg 5791, (iii)<br><br>
<latex>~\\<br>Let $D$ be a locale. Consider the following statement:\\~\\<br>In terms of arbitrary compact sets of points, $\sqsubseteq$ and $\bigsqcap$ are represented by $\sqsubseteq_U$ and $\bigcup$.\\~\\<br>Prove or disprove.<br></latex>	pg 5791 (v)<br><br>
<latex>~\\<br>Let $U$ be a subset of $\mathit{pt}~2^{*\omega}$. Consider the following statement:\\~\\<br>$U$ is compact and open iff it is of the form $\uparrow S$ where $S$ is a finite set of finite points (points that are finite sequences).\\~\\<br>Prove or disprove.<br></latex>	true. pg 5793, prop 8.4.1.<br><br>
<latex>~\\<br>Let $U$ be a subset of $\mathit{pt}~2^{*\omega}$. Consider the following statement:\\~\\<br>$U$ is compact iff it is of the form $\uparrow S$ where $S$ is a finite set of finite points (points that are finite sequences).\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. the set of all infinite sequences is a counterexample. It's compact but not open.<br><br>pg 5793, prop 8.4.1 near bottom<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The set $2^{\omega}$ of infinite bit sequences is compact in $2^{* \omega}$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5794, prop 8.4.2<br>
<latex>~\\<br>Let $X$ and $Y$ be topological spaces. Consider the following statement:\\~\\<br>Their spatial product $X \times Y$ is compact.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5794 theorem 8.5.1, spills onto pg 5795.<br>
<latex>~\\<br>Let $D$ be an algebraic dcpo and $P = KD$ be its set of compact elements. Consider the following statement:\\~\\<br>$D$ is isomorphic to $\mathit{Idl}(P)$\\~\\<br>Prove or disprove.<br></latex>	pg 5805, prop 9.1.4<br><br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>If $P$ has finite meets, then $\mathit{Idl}(P)$ has finite meets and directed joins, and the meets distribute over the directed joins.\\~\\<br>Prove or disprove.<br></latex>	pg 5805, theorem 9.1.5 (i)<br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>If $P$ has finite joins, then $\mathit{Idl}(P)$  has all joins.\\~\\<br>Prove or disprove.<br></latex>	pg 5805, theorem 9.1.5<br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>If $P$ is a distributive lattice, then $\mathit{Idl}(P)$ is a frame.\\~\\<br>Prove or disprove.<br></latex>	pg 5805, theorem 9.1.5 (iii)<br>
<latex>~\\<br>What does it mean for a presentation of a frame to be \emph{coherent}?<br></latex>	pg 5807<br>(the logical definition of coherent is discussed at MiscStudy.pdf pg 10206, i.e. Jacobs Categorical Logic and Type Theory Section 4.1)
<latex>~\\<br>Let $A$ be a frame such that $A$ has a coherent presentation. Consider the following statement:\\~\\<br>$A \cong \mathit{Idl}(K)$ for some distributive lattice K.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5807, theorem 9.2.2 (ii)<br>
<latex>~\\<br>Let $A$ be a frame. Let $A \cong \mathit{Idl}(K)$ for some distributive lattice $K$. Consider the following statement:\\~\\<br>As a poset $A$ is algebraic, and also $KA$ is a sublattice.\\~\\<br>Prove or disprove.<br></latex>	pg 5807<br>
What does it mean for a frame to be <i>coherent</i>?	it means that it satisifies one of the equivalent conditions of theorem 9.2.2 on pg 5807<br>(pg defn 9.2.3, pg 5808)<br>
<latex>~\\<br>What does it mean for a locale $D$ to be \emph{spectral}?<br></latex>	pg 5808, defn 9.2.3 near top<br><br>
<latex>~\\<br>What does it mean for a topological system to be \emph{spectral}?<br></latex>	pg 5808, defn 9.2.3 near top<br>
<latex>~\\<br>Let $K$ be a distributive lattice. What does \mathit{Spec}~K denote?<br></latex>	pg 5808, top of page. (recall that for a poset P, KP is the set of compact elements of P -- see pg 5804 defn 9.1.1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Spectral locales are locally compact.\\~\\<br>Prove or disprove.<br></latex>	pg 5808, theorem 9.2.4<br>
<latex>~\\<br>A lattice is a frame iff it is a complete Heyting algebra. Consider the frame $\Omega 2^{*\omega}$. Suppose that $\mbf{starts}~l, \mbf{starts}~k \in \Omega 2^{*\omega}$ such that $l$ is a prefix of $k$. Concretely describe the element $(\mbf{starts}~l) \to (\mbf{starts}~k)$. In general, for elements $a,b$ of frame, how do we describe $a \to b$ using only frame operators? (arbitrary joins and finite meets)<br></latex>	pg 5723, in proof of proposition 3.10.2 near bottom<br>
<latex>~\\<br>Let $D$ be a topological space, and $Y \subseteq \mathit{pt}~D$. What is the \emph{subspace topology} on $Y$?<br></latex>	pg 5758, def 6.1.1<br>
<latex>~\\<br>What does it mean for a continuous map to be an \emph{embedding}?<br></latex>	pg 5759 top<br>
<latex>~\\<br>Let $A$ be a frame, $B$ and $C$ locales, and $f : A \to B$ and $g : A \to C$ two surjective frame homomorphisms. What does $f \leq g$ mean?<br></latex>	pg 5759, def 6.2.1. Make sure to read the text below: "The h in the definition..."<br><br>
<latex>~\\<br>Let $A$ and $B$ be two frames, with $A = \mathit{Fr} \langle G \mid R \rangle$. Consider the following statement:\\~\\<br>$B$ is a frame homomorphic image of $A$ iff $B$ can be presented as <br>$$B = \mathit{Fr} \langle G \mid R' \rangle$$<br>with $R \subseteq R'$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5759, prop 6.2.2 near bottom.<br>todo: add impostor?<br>
<latex>~\\<br>What is a \emph{congruence} on an algerbra $A$?<br></latex>	pg 5760, "Congruences" section<br>
<latex>~\\<br>Let $A$ be a frame, $a,a' \in A$, and $f : A \to B$ a surjective frame homomorphism. What does $a \leqq a'$ mean?<br></latex>	pg 5760, "Congruence preorders"<br>
<latex>~\\<br>Let $A$ be a frame and $\leqq$ be a subset of $A \times A$. Suppose the following conditions hold:<br>\begin{itemize}<br>\item if $a' \leq a \leqq b \leq b'$ then $a' \leqq b'$<br>\item if $a \leqq b$ for all $a \in S (S \subseteq A)$ then $\bigvee S \leqq b$<br>\item if $a \leqq b$ for all $b \in S (S \subseteq A, S \text{ finite })$ then $a \leqq \bigwedge S$<br>\item if $a \leqq b$ and $b \leqq c$ then $a \leqq c$<br>\item $a \leqq a$  <br>\end{itemize}<br>Then $\leqq$ is a frame congruence preorder.<br></latex>	true. pg 5760, proposition 6.2.3<br>todo: add impostor?
<latex>~\\<br>Let $S$ be a semilattice. What is a \emph{cover relation} in $S$?<br></latex>	pg 5735, def 4.4.1<br>
<latex>~\\<br>Let $S$ be a semilattice, $L$ a lattice, and $f : S \to L$ a function. If $U \dashv a$ then what does it mean for $f$ to transform the cover $U$ to a join?<br></latex>	pg 5735, def 4.4.1<br>
<latex>~\\<br>Let $S$ be a semilattice. What is a \emph{coverage} on $S$? Any set $C'$ of coverage relations generates a coverage $C$: how?<br></latex>	pg 5735, def 4.4.1<br>
<latex>~\\<br>Let $C$ be a coverage on $S$. What does $\mathit{C}$-$\mathit{Idl}(S)$ denote?<br></latex>	pg 5735, right above def 4.4.2<br><br>
<latex>~\\<br>What is a \emph{site}?<br></latex>	pg 5735<br>
<latex>~\\<br>Let $S$ be a semilattice, $C'$ a set of cover relations on $S$, and $C$ the coverage it generates. Consider the following statement:\\~\\<br>$\mathit{C}$-$\mathit{Idl}(S)$ is a frame under the subset ordering ($I \leq J$ iff $I \subseteq J$)\\~\\<br>Prove or disprove.<br></latex>	true. pg 5735, theorem 4.4.2 (i).<br>
<latex>~\\<br>Let $S$ be a semilattice, $C'$ a set of cover relations on $S$, and $C$ the coverage it generates. Consider the following statement:\\~\\<br>There is a function $f : S \to \mathit{C}$-$\mathit{Idl}(S)$ that preserves finite meets and transforms the covers of $C'$ to joins.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5735, theorem 4.4.2 (ii)<br><br>
<latex>~\\<br>Let $X$ and $Y$ be subsets of a semilattice $S$. Then what do $X \wedge Y$ and $X / Y$ denote?<br></latex>	pg 5736, def 4.4.2.1 near top<br>
<latex>~\\<br>Let $S$ be a semilattice and $X,Y,Z \subseteq S$. Consider the following statement:\\~\\<br>$Z \subseteq X/Y \Leftrightarrow Y \subseteq X/Z$\\~\\<br>Prove or disprove.<br></latex>	true. pg 5736, prop 4.4.2.2 (proof is omitted, but it does give an intermediate step that should help... is this an exponential?)
<latex>~\\<br>Let $S$ be a semilattice and $X,Y,Z \subseteq S$. Consider the following statement:\\~\\<br>If $X$ and $Y$ are $C$-ideals, then $X \wedge Y = X \cap Y$ (i.e. $X \wedge Y$ in $\mathit{C}$-$\mathit{Idl}(S))$\\~\\<br>Prove or disprove.<br></latex>	true. pg 5736, prop 4.4.2.2 (ii)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In the theory of frames, any presentation by generators and relations presents a frame.\\~\\<br>Prove or disprove.<br></latex>	pg 5737, theorem 4.4.3<br>
<latex>~\\<br>Let $X$ be a topological space. What does it mean for $X$ to be \emph{locally compact}?<br></latex>	pg 5796, def 8.5.4<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The spatial topological system $2^{*\omega}$ is locally compact.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5796, example 8.5.5 (ii)<br>
<latex>~\\<br>Let $D$ be a locally compact space, $K$ a compact subset of $\mathit{pt}~D$, and $T$ a finite subset of $\Omega D$ such that $K \subseteq \bigvee T$. Consider the following statement:\\~\\<br>For each $b \in T$ we can find an open set $U_b$ and a compact set $K_b$ such that $U_b \subseteq K_b \subseteq b$ and $K \subseteq \bigcup_{b} U_b$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5797, lemma 8.5.6.<br>
<latex>~\\<br>The intuition behind local compactness is that there are enough compact sets to describe the structure of the open sets, and in fact we can make this precise. Let $D$ be a spatial locale. For each $a \in \Omega D$, the set $E(a) = \{ F \in QD: F \vDash a \}$ (a generalized extent of $a$) is a Scott open filter of $QD$ - this follows from the concrete representation of $\sqcap$ and $\bigsqcup^{\uparrow}$ as $\cap$ and $\bigcup^{\uparrow}$ on filters.\\~\\<br>If $D$ is a locally compact spatial locale, then the function $E$ defined above is an order isomorphism between $\Omega D$ and the set of Scott open filters of $QD$.\\~\\<br>Prove or disprove.<br></latex>	pg 5797, theorem 8.5.7<br><br>
<latex>~\\<br>Consider the following statement (Note: this is technically part of chpt 6, but it involves coverages so I'm putting it in this section):\\~\\<br>The elements of $A \otimes B$ can be represented uniquely in the form $\bigvee \{ a \otimes b \mid \langle a , b \rangle \in I \}$, where $I \subseteq A \times B$ satisfies:<br>\begin{itemize}<br>\item if $a' \leq a$, $b' \leq b$, and $\langle a, b \rangle \in I$, then $\langle a', b' \rangle \in I$;<br>\item if $\langle x, b \rangle \in I$ for all $x \in X \subseteq A$, then $\langle \bigvee X, b \rangle \in I$; and<br>\item if $\langle a, y \rangle \in I$ for all $y \in Y \subseteq B$, then $\langle a, \bigvee Y \rangle \in I$<br>\end{itemize}\\~\\<br>Prove or disprove.<br></latex>	true. proof at top of pg 5771.<br>
<latex>~\\<br>Let $A$ and $B$ be frames, let $C$ and $D$ be compact sets of points from the locales of $A$ and $B$, and let $I$ be a bilinear ideal of $A \times B$. Consider the following statement:<br>$$\bigwedge(C \times D) \vDash \bigvee I \text{ iff } \bigwedge C \vDash a \text{ and } \bigwedge D \vDash b \text{ for some } \langle a, b \rangle \in I$$<br>Prove or disprove.<br></latex>	true. pg 5759 bottom<br>todo: copy the definition of *bilinear ideal* into this card's front side so that we don't need to go look it up.<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A topological space is spectral iff<br>\begin{itemize}<br>\item it is localic<br>\item any finite intersection of compact open sets is still compact<br>\item the compact open sets form a basis<br>\end{itemize}<br>Prove or disprove.<br></latex>	pg 5808, prop 9.2.5<br>(localic means homeomorphic to a locale - i.e. a point is equivalent to the set of observations on it)
Read the first paragraph of section 9.3 on page 5809.<br>	pg 5809<br>
<latex>~\\<br>What does it mean for an open $a$ to be \emph{completely coprime}?<br></latex>	pg 5809 (*) section 9.3<br><br>
<latex>~\\<br>Suppose that $a$ is an open of a spectral algebraic locale. What can be said about $a$ when the following holds?<br><br>$$\text{if } a \leq \vee^{\uparrow} S \text{ then } a \leq s \text{ for some } s \in S$$<br><br></latex>	a is a compact open. pg 5809<br><br>
<latex>~\\<br>Let $a$ be an element of a frame. What does it mean for $a$ to be \emph{coprime}?<br></latex>	pg 5809, below (*)<br><br>
<latex>~\\<br>Let $D$ be a spectral locale, and let $a \in \Omega D$. Consider the following statement:<br>$a$ is completely coprime iff<br>\begin{itemize}<br>\item $a$ is compact ($a \in K \Omega D$)<br>\item $a \neq false$, and<br>\item $a = b \vee c$ with $b,c \in K \Omega D$, then either $a = b$ or $a = c$ <br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 5810, prop 9.3.1<br>
<latex>~\\<br>Let $D$ be a spectral locale, and let $a \in \Omega D$. Consider the following statement:<br>$a$ is completely coprime iff<br>\begin{itemize}<br>\item $a \neq false$, and<br>\item $a = b \vee c$ with $b,c \in K \Omega D$, then either $a = b$ or $a = c$ <br>\end{itemize}<br>Prove or disprove.<br></latex>	IMPOSTOR! a must also be compact.<br>pg 5810, prop 9.3.1<br><br>
<latex>~\\<br>Let $D$ be a spatial locale, and $p$ a compact, coprime open. Consider the following statement:\\~\\<br>$\uparrow p$ is a (completely prime filter representing a) compact point\\~\\<br>Prove or disprove.<br></latex>	true. pg 5810, prop 9.3.2 (i)<br>
<latex>~\\<br>Let $D$ be a spatial locale, and $p$ a compact, coprime open. Consider the following statement:\\~\\<br>if $a$ is any open, then $\uparrow p \vDash a$ iff $p \leq a$\\~\\<br>Prove or disprove.<br></latex>	true. pg 5810, prop 9.3.2<br>
<latex>~\\<br>Let $D$ be a spatial locale, and $p$ a compact, coprime open. Consider the following statement:\\~\\<br>If $y$ is any point, then $\uparrow p \sqsubseteq y$ iff $y \vDash p$\\~\\<br>Prove or disprove.<br></latex>	true. pg 5810, prop 9.3.2 (iii)<br>
<latex>~\\<br>What does it mean for a spectral locale to be a \emph{spectral algebraic locale}? <br></latex>	pg 5810, def 9.3.3<br>
<latex>~\\<br>Read pgs 5822 and 5823.<br></latex>	pg 5822<br>Thm 9.3.8 is the Stone Duality theorem on pg 5812<br>Section 7.3 is on pgs 5783/5784<br>
<latex>~\\<br>What does it mean for a dcpo to be a \emph{cpo}?<br></latex>	pg 5824, def 10.2.1<br>
<latex>~\\<br>What is a \emph{topological system with bottom}? What does it mean for a continuous map between two topological systems with bottom to be \emph{strict}?<br></latex>	pg 5824, def 10.2.1<br><br>
<latex>~\\<br>Let $D$ be a cpo, and let $f : D \to D$ be Scott continuous. Consider the following statement:\\~\\<br>There is a point $x = \mathit{Fix}~f \in D$ satisfying <br>\begin{itemize}<br>\item $f(x)=x$<br>\item $\forall y \in D. (f(y) \sqsubseteq y \to x \sqsubseteq y)$<br>\end{itemize}<br></latex>	true. pg 5824, prop 10.2.2<br>
<latex>~\\<br>Read page 5825 down to prop 10.2.3<br></latex>	pg 5825<br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>$\mathit{pt}~D$ has a bottom iff $\mbf{true}$ is coprime.<br></latex>	pg 5825, prop 10.2.3<br>
<latex>~\\<br>Let $D$ be a topological system. What is the \emph{lifting} of $D$?<br></latex>	pg 5825, def 10.2.4<br><br>
<latex>~\\<br>Let $D$ be a localic topological system. Consider the following statement:\\~\\<br>$D_{\bot}$ is localic.\\~\\<br>Prove or disprove.<br></latex>	pg 5826, prop 10.2.5 at top.<br><br>
<latex>~\\<br>Let $D$ be a spectral algebraic topological system. Consider the following statement:\\~\\<br>$D_{\bot}$ is a spectral algebraic topological system.\\~\\<br>Prove or disprove.<br></latex>	pg 5826, prop 10.2.5<br>
<latex>~\\<br>Why does the term \emph{spectral algebraic locale} include the word \emph{algebraic}? After all, the opens of any spectral locale form an algebraic dcpo, right?<br></latex>	You are absolutely correct, front of card. The reason they are called algebraic is that in a spectral algebraic locale, the set of <i>points</i> forms an algebraic dcpo.<br><br>See pg 5811, lemma 9.3.6 (i).
State the method of quasicoprimes. What is it? What is it used for? No need to prove that it is correct.	It's used for showing that a coherently presented frame's locale is a spectral algebraic locale, emphasis on the word algebraic since of course it is a spectral locale by definition.<br><br>It's also used for identifying the coprime opens of this locale.<br><br>pg 5812, lemma 9.3.9<br><br>relevant context: theorem 9.2.4 is on pg 5808 (is spatiality really required here? doesn't this work for arbitrary topological systems?)<br><br>relevant context: recall that "completely coprime" and "compact comprime" are the same thing<br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>Every compact open in $D$ has a unique irredundant coprime decomposition.\\~\\<br>Prove or disprove.<br></latex>	pg 5810, def 9.3.4 (THEY LEFT OUT ALGEBRAIC, BUT ALGEBRAIC IS CLEARLY NECESSARY TO ENSURE COPRIME DECOMPOSITIONS)<br><br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>$\mathit{pt}~D$ is an algebraic dcpo, and its compact points are in 1-1 order reversing correspondence with the compact, coprime opens.\\~\\<br>Prove or disprove.<br></latex>	pg 5811, lemma 9.3.6 (i)<br><br>Helpful context: Lemma 5.4.6 (i) on pg 5752<br>
<latex>~\\<br>State the 2/3 SFP condition.<br></latex>	pg 5811 (ii)<br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>The compact points of $D$ satisfy the 2/3 SFP condition.\\~\\<br>Prove or disprove.<br></latex>	pg 5811 (ii)<br><br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>$\Omega D$ is the Scott topology for $\mathit{pt}~D$\\~\\<br>Prove or disprove.<br></latex>	pg 5811 (ii)<br><br>corollary 7.3.2 is on page 5784<br>It says that "the extent of any locale element is Scott open", which isn't hard to see since a join of locale points (frame homomorphisms) is taken componentwise.
<latex>~\\<br>State the ``Stone Duality for Spectral Algebraic Locales'' theorem. (No need to prove.)<br></latex>	bonus question: is this an equivalence of categories? prove! or disprove, I dunno.<br>pg 5812, theorem 9.3.8<br>
State the method of quasi-coprimes and prove that it is correct.	pg 5812, lemma 9.3.9 near bottom<br><br>
<latex>~\\<br>What does it mean for a locale to be \emph{finite}? Consider the following statement:\\~\\<br>Finite locales are spectral algebraic.\\~\\<br>Prove or disprove.<br></latex>	a finite locale is one whose opens form a finite frame<br>pg 5813, prop 9.4.1<br>
<latex>~\\<br>State and prove ``Stone Duality for Finite Locales''.<br></latex>	pg 5813 bottom, spills onto next page.<br>
<latex>~\\<br>What does it mean for a topological system to be \emph{second countable}?<br></latex>	its has a countable basis, i.e. a countable subset of opens X such that any open is a join of some subset of X.<br>pg 5814, def 9.4.3<br>
<latex>~\\<br>Let $a$ and $b$ be two $\omega$-chains in a poset. What does $a \leq b$ mean? If $P$ is a poset, what does $\mathit{Idl}(P)$ denote?<br></latex>	pg 5814, def 9.4.4<br>
<latex>~\\<br>Let $P$ be a poset. Consider the following statement:\\~\\<br>$\omega$-$\mathit{Idl}(P)$ is a poset containing a copy of $P$, with the same ordering, and every $\omega$-chain in $\omega$-$\mathit{Idl}(P)$ has a join.\\~\\<br>Prove or disprove.<br></latex>	pg 5814, prop 9.4.5 (ii)<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>If $P$ is countable, then $\omega$-$\mathit{Idl}(P) \cong \mathit{Idl}(P)$.\\~\\<br>Prove or disprove.<br></latex>	pg 5814, prop 9.4.5 (ii)
<latex>~\\<br>What is an $\omega$-\emph{algebraic dcpo}?<br></latex>	the ideal completion of a countable poset.<br>pg 5814, prop 9.4.5 (ii)<br>
<latex>~\\<br>Let $D$ be an $\omega$-algebraic dcpo. Consider the following statement:\\~\\<br>Every $x \in D$ is the join of an $\omega$-chain of compact elements. $x \in D$ is compact iff whenever $a$ is an $\omega$-chain in $D$ with $\bigvee a \geq x$, then some $a_i \geq x$.\\~\\<br>Prove or disprove.<br></latex>	pg 5814, prop 9.4.5 (iii)<br><br>
<latex>~\\<br>Let $D$ be a spectral algebraic locale. Consider the following statement:\\~\\<br>$D$ is second countable iff its points form an $\omega$-algebraic dcpo.\\~\\<br>Prove or disprove.<br></latex>	pg 5815<br>
What does it mean for two input-output pairs (x,y) and (x',y') to be <i>consistent</i>?	pg 6051, near top<br>
<latex>~\\<br>What is a \emph{transition map}?<br></latex>	pg 6051, second paragraph<br>
<latex>~\\<br>Recall that a transition map is a relation $\alpha \subseteq Q \times \Sigma \times Q$.<br>For integer variable objects, $\Sigma$ is defined to be the disjoin union of sets<br>$$\{\mathit{get}.a : a \in Z \} \cup \{ \mathit{put}.b : b \in Z \}$$<br>How is the integer variable type's consistency relation for transition maps defined?<br></latex>	pg 6051, near middle of pg<br><br><br>
<latex>~\\<br>Suppose that types $\theta_1$ and $\theta_2$ have sets of operations $\Sigma_1$ and $\Sigma_2$. What is $\Sigma$ for the product type $\theta_1 \times \theta_2$? How is the consistency relation for $\theta_1 \times \theta_2$ defined?<br></latex>	pg 6051, kinda near bottom<br>
<latex>~\\<br>Suppose that we have a consistency relation $\consist$ defined on a type's value set $\Sigma$. Provide the uniform definition of the consistency relation for transition maps that we can derive from the consistency relation on values.<br></latex>	pg 6051, bottom<br>
<latex>~\\<br>For each of the following types, what set of values and consistency relation does Reddy provide for it?<br>\begin{itemize}<br>\item $\mbf{comm}$<br>\item $\mbf{exp}[\mbf{int}]$<br>\item $\mbf{var}[\mbf{int}]$<br>\item $\theta_1 \times \theta_2$<br>\end{itemize}<br></latex>	<br>pg 6052 top. need more detail on the last one? See the previous page.<br><br>all of the instantiations are given on the previous page.<br>
<latex>~\\<br>How is the \emph{inconsistency} relation defined on a type $\theta$'s set of values $\Sigma$?<br></latex>	pg 6052<br>
<latex>~\\<br>How do we intuitively understand the consistency relation on a type $\theta$'s value set $\Sigma$?<br></latex>	Two values are related if either they have differing input information (and are not then obligated to have the same output information) or they have the same output information.<br>pg 6052
Read page 6052 from "Next, we extend..." down to the bottom of the page.	pg 6052<br>
<latex>~\\<br>How does Reddy define the consistency relation on sequences in $\Sigma^*$?<br></latex>	pg 6052, defn (5)<br><br>
<latex>~\\<br>How does Reddy define the transition map of a read/write storage cell containing a single integer?<br></latex>	pg 6052, near bottom, defn (6)<br>
<latex>~\\<br>How does Reddy define the \emph{trace set} of an object $(Q, \alpha)$ at a state $q \in Q$? <br></latex>	pg 6052, near bottom<br>
<latex>~\\<br>How does Reddy define the notion of an \emph{automaton}?<br></latex>	pg 6049, "Automata and simulations"<br>
<latex>~\\<br>How does Reddy define the behavior of an automaton $(Q,\alpha)$ at a state $q \in Q$?<br></latex>	pg 6049, "The behavior (or language)..."<br>
<latex>~\\<br>What is a \emph{pattern map}, and what is Reddy's motivation for using pattern maps?<br></latex>	pg 6049, "Let \Sigma and \Gamma be instruction sets"<br>Bonus question: This seems to have something in common with topologic systems and continuous maps. Can you explain this connection?<br>
<latex>~\\<br>A state mapping $t : (Q, \alpha) \to (Q',\alpha')$ of $\Sigma$-automata is a function $t : Q \to Q'$ satisfying $t(q)~\alpha'~a = t (q~\alpha~a)$ for $a \in \Sigma$. Consider the following statement:\\~\\<br>Functions (functors?) $f : \Sigma\text{-}\mathit{Aut} \to \Gamma\text{-}\mathit{Aut}$ that preserve the underlying state sets and state mappings are one-to-one with partial functions $h : \Gamma \to \Sigma^*$.\\~\\<br>Prove or disprove.<br></latex>	pg 6050, prop 4 at top<br>
Read page 6048<br>	<br>
<latex>~\\<br>Describe Reddy's notion of an object of a function type $\theta_1 \to \theta_2$. Explain how such objects determine functions from objects to objects.<br></latex>	pg 6053, "An object of a function..."<br><br>
<latex>~\\<br>Provide the definition of \emph{coherent space}.<br></latex>	pg 6054, "A coherent space A is a domain..."<br>
<latex>~\\<br>What is a \emph{linear function} $f : A \to_{L} B$ between coherent spaces? What are the \emph{stability} and \emph{linearity} conditions?<br></latex>	pg 6054<br>
<latex>~\\<br>Let $A$ be a coherent space. What does $|A|$ denote?<br></latex>	pg 6054, first bullet point near bottom
<latex>~\\<br>Let $A$ be a coherent space. How is the binary relation $\consist_A$ defined?<br></latex>	pg 6054, second bullet point near bottom<br>
<latex>~\\<br>Give the token sets underlying the coherence space interpretations of the following types:<br>\begin{itemize}<br>\item $\mathit{bool}$<br>\item $\mathit{int}$<br>\item $A_1 \times A_2$<br>\item $A \otimes B$<br>\item $\top$<br>\item $\mbf{1}$<br>\end{itemize}<br></latex>	pg 6055, table 4<br>
Read the bottom paragraph of pg 6057, <br>continue reading through the end of the paragraph on pg 6058.<br>(refers to "Thesis 1", which is stated on pg 6045)<br>	pg 6057<br>
<latex>~\\<br>Define the coherent spaces underlying  the following Algol types:<br>\begin{itemize}<br>\item $\mathit{exp}[\delta]$<br>\item $\mathit{comm}$<br>\item $\mathit{var}[\delta]$<br>\end{itemize}<br></latex>	pg 6058, table 6 at top<br>for explanation, see pg 6059 top paragraph<br><br>
<latex>~\\<br>Let $\mathcal A$ be a coherent space. How is the coherent space $\dagger \mathcal A$ defined?<br></latex>	pg 6058, definition<br>
<latex>~\\<br>Let $\mathcal A$ be a coherent space. What does it mean for an element of $\dagger \mathcal A$ to be \emph{regular}? What does it mean for an element of $\dagger \mathcal A$ to be \emph{active}?<br></latex>	pg 6058, third to last paragraph<br>
<latex>~\\<br>If $x$ is a trace set and $s$ is a trace, then what does $x / s$ denote?<br><br></latex>	pg 6058, second-to-last paragraph<br>
<latex>~\\<br>For a datatype $\delta$, characterize the elements of the domain $\dagger \mathit{var}[\delta]$.<br></latex>	pg 6059, "The elements of the domain..."<br>
<latex>~\\<br>What does it mean for a trace in $|\dagger \mathit{var}[\delta]|$ to be a \emph{storage cell trace}?<br></latex>	pg 6059, definition<br><br>
<latex>~\\<br>Intuitively, what is the semantic interpretation of a typing derivation such as<br>$$x : \mbf{var}[\mbf{int}] \vdash [val = x, inc = (x := x +1)] : \mbf{counter}$$<br>in Reddy's model of interference controlled Algol?<br></latex>	pg 6060, near top<br><br>note that this is not just any function, but a *regular linear* function; see the paragraph at the bottom of the page, which spills onto the next page.<br>
<latex>~\\<br>Consider the Algol function $\mathit{inc} : \mbf{var}[int] \to \mbf{comm}$ defined by<br>$$\mathit{inc}(x) = (x := x+1)$$<br>It maps objects of type $\mbf{var}[\mbf{int}]$ to objects of type $\mbf{comm}$. Is this a linear function? Why or why not?<br></latex>	pg 6060, example.<br>
<latex>~\\<br>Given object spaces $\dagger \mathcal A$ and $\dagger \mathcal B$, what is a \emph{regular function} $f : \dagger \mathcal A \to_R \dagger \mathcal B$? <br></latex>	pg 6061, Definition<br>Bonus question: regularity looks a lot like continuity. 
<latex>~\\<br>Let $\mathcal A$ and $\mathcal B$ be coherent spaces. Consider the following statement:\\~\\<br>Regular functions $f : \dagger \mathcal A \to_R \dagger \mathcal B$ map prefix-closed elements of $\dagger A$ to prefix-closed elements of $\dagger B$.\\~\\<br>Prove or disprove.<br></latex>	pg 6061, below definition.<br><br><br>
<latex>~\\<br>Let $\mathcal A$ and $\mathcal B$ be coherent spaces. Consider function $\mathit{accumulate} : \dagger \mathit{int} \to_L \dagger \mathit{int}$ with the following input-output pairs:<br>$$\langle i_1, i_2, \ldots, i_n \rangle \mapsto \langle i_1, i_1 + i_2, \ldots, \Sigma_{k=1}^n i_k \rangle$$<br>Is this function regular? Why or why not?<br></latex>	pg 6061, "It may be verified..."<br><br>
<latex>~\\<br>Let $\mathcal A$ and $\mathcal B$ be coherent spaces. Consider the following statement:\\~\\<br>There is an order-isomorphism $\dagger \mathcal A \to_L \mathcal B \cong \dagger \mathcal A \to_R \dagger \mathcal B$.\\~\\<br>Prove or disprove.<br></latex>	pg 6061 bottom / 6062 top<br>
<latex>~\\<br>Let $f : \dagger \mathcal A \to \mathcal B$ be a linear function. What does $\hat{f}$ denote?<br></latex>	pg 6062 top<br>
<latex>~\\<br>Let $g : \dagger \mathcal A \to_R \dagger \mathcal B$ be a regular function. What does $\check{g}$ denote?<br></latex>	pg 6062, (13) near top<br>
Read pg 6062, from "As described in..." down to the "multiple arguments" section.	pg 6062<br>
<latex>~\\<br>What is a \emph{regular map} $f : \dagger \mathcal A_1 \otimes \cdots \dagger \mathcal A_n \to_R \dagger \mathcal B$?<br></latex>	pg 6062 bottom / 6063 top<br><br>
<latex>~\\<br>What does it mean for $f$ to be an \emph{object function} from $\mathcal A_1, \ldots, \mathcal A_n$ to $\mathcal B$?<br></latex>	pg 6063 "Notation"<br>
<latex>~\\<br>What does Reddy use bold capital metavariables such as $\mbf{A}$ to denote?<br></latex>	pg 6063 "Notation"<br>
<latex>~\\<br>What does Reddy use the notation $f : (x_1 : A_1),\ldots,(x_n : A_n) \to B$ for?<br></latex>	pg 6063 "Notation"<br><br>
<latex>~\\<br>Reddy proposes a definition of the object function $g \circ f$ in terms of object functions $f : A \to B$ and $g : B \to C$. State his definition.<br></latex>	pg 6063 table 7, explained a bit near the bottom of the page<br>
<latex>~\\<br>Given an object function $f : A \to A$, how does Reddy define the object $\mathit{fix}[f] : A$?<br></latex>	pg 6063 table 7<br>explained near top of pg 6064<br>
<latex>~\\<br>Give Reddy's semantic interpretation of the function constant \mathit{seq} (aka ``;'') in interference-controlled Algol. Give his interpretation of the $\mathit{par}$ constant function (aka ``$\par$'').<br></latex>	pg 6064, table 8<br>
<latex>~\\<br>Give Reddy's semantic interpretation of the function constant $\mathit{cond}$ in interference-controlled Algol. Give his interpretation of the $\mathit{deref}$ constant function.<br></latex>	pg 6064, table 8<br>
<latex>~\\<br>Let $\mathcal A$ and $\mathcal B$ be coherent spaces. How does Reddy define the coherent space $\mathcal A \Rightarrow \mathcal B$. How does Reddy define the curry combinator, which maps $f : \mbf{X},A \to B$ to $(\mathit{curry}~f) : \mbf{X} \to (A \Rightarrow B)$.<br></latex>	pg 6064, "Function types"<br><br>
<latex>~\\<br>How does Reddy interpret types of the form $\theta_1 \to \theta_2$ for interference-controlled Algol? How does he interpret the type $\mbf{var}[\delta]$?<br></latex>	pg 6065. <br>for function operator, see pg 6064 bottom.<br>for var, see pg 6058 table 6 near top<br>
<latex>~\\<br>How does Reddy interpret a typing judgement<br>$$x_1 : \theta_1, \ldots \mid \ldots, x_n : \theta_n \vdash P : \theta$$<br>of interference-controlled Algol? (In the naive way, without active-passive spaces)<br></latex><br>	pg 6065, near bottom<br><br>
<latex>~\\<br>Inductively, how does Reddy define the interpretations of the following typing rules of interference-controlled Algol?<br>\begin{itemize}<br>\item $\mathit{id}$ (variable occurrence)<br>\item $\times \mathcal I$ (product introduction)<br>\item $\times 1 \mathcal E$ (left projection)<br>\end{itemize}<br></latex>	pg 6066, table 9. note that there is a weird typesetting bug and ? actually means \Gamma.<br>
<latex>~\\<br>Inductively, how does Reddy define the interpretations of the following typing rules of interference-controlled Algol?<br>\begin{itemize}<br>\item $\to I$ (function introduction) <br>\item $\to E$ (function elimination)<br>\end{itemize}<br></latex>	pg 6066, table 9. due to a typesetting bug, ? actually means \Gamma <br>
<latex>~\\<br>How does Reddy interpret judgments of the form $\sem{\Pi \mid \Gamma \vdash \mbf{new}[\delta] x. C : \mbf{comm}}$?<br></latex>	pg 6067, table 10<br>see also pg 6064 table 8 "new_\delta"<br>see also pg 6059 "Definition" for definition of "cell_i"<br>
Read the example on pg 6067.<br>	pg 6067<br>
<latex>~\\<br>What is an \emph{active}-\emph{passive} coherent space? What does it mean for an active-passive coherent space to be a \emph{passive space}?<br></latex>	pg 6068 definition<br>
<latex>~\\<br>For each phrase type constructor of interference-controlled Algol, provide the definition of $| \theta |_{\mathcal P}$, i.e. the set of passive tokens of phrase type's passive-active coherent space.<br>\begin{itemize}<br>\item $\mathit{exp}[\delta]$<br>\item $\mathit{comm}$<br>\item $\mathit{var}[\delta]$<br>\item $A \times B$<br>\item $A \otimes B$<br>\item $\top$<br>\item $\mbf{1}$<br>\end{itemize}<br><br></latex>	pg 6068, table 11 at top<br><br>
<latex>~\\<br>Describe the two problems with Reddy's ``first-pass'' model of intereference controlled Algol, which motivate him to introduce the notion of active-passive coherent spaces.<br></latex>	pg 6067 bottom / pg 6068 top<br>
<latex>~\\<br>Let $A$ be an active-passive space. What is the \emph{(universal) passive subspace} of $A$? <br></latex>	pg 6068, bottom paragraph<br>
<latex>~\\<br>An object $(Q, \alpha \subseteq Q \times |A| \times Q)$ for an active-passive space $A$ has an additional condition on its transition map beyond pairwise consistency. What is it?<br></latex>	pg 6069, near top: "An object..." <br>
Read the "Active-passive object spaces" section on pg 6069, down to the definition.	pg 6069<br>
<latex>~\\<br>Let $A$ be an active-passive space. What is the \emph{trace monoid} of $A$? What is an \emph{active-passive} trace on $A$?<br></latex>	pg 6069, definition near bottom<br>
<latex>~\\<br>What is the \emph{Foata}-normal form of an active-passive trace?<br></latex>	pg 6070, top paragraph<br>
<latex>~\\<br>Given an active-passive coherent space $A$, how do we define the active-passive coherent space $\dagger A$?<br></latex>	pg 6070, definition<br><br>the consistency relation seems wrong: To the right of the implication we should have p_{i-1} and p'_{i-1} rather than p_i and p'_i.<br>
Read the bottom paragraph of pg 6070<br>	pg 6070<br>todo: link to the part of Proofs and Types (in MiscStudy.pdf) that talks about the interpretation of !<br>
<latex>~\\<br>Let $X$ be a set. What does $\mathcal L(X)$ denote?<br></latex>	pg 4245 bottom / 4246 top<br><br>
<latex>~\\<br>Describe $\mathcal L(0)$. Then describe $\mathcal L(1)$.<br></latex>	pg 4246, "We zoom in on"<br>
<latex>~\\<br>What is a \emph{marginal}?<br></latex>	pg 4246<br>
<latex>~\\<br>Provide the definition of \emph{monoid}. What does it mean for a monoid to be \emph{commutative}? What does it mean for a monoid to be \emph{idempotent}?<br></latex>	pg 4247, def 1.2.1<br><br>
<latex>~\\<br>Explain the ``unit'' and ``flatten'' functions for lists.<br></latex>	They are just a monad unit and multiplication for the list functor.<br><br>pg 4247 bottom / 4248 top<br>
Do exercise 1.2.2 on pg 4249.<br><br>	pg 4249<br>
Do exercise 1.2.3 on pg 4249.	pg 4249<br>
Do exercise 1.2.4 on pg 4249.<br>	pg 4249<br>
Examine lemma 1.3.1 on pg 4250 (no need to prove)<br>	pg 4250<br>
<latex>~\\<br>Provide the definition of the function $\mathit{supp} : \mathcal L(X) \to \mathcal P_{fin}(X)$. Show that it is a map of monoids. Show that it is a map of monads. <br></latex>	pg 4251/4252<br>
<latex>~\\<br>Provide the definitions for the \emph{extract} functions, which transform binary relations $R \subseteq X \times Y$ into functions. <br></latex>	pg 4253 near top. These functions are isos in Sets: see equation (1.3). <br>
Do exercise 1.3.2 on pg 4253 bottom.	pg 4253<br>
<latex>~\\<br>What is a \emph{(passivity-reflecting) linear function} between active-passive coherent spaces?<br></latex>	pg 6071, definition
<latex>~\\<br>How do we define the active-passive space $A \Rightarrow B$ of passivity-reflecting linear functions from active-passive space $A$ to active-passive space $B$? What are its tokens? What are its passive tokens? What is its coherence relation?<br></latex>	pg 6071, below definition. It will also be helpful to read the following paragraph: "To get the intuition..."<br>
<latex>~\\<br>For active-passive spaces $A$ and $B$, how does Reddy define the active-passive space $A \Rightarrow_P B$ of passive linear functions from $A$ to $B$?<br></latex>	pg 6071, definition at bottom of page
Read the top part of pg 6072 down to "5.2 (Semantics)". Unfortunately there is a typesetting issue that shouldn't cause confusion: to the left of the arrow we should put a 1, i.e. the unit of the tensor product. 	pg 6072<br>
Read Section 5.2 on pg 6072 down to "Table 12 give the interpretation..."<br>	pg 6072<br>
<latex>~\\<br>Give Reddy's active-passive space interpretation of the following structural rules of interference controlled Algol:<br>\begin{itemize}<br>\item Contr<br>\item Activate<br>\item Passify<br>\item Promote<br>\item Derelict<br>\end{itemize}<br></latex>	pg 6073, table 12 at top<br>also read the text directly below this table, including the proposition statements<br><br>I think we need to stipulate a minor additional constraint on the interpretation of Contr: in general, p1 and p2 may not be coherent, but we can simply ``filter out'' the non-coherent pairs when we pass from the premise to the conclusion.<br>
Read the "Operational Adequacy" section, starting at the bottom of pg 6073 and continuing to the top of pg 6074.<br>	pg 6073<br>
<latex>~\\<br>What is a \emph{symmetric monoidal functor}?<br></latex>	<latex>~\\<br>pg 6087, ``to say that $\dagger$ is symmetric monoidal is to say...''.<br>todo: Link to a more detailed definition.<br><br>See MiscStudy.pdf pg 8411 for a full definition of symmetric monoidal functors.<br><br></latex><br>
<latex>~\\<br>Reddy's $\dagger$ functor is a comonad. What is this comonad's counit? What is its comultiplication? Prove these satisfy the comonad laws. Further show that $\dagger$ is a \emph{monoidal} comonad, i.e. that $\dagger$ is a monoidal functor and that its counit and comultiplication are monoidal natural transformations.<br></latex>	pg 6087, "First, we define a symmetric monoidal functor..."<br><br>For the definition of "monoidal functor" and "monoidal natural transformation", see MiscStudy pg 8411/8412<br><br><br>
<latex>~\\<br>Letting $\mbf{C}$ be a symmetric monoidal category and $\dagger -$ Reddy's ``free object functor'', provide the definition of the Eilenberg-Moore category $\mbf{C}^{\dagger}$.<br></latex>	pg 6087 near bottom.<br>see also pg 154 (Jacobs Coalgebra chapter on Eilenberg-Moore categories)<br><br>
<latex>~\\<br>How many points should we expect the active-passive space $\sem{\mbf{comm}}$ to have?<br></latex>	pg 6074, second paragraph of section 6<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For distinct $n,m \in \mathbb N$, $\lambda c : \mbf{comm}. c^n$ is observationally equivalent to $\lambda c : \mbf{comm}. c^m$.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! Read the paragraph "Closed phrases of the comm -> comm" pg 6074
<latex>~\\<br>The active-passive space $\sem{\mbf{comm}}$ has two points, but $\sem{\mbf{comm} \to \mbf{comm}}$ has infinitely many points. Why is this? How do we resolve the apparent paradox using the notion of ``regular elements'' of an object space $\dagger A$?<br></latex>	side note: regular elements are defined on pg 6058, "For every element x \in A..."<br><br>To answer the front of the card, you will have to read two pages: <br>read pg 6074, starting at top of section 6, down to pg 6075 Fact 3.<br><br>to summarize: when comm is used in an argument position, we apply the dagger functor to it. There are infinitely many points of this space, though only two of them are regular: see the paragraph that starts with "Notice how our model..."<br><br><br>
<latex>~\\<br>Characterize the set of active elements of the coherent space $\dagger \sem{\mbf{comm}}$.<br></latex>	the term "active elements" is defined in the third to last paragraph of pg 6058<br><br>pg 6075, Fact 3 near bottom, spills on to next page<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The domain $(\mathit{comm} \Rightarrow \mathit{comm}) \Rightarrow \mathit{comm}$ is isomorphic to a subdomain of $\mathcal P(\mathbb N^*)$ that contains all subsets of $\mathbb N^*$ without any mutual prefixes.\\~\\<br>Prove or disprove.<br></latex>	true. pg 6076, fact 4.<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The domain $(\mathit{comm} \Rightarrow \mathit{exp}[\delta])$ is isomorphic to $\delta$.\\~\\<br>Prove or disprove.<br></latex>	pg 6076, "Fact 6" near bottom<br><br>
<latex>~\\<br>Consider the following two Algol phrases.<br>\begin{enumerate}<br>\item $\mbf{new}[\mbf{int}]~x.~x:= 0;~p(x~:=~x+1)$<br>\item $\mbf{new}[\mbf{int}]~x.~x := 0;~p(x~:=~x - 1)$<br>\end{enumerate}<br>Where $p$ is a free identifier of type $\mbf{comm} \to \mbf{comm}$. Are these two phrases equivalent? Why or why not?<br><br></latex>	pg 6078, "Consider a variant..."<br>
<latex>~\\<br>Consider the following two Algol phrases.<br>\begin{enumerate}<br>\item $\mbf{new}[\mbf{int}]~x.~x:= 0;~p[val = x, inc = (x~:=~x+1)]$<br>\item $\mbf{new}[\mbf{int}]~x.~x:= 0;~p[val = -x, inc = (x~:=~x-1)]$<br>\end{enumerate}<br>Where $p$ is a free identifier of type $\mbf{counter} \to \mbf{comm}$. Are these two phrases equivalent in Reddy's model? Why or why not?<br></latex>	pg 6078, second example.<br>
<latex>~\\<br>In what way are Reddy's "object spaces" coalgebras? Under this coalgebraic interpretation, what are regular functions?<br></latex>	pg 6088<br>
<latex>~\\<br>What is a \emph{free coalgebra} according to Reddy? <br></latex>	pg 6088, near top<br><br>Jacobs describes a notion of "cofree coalgebra" on pg 54 of this pdf, but I don't think that is the same thing Reddy is describing here.<br>
<latex>~\\<br>In Felleisen's Algol calculus, what type does a numeric literal $\lceil 1 \rceil$ have? What type does the expression $(+~\lceil 1 \rceil)$ have?<br></latex>	pg 6973 bottom<br>
<latex>~\\<br>Give Fellisen's typing rules for terms of the following forms:<br>\begin{itemize}<br>\item $\mbf{new}(x,M).N : \sigma$<br>\item $! M$<br>\item $M := N$<br>\end{itemize}<br></latex>	pg 6974, Figure 1 "References" (It's okay to translate them to a modern notation)<br><br>
<latex>~\\<br>Give Fellisen's typing rules for terms of the following forms:<br>\begin{itemize}<br>\item $\mbf{skip}$<br>\item $\mbf{if}~L~N~N$<br>\item $\mbf{begin}~M~N$<br>\end{itemize}<br></latex>	pg 6974, figure 1 (it's okay to translate to modern notation)<br>
<latex>~\\<br>Give Felleisen's typing rules for terms of the form $(\mbf{rec}~M)$<br></latex>	pg 6974<br>
<latex>~\\<br>In Felleisen's calculus, are $\mbf{begin}$ phrases commands or expressions?<br></latex>	Trick question: either. <br>pg 6974 bottom<br><br><br>
<latex>~\\<br>Give Felleisen's reduction semantics for phrases of the following form:<br>\begin{itemize}<br>\item $((\mathit{op}~\lceil n \rceil)~\lceil m \rceil)$<br>\item $\mbf{new}(x, \lceil n \rceil). \nu$ (where $\nu$ is a numeral or $\mbf{skip}$)<br>\item $\mbf{new}(x, \lceil n \rceil). E[!x]$ (where $x$ is not in the set $TR(E)$ of trapped references of $E$)<br>\item $\mbf{new}(x,\lceil n \rceil). E[x := \lceil m \rceil]$ (where $x$ is not in the set $TR(E)$ of trapped references of $E$)<br>\end{itemize}<br></latex>	pg 6975, figure 2<br>
<latex>~\\<br>How does Felleisen define the evaluation context syntax $E$? How does he define the ``trapped reference'' function $TR$, which maps evaluation contexts to sets of reference identifiers? Give a few cases, no need to give all.<br></latex>	pg 6976<br>
<latex>~\\<br>Read the paragraph starting "Based on the primitive..." pg 6977 and observe the definitions directly below it.<br></latex><br>	pg 6977
<latex>~\\<br>How does Felleisen define the notion of a \emph{program}. How does he define the notion of an \emph{evaluator}?<br></latex>	pg 6977<br>
<latex>~\\<br>State the theorem that Felleisen uses to capture Algol's ``two-phase'' style of reduction.<br></latex>	pg 6979, theorem 7<br>recall that a simple way to think of the "eval" function is given by Theorem 2 part 2 at the top of pg 6978.<br>
<latex>~\\<br>Reynolds wrote:\\~\\<br>``the reduction phase may go on forever, producing an infinite ``head-normal'' term. Nevertheless, such an infinite term can still be viewed as a simple imperative program; operationally, one simply implements the two phases as coroutines.''\\~\\<br>Outline Felleisen's formalization of this observation.<br></latex>	pg 6980, "In order to formalize these notions..."<br>
<latex>~\\<br>What motivates Fellesien to introduce the $\sqsubseteq$ relation on terms? State the lemma that it is used in.<br></latex>	pg 6981, definition 9, lemma 10<br>the discussion motivating this theorem is on the previous page: 6980
<latex>~\\<br>Felleisen extends idealized algol with a special phrase $\Omega$. What does $\Omega$ mean? He defines the imperative sub-language $\mbf{W}$ of this extended language with the following syntax:\\~\\<br>$t ::= \Omega \mid \lceil n \rceil \mid ((\mathit{op}~t)~t) \mid \mbf{new}(x,t).t \mid !t \mid t := t \mid \mbf{skip} \mid \mbf{if}~t~t~t \mid \mbf{begin}~t~t$\\~\\<br>State the lemma this sublanguage is used in. What is the point of this lemma?<br></latex>	pg 6981, lemma 12. see surrounding text for motivation.<br><br><br>
<latex>~\\<br>Explain how the phenomenon of \emph{interference} is present in a basic Algol program that computes the factorial function.<br></latex>	pg 7139 bottom / pg 7140 top<br><br>
<latex>~\\<br>Explain why the concept of interference is relevant to developing sound concurrent programs.<br></latex>	pg 7140 near bottom of paragraph<br>I see problems like this in EpicStudio. It's crazy that syntactic control of interference has still barely made its way into the mainstream.
<latex>~\\<br>How does the concept of interference relate to occurrence typing?<br></latex>	pg 7140, near bottom of page<br><br>
Read the example starting at the bottom of pg 7141 "Both the usefulness and dangers of interference between procedures arise when procedures are used to encapsulate data representations.". This example spills onto the next page.<br><br>	pg 7141/7142<br><br>
What does Reynolds mean when he speaks of <i>exercising</i> a program phrase?	pg 7142, top paragraph of "2. The Basic Approach"<br>
<latex>~\\<br>If $P$ and $Q$ are program phrases, what does $P \# Q$ mean?<br></latex>	pg 7142, second paragraph of "2. The Basic Approach"<br><br>
<latex>~\\<br>State Reynolds' three principles of non-interference.<br></latex>	pg 7143, top half of pg<br>
<latex>~\\<br>What does Reynolds use $\emph{sta}$ to denote in his paper ``Syntactic Control of Interference''. What does $\omega$ denote?<br></latex>	pg 7144, near top<br>
<latex>~\\<br>How does Reddy define the notion of an \emph{object space}?<br></latex>	pg 6091, "We define an *object space*..."<br><br>
<latex>~\\<br>There is a canonical coalgebra associated with each object space. Give the definition of this coalgebra.<br></latex>	pg 6091, "To say that |C| is a partial monoid..."<br><br>
<latex>~\\<br>For an object space $A$, Reddy defines a canonical preorder on the tokens of $A$. How is this preorder defined?<br></latex>	pg 6091, "There exists a preorder on the monoid..."<br><br>
<latex>~\\<br>Let $x$ and $y$ be tokens of an object space. Consider the following statement:\\~\\<br>$x \preceq y \Rightarrow x' \consist y' \text{ for all } x' \preceq x,y' \preceq y$\\~\\<br>Prove or disprove.<br></latex>	pg 6091, "There exists a preorder..."<br>
<latex>~\\<br>Let $C$ be an object space and $x \in |C|$. Consider the following statement:\\~\\<br>$\epsilon_C \consist x$\\~\\<br>Prove or disprove.<br></latex>	pg 6091<br>
<latex>~\\<br>What does it mean for an object space to be \emph{finitary}?<br></latex>	pg 6091, "There exists a preorder on the monoid of tokens.... We call an object space finitary if..."<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>$\mbf{FOb}$, the category of finitary object spaces and regular maps, is a full subcategory of $\mbf{CohL}^{\dagger}$, the Eilenberg-Moore category of coalgebras of $\mbf{CohL}$ (the category of coherence spaces and linear maps).\\~\\<br>Prove or disprove.<br></latex>	pg 6087<br>
<latex>~\\<br>Let $N$ be the syntacic type for name and $S$ the syntactic type for statement. Then \emph{John works} has type $S$. What type does \emph{works} have?<br></latex>	pg 7382, "To illustrate these ideas"<br><br>N\S is the type of expressions which when preceded by expressions of type N produce expressions of type S.<br>
<latex>~\\<br>How do we prove the proposition $A \cdot (A \backslash C) \to C$ in Lambek's syntactic calculus?<br></latex>	<latex>~\\<br>We use reflexivity of $- \to -$, along with the equivalence $B \to A\backslash C \Leftrightarrow A \cdot B \to C$.\\<br>pg 7382<br></latex>
<latex>~\\<br>We can bracket the statement ``John likes Jane'' as ``(John likes) Jane'' or ``John (likes Jane)''. What type does the first bracketing suggest that \emph{likes} has? What type does the second bracketing suggest it has?<br></latex>	pg 7382, near bottom<br><br>
<latex>~\\<br>Consider the statement \emph{he works} of type $S$. We might be tempted to say that \emph{he} has type $N$, but that is not the case. Why? What type can we assign to \emph{he}?<br></latex>	pg 7383, "Consider the statement..."<br>
<latex>~\\<br>What is a \emph{multigraph}?<br></latex>	pg 7385, "Formally, we first introduce..."<br>
<latex>~\\<br>What does Lambek mean by the notation $f : ~ \to B$?<br></latex>	pg 7385, "where {objects}*..."<br>
<latex>~\\<br>Give Lambek's multicategory version of the identity and cut rules of the sequent calculus.<br></latex>	pg 7385 near bottom<br>
<latex>~\\<br>Provide the following equational laws, used by Lambek to turn Gentzen's sequent calculus into a multicategory:<br>\begin{itemize}<br>\item identity (1a)<br>\item identity (1b)<br>\item associativity<br>\item commutativity<br>\end{itemize}<br></latex>	pg 7386, near top<br>
<latex>~\\<br>What does Lambek use the notation $\mathit{Mult}(\Gamma,A)$ to denote?<br></latex>	pg 7387, right above section 4<br><br>
<latex>~\\<br>What is a \emph{tensor product} in a multicategory?<br></latex>	<latex>~\\<br>pg 7386 bottom / spills onto pg 7387 top\\~\\<br>Note that the domain of $f^{\mathsection}$ is bracketed as $\Gamma (A \otimes B) \Delta$, which isn't really clear from the way this is typeset... of course, bracketing as $(\Gamma A) \otimes (B \Delta)$ is nonsense considering that $\otimes$ operates on objects and not sequences of objects.<br></latex>
<latex>~\\<br>What is a \emph{right internal hom} in a multicategory? What is a \emph{left internal hom}?<br></latex>	pg 7387 near top, "A right internal hom..."
<latex>~\\<br>What is a \emph{unity object} in a multicategory?<br></latex>	pg 7387, middle, "A unity object..."<br>
<latex>~\\<br>What is a \emph{monoidal} multicategory?<br></latex>	pg 7387, "We list some of the structured multicategories..."<br>
<latex>~\\<br>What is a \emph{type language}?<br></latex>	it's basically a signature<br>pg 7388, def 5.1<br>
<latex>~\\<br>For any finite set $X$ of variables in  a type language, there is a congruence relation $=_X$. What does ``congruence relation'' mean in this context?<br></latex>	pg 7388, near bottom (E0 - E2)<br>also read the interesting discussion at the top of pg 7389<br>
<latex>~\\<br>The \emph{internal language} of a multicategory is a specific type language. How is it defined?<br></latex>	pg 7389, def 5.3
<latex>~\\<br>The internal langauage of a multicategory satisfies \emph{restricted functional completeness}. What is restricted functional completeness?<br></latex>	pg 7390, theorem 6.1. Also read its proof.<br><br><br>
Read Lemma 6.2 on page 7391, no need to prove.	pg 7391, near top<br><br>
<latex>~\\<br>Consider the table on page 4257. How can this table be represented as a multiset?<br></latex>	pg 4257<br>
<latex>~\\<br>How does the multiplication natural transformation work for the multiset monad?<br></latex>	pg 4258 top<br>
<latex>~\\<br>The \emph{max} and \emph{argmax} functions can be useful when working with multisets. How are these functions defined?<br></latex>	pg 4259<br>
Read "Section 1.4.5 - Extraction" on pg 4261 to 4262.<br>	pg 4261<br>
<latex>~\\<br>What is a \emph{probability distribution}?<br></latex>	pg 4264<br>
<latex>~\\<br>What is a \emph{sample space}?<br></latex>	<latex>~\\<br>pg 4264 "We write $\mathcal D(X)$ for the set of distributions..."<br></latex>
<latex>~\\<br>For a finite set $X$, what does $\upsilon_X$ denote?<br></latex>	pg 4264, "In general, for a finite set X..."<br>
<latex>~\\<br>For each number $K \in \mathbb N$ and probability $r \in [0,1]$, what does $\mathit{binom}[K](r)$ denote?<br></latex>	pg 4265<br>
<latex>~\\<br>What is a \emph{pmf}?<br></latex>	pg 4266, def 1.5.2<br>
<latex>~\\<br>$\mathcal D$, which takes a set $X$ to the set of probability distributions $\mathcal D(X)$ on $X$ is functorial, what is its action on functions?<br></latex>	pg 4266<br>
<latex>~\\<br>What is a \emph{joint distribution}? What is the \emph{ith marginal} of a joint distribution?<br></latex>	pg 4266/4267<br><br>
<latex>~\\<br>What is an \emph{image distribution}? Explain the notation $P[R = r]$ and how it relates to image distributions.<br></latex>	image distribution defined on page 4266<br>P[R=r] explained on pg 4267<br>read the example below, which spills to pg 4268<br>
Read remark 1.5.4<br>	pg 4268/4269<br>
<latex>~\\<br>For a set $X$, what does $\mathcal M_{\ast}(X)$ denote? What is the $\mathit{Flrn}$ function? How is it defined?<br></latex>	pg 4270, section 1.6<br>spills onto 4271<br>
<latex>~\\<br>Read example 1.6.1 on page 4271.<br></latex>	pg 4271
<latex>~\\<br>Consider the following statement:\\~\\<br>The ``frequentist learning'' function $\mathit{Flrn}$ is a natural transformation.\\~\\<br>Prove or disprove.<br></latex>	pg 4272, lemma 1.6.2<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>$\mathit{Flrn}$ commutes with marginalization.\\~\\<br>Prove or disprove.<br></latex>	pg 4272, lemma 1.6.2 (in the diagram, replace f with a projection)<br>
<latex>~\\<br>Provide the Jacobs' definition of the $\mathit{draw}$ operation, which intuitively corresponds to drawing an object from an urn:<br>$$\mathcal N_{\ast}(X) \overset{D}{\longrightarrow} \mathcal D(X \times \mathcal N(X))$$<br></latex>	pg 4273, def 1.6.3<br>
<latex>~\\<br>Let $Y$ be a set, and $T$ be either $\mathcal L$, $\mathcal P$, $\mathcal M$, or $\mathcal D$. What is a \emph{state} of type $Y$? What is a \emph{T-channel}?<br></latex>	pg 4274, bottom paragraph<br>
<latex>~\\<br>Let $T \in \{ \mathcal L, \mathcal P, \mathcal M, \mathcal D \}$. For a state $\omega \in T(X)$ and a channel $c : X \to T(Y)$, how do we define the state $c \gg \omega$?<br></latex>	this is sometimes called "State transformation along the channel c"<br>pg 4275, def 1.7.1 (1)<br>
<latex>~\\<br>Let $c : X \chan Y$ and $d : Y \chan Z$ be two channels. How is their composition $d \odot c$ defined?<br></latex>	it's Kleisli composition<br>pg 4275, def 1.7.1 (2)<br>
Read example 4 on pg 4276.	pg 4276<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>State transformation via a composite channel is the same as two consectutive transformations:<br>$$(d \odot c) \gg \omega = d \gg (c \gg \omega)$$<br>True or false?<br></latex>	true.<br>pg 4278, (3) at top
<latex>~\\<br>Let $f : Y \to Z$ be an ordinary function, and let $T$ be a monad. How is $\langle f \rangle$ defined?<br>Can you think of any useful algebraic laws for working with $\langle f \rangle$?<br></latex>	pg 4277 (4)<br>
<latex>~\\<br>How do we depict a probabilistic channel $f : X \to \mathcal D(Y)$ as a graph?<br></latex>	pg 4279 diagram above exercises
<latex>~\\<br>\begin{itemize}<br>\item For $U \in \mathcal P(X)$, $V \in \mathcal P(Y)$, how do we define $U \otimes V$?<br>\item For $\varphi \in \mathcal M(X)$, $\psi \in \mathcal M(Y)$, how do we define $\varphi \otimes \psi$?<br>\item For $\omega \in \mathcal D(X)$, $\rho \in \mathcal D(Y)$, how do we define $\omega \otimes \rho$?<br>\end{itemize}<br></latex>	pg 4281 bottom / 4282 top<br>
<latex>~\\<br>Let $c : X \chan Y$ and $d : A \chan B$ be two channels, both of the same type $T \in \{ \mathcal P, \mathcal M, \mathcal D \}$. How do we define $c \otimes d$? <br></latex>	pg 4282, point 2 near middle of page<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Parallel products  of channels interact nicely with unit and composition.<br>\begin{mathpar}<br>unit \otimes unit = unit<br>\and<br>(c_1 \otimes d_1) \odot (c_2 \otimes d_2) = (c_1 \odot c_2) \otimes (d_1 \odot d_2)<br>\end{mathpar}<br>Prove or disprove.<br></latex>	True. This is essentially bifunctorality of the tensor product.<br><br>pg 4282, lemma 1.8.2 (2)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Transformation of parallel states via parallel channels is the parallel product of the individual transformations:<br>$$(c \otimes d) \gg (\omega \otimes \rho) = (c \gg \omega) \otimes (d \gg \rho)$$<br>Prove or disprove.<br></latex>	pg 4282, lemma 1.8.2 (1)<br><br>todo: add impostor?<br>todo: is this a standard monad law? I'm not sure at the moment, but I should consider this at some point.
<latex>~\\<br>Consider the following statement:\\~\\<br>The tensor of trivial, deterministic channels is obtained from their product:<br>$$\slangle f \srangle \otimes \slangle g \srangle = \slangle f \times g \srangle$$<br>Prove or disprove.<br></latex>	true. pg 4282, lemma 1.8.2 (3)<br>todo: add impostor?<br>
<latex>~\\<br>Recall the \emph{draw} operation defined on pg 4273, def 1.6.3, for drawing an object out of an urn. Forgetting the requirement that the domain urn is non-empty, how can we use categorical constructs to represent the act of drawing two items from the urn in sequence?\\~\\<br>Hint: we must form an arrow of signature $\mathcal N(X) \longrightarrow X \times X \times \mathcal N(X)$.<br></latex>	pg 4283, example 1.8.4<br>
<latex>~\\<br>Recall that the Poisson distribution is a channel $\mathbb R_{\geq 0} \chan \mathbb N$ that maps the average number of balls per bin to a distribution on the number of balls in an arbitrary bin.\\~\\<br>When Jacobs says that ``Poisson commutes with finite sums'', he means that two diagrams involving the \emph{pois} channel commute. Give these diagrams.<br></latex>	pg 4284, lemma 1.8.5<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Using the monad $\mathcal D$, projection channels $\slangle \pi_i \srangle$ take parallel products of probabilitic states apart, that is, for $\omega_i \in \mathcal D(X_i)$ we have:<br>$$\pi_i \gg (\omega_1 \otimes \cdots \otimes \omega_n) = \mathcal D(\pi_i)(\omega_1 \otimes \cdots \otimes \omega_n) = \omega_i$$<br>Thus, marginalisation of parallel products yields its components.\\~\\<br>Prove or disprove.<br></latex>	pg 4286 (1), near top<br><br>TODO: add impostor?<br>
<latex>~\\<br>Read item 2 on pg 4286, near top<br></latex>	pg 4286<br>
<latex>~\\<br>What is a \emph{mask}?<br></latex>	pg 4286, def 1.8.7, first sentence.<br><br>
<latex>~\\<br>For a state $\omega$ of type $T \in \{ \mathcal L, \mathcal P, \mathcal M, \mathcal D \}$ on $X_1 \times \cdots \times X_n$ and a mask $M$ of length $n$, what does $\omega M$ denote?<br></latex>	pg 4286, def 1.8.7, spills onto pg 4287<br><br>
<latex>~\\<br>What does it mean for a joint state $\omega$ on X \times Y$ to be \emph{non-entwined}? <br></latex>	pg 4287, def 1.8.8<br>
<latex>~\\<br>Take $X = \{ u, v \}$ and $A = \{ a, b \}$ and consider the state $\omega \in \mathcal D(X \times A)$ given by:<br>$$\omega = \frac{1}{8} \mid u, a \rangle + \frac{1}{4} \mid u , b \rangle + \frac{3}{8} \mid v , a \rangle + \frac{1}{4} \mid v, b \rangle$$<br>Is $\omega$ entwined? Why or why not? <br></latex>	pg 4287, example 1.8.9<br>
<latex>~\\<br>Is there a difference between state transformation via a copier $\Delta \gg \omega$ and taking a tensor product $\omega \otimes \omega$?<br></latex>	pg 4288, second paragraph<br>
On pg 4288, read the paragraph starting with "One might expect a commuting..."<br>	pg 4288<br>
<latex>~\\<br>What is an \emph{observerable}? Jacobs discusses two specific kinds of observables: \emph{fuzzy predicates} and \emph{sharp predicates}. Define these.<br></latex>	pg 4303
<latex>~\\<br>What do the following notations mean?<br>\begin{itemize}<br>\item \mathit{Obs}(X)<br>\item \mathit{Fact}(X)<br>\item \mathit{Pred}(X)<br>\item \mathit{SPred}(X)<br>\end{itemize}<br></latex>	pg 4304 bottom, spills to next page<br><br>
<latex>~\\<br>Let $X$ be an arbitrary set. For a subset $U \subseteq X$, what does $\mbf{1}_U$ denote?<br></latex>	pg 4305, point 1<br><br>
<latex>~\\<br>Let $X$ be an arbitrary set. With respect to $X$, what predicates do $\mbf{1}$ and $\mbf{0}$ denote? For $x \in X$, what predicate does $\mbf{1}_x$ denote?<br></latex>	pg 4305, points 2 & 3<br><br>
<latex>~\\<br>Let $X$ be an arbitrary set. What predicate does $\mathit{Eq} : X \times X \to [0,1]$ denote? What does $\mathit{incl}_X$ denote? (Note that $\mathit{incl}_X$ may not necessarily be defined.)<br></latex>	pg 4305, points 4 & 5<br><br>
<latex>~\\<br>What is a \emph{point state}?<br></latex>	<latex>~\\<br>A state of the form $\mathit{unit}(x) = 1 \mid x \rangle$, where \emph{unit} is the unit of the distribution monad.<br></latex>
<latex>~\\<br>Let $X$ be a set with an observable $p : X \to \mathbb R$ on $X$. For a distribution/state $\omega = \Sigma_i~r_i | x_i \rangle$ on $X$ how is its validity $\omega \vDash p$ defined? <br></latex>	pg 4306, point 1 at top<br>
<latex>~\\<br>Let $X$ be a finite set with an observable $p : X \to \mathbb R$. How do we define the \emph{average} $\mathit{avg}(p)$?<br></latex>	pg 4306, point 2 near top
<latex>~\\<br>For two channels $c : X \chan Y$ and $d : X \chan Z$, how do we define the tuple channel $\langle c, d \rangle$?<br></latex>	pg 4288, def 1.8.10 (1)<br><br>bonus: can you prove that this satisfies the universal product property in the category of sets and channels?
<latex>~\\<br>For a state $\sigma$ on $Y$ and a channel $d : Y \to Z$ how do we define the \emph{graph}<br>$\mathit{gr}(\sigma,d)$?<br></latex>	pg 4288, def 1.8.10 (2)<br><br>
<latex>~\\<br>For a channel $d : Y \chan Z$ and a state $\sigma \in \mathcal D(Y)$, consider the following statement:\\~\\<br>$$\mathit{max}(\mathit{gr}(\sigma,d)) = \mathit{max} \{ \sigma(y) \cdot d(y)(z) \mid y \in Y, z \in \mathit{argmax}~d(y) \}$$<br>Prove or disprove.<br></latex>	pg 4289, lemma 1.8.11<br><br>
<latex>~\\<br>For a channel $d : Y \chan Z$ and a state $\sigma \in \mathcal D(Y)$, consider the following statement:<br>$$(u,v) \in \mathit{argmax}(\mathit{gr}(\sigma,d)) \Leftrightarrow u \in \mathit{argmax}_{y \in Y}~\sigma(y) \cdot \mathit{max}~d(y) \text{ and } v \in \mathit{argmax}~d(u)$$<br>Prove or disprove.<br></latex>	pg 5289, lemma 1.8.11 (2)<br>
<latex>~\\<br>Let $\omega$ be a distribution/state on a set $X$. How is the \emph{information content} $I(\omega) : X \to \mathbb R_{\geq 0}$ defined?<br></latex>	pg 4306, def 2.1.3 (1)<br>
<latex>~\\<br>Let $\omega$ be a distribution/state on a set $X$. How is the \emph{Shannon entropy} $H(\omega)$ of $\omega$ defined?<br></latex>	pg 4306, def 2.1.3 (2)<br>
<latex>~\\<br>Let $\omega$ be a distribution/state on a set $X$.<br>In the presence of a map $\mathit{incl}_X : X \hookrightarrow \mathbb R$, how do we define the mean $\mathit{mean}(\omega)$ of the distribution $\omega$?<br></latex>	pg 4306, def 2.1.3 (2)<br><br>
<latex>~\\<br>Let $\mathit{flip}(0.3) = 0.3 | 1 \rangle + 0.7 | 0 \rangle$ be a biased coin. Suppose there is a game where you can throw the coin and win \$100 if head (1) comes up, but you loose \$50 if the outcome is tail (0). Is it a good idea to play the game? Make an argument using random variables and validity.<br></latex>	pg 4306, example 2.1.4 near bottom<br>
<latex>~\\<br>Write \emph{pips} for the set $\{ 1,2,3,4,5,6 \}$, considered as a subset of $\mathbb R$ via the map $\mathit{incl} : \mathit{pips} \hookrightarrow \mathbb R$.~\\<br><br>Let \emph{dice} be the state $\frac{1}{6} | 1 \rangle + \frac{1}{6} | 2 \rangle + \frac{1}{6} | 3 \rangle + \frac{1}{6} | 4 \rangle + \frac{1}{6} | 5 \rangle + \frac{1}{6} 6 \rangle$. Give \emph{mean(dice)}. What does this value correspond to intuitively, and also in classical probability theory?<br></latex>	pg 4307, example 2<br>
<latex>~\\<br>Suppose that we claim that in a throw of a (fair) dice the outcome is even (as opposed to odd). How likely is this claim? Formalise the claim as a sharp predicate and use validity to formalize its likelihood.\\~\\<br>Now, consider a more subtle claim that the even pips (recall that $\mathit{pips} = \{ 1 , 2, 3 , 4, 5, 6 \}$)<br> are more likely than the odd ones, where the precise likelihoods are described by the (non-sharp, fuzzy) predicate $p : \mathit{pips} \to [0, 1]$ with:~\\~\\<br>\begin{tabular}{lll}<br>$p(1) = \frac{1}{10}$ & $p(2) = \frac{9}{10}$ & $p(3) = \frac{3}{10}$ \\<br>~ & ~ & ~ \\<br>$p(4) = \frac{8}{10}$ & $p(5) = \frac{2}{10}$ &  $p(6) = \frac{7}{10}$<br>\end{tabular}~\\~\\~\\<br>How probable is this claim?<br></latex>	pg 4307, example 3<br>
Read example 4 at the bottom of page 4307 	pg 4307<br>
Read example 2.1.5, starting on pg 4308 and continuing to the next page.	pg 4308<br>
Read remark 2.1.6 on pg 4309 bottom, which spills onto the next page.<br>	pg 4309
<latex>~\\<br>What is a \emph{random variable} on a sample space $X$?<br></latex>	pg 4310, def 2.1.7 (1)<br>
<latex>~\\<br>What is the \emph{probability mass function} associated with a random variable $(\omega, R)$?<br></latex>	pg 4310, def 2.1.7 (2)<br>
<latex>~\\<br>What is the \emph{expected value} of a random vairable $(\omega, R)$?<br></latex>	pg 4311, point 3 at top<br><br>
<latex>~\\<br>How do we forumulate the expected value of the sum of two dice in structured probability theory?<br></latex>	pg 4311, example 2.1.8<br>
<latex>~\\<br>Read section 2.2.1, starting on page 4313 and continuing to pg 4314<br></latex>	pg 4313<br>
<latex>~\\<br>Read section 2.2.2 on page 4314.<br></latex>	pg 4314<br><br>todo: maybe make a question or two from this<br>
List two or three important properties distinguishing predicates from factors and observables.	pg 4314 bottom bullet point / pg 4315 top<br>
<latex>~\\<br>$\mathit{Pred}(X)$ carries two distinct commutative monoid structures, one partial and the other total. Explain.<br></latex><br>	partial: pg 4314 bottom<br>total: pg 4315 middle, see also pg 4314 top, right above section 2.2.2<br>
<latex>~\\<br>What is a \emph{partial commutative monoid}?<br></latex>	pg 4315, def 2.1.1 (1)<br><br>
<latex>~\\<br>What is an \emph{effect algebra}? What consistutes a homomorphism of effect algebras?<br></latex>	pg 4315, def 2.2.1 (2)<br><br>
<latex>~\\<br>What is an \emph{effect module}? Define the category $\mbf{EMod}$.<br></latex>	pg 4315, def 2.2.1 (4) --- somehow (3) was skipped, lol<br><br>pg 4316 top for the definition of the <b>EMod</b> category, note that it refers to effect algebra maps described on pg 4315, def 2.2.1 (2)<br>
Read section 2.2.4 on pg 4216<br>	pg 4316<br>
<latex>~\\<br>Let $\omega \in \mathcal D(X)$ be a distribution on a set $X$. Consider the following example:~\\~\\<br>Operations on observables $p,q$ on $X$ satisfy, whenever defined,<br>\begin{enumerate}<br>\item $\omega \vDash \mbf{0} = 0$<br>\item $\omega \vDash (p + q) = (\omega \vDash p) + (\omega \vDash q)$<br>\item $\omega \vDash (s \cdot p) = s \cdot (\omega \vDash p)$<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 4316, lemma 2.2.2<br>
<latex>~\\<br>On page 4281, def 1.8.1, Jacobs defines a tensor product on states, for $T \in \{ \mathcal P, \mathcal M, \mathcal D \}$. Fixing some $T$, what category are these tensor products in?<br></latex>	<latex>~\\<br>My guess:~\\~\\<br>- An object is a state, or more formally a pair $(X,\omega)$ of a set $X$ and a state $\omega$ on $X$.\\<br>- An arrow is a triple $(X,\omega),c : X \chan Y,(Y, \phi)$ such that $c \gg \omega = \phi$<br></latex><br><br>pg 4281<br>
<latex>~\\<br>Let $p$ be an observable on a set $X$, and $q$ on $Y$. How is the observable $p \otimes q$ defined?<br></latex>	pg 4317, def 2.2.3<br>
<latex>~\\<br>Suppose we have an observable $p$ on a set $X$ and we'd like to use $p$ on the product $X \times Y$. What concept do we use to acheive this? How does it work formally?<br></latex>	"weakening" on pg 4317, def 2.2.3 (2)<br>
<latex>~\\<br>Explain the relationship between weakening and marginalisation.<br></latex>	pg 4317, "Recall that marginalisation of states..."
<latex>~\\<br>Consider the following statement:\\~\\<br>Taking observables on a set is functorial: $\mathit{Obs} : \mbf{Sets} \to \mbf{Vect}^{op}$.<br>It maps a set $X$ to the vector space of observables on $X$. It maps a function $f : X \to Y$ to the linear transformation $q \mapsto f;q$ from $\mathit{Obs}(Y)$ to $\mathit{Obs}(X)$\\~\\<br>Prove or disprove.<br></latex>	pg 4318, prop 2.2.4<br>
<latex>~\\<br>Let $\omega \in \mathcal D(X)$ be a distribution on a sample space $X$, let $p \in \mathit{Fact}(X) = (\mathbb R_{\geq 0})^X$ be a factor, and suppose the validity $\omega \vDash p$ is non-zero. Then how is the distribution $\omega |_p$ defined?<br></latex>	pg 4320, def 2.3.1 (1)<br>
<latex>~\\<br>What is the \emph{conditional expectation} or \emph{conditional validity} of an observable $q$ on a set $X$, given $p \in \mathit{Fact}(X)$ and $\omega \in \mathcal D(X)$?<br></latex>	pg 4320, def 2.3.1 (2)<br>
<latex>~\\<br>For a channel $x : X \chan Y$ and a factor $q$ on $Y$, how is the updated channel $c |_q : X \chan Y$ defined?<br></latex>	pg 4320, def 2.3.1 (3)<br>
<latex>~\\<br>What do the terms \emph{a priori state} and \emph{a posteriori state} mean?<br></latex>	pg 4321 top (updating is defined on the previous page)<br>
<latex>~\\<br>Standard probability theory has a ``conditional probability'' notation $P(E \mid D)$ for events $E,D \subseteq X$. How does the notion of conditional probability translate to Jacobs' framework?<br></latex>	pg 4321, second paragraph<br>
Read example 2.3.2 on page 4321	pg 4321<br>todo: make a question from this?<br>
Skim over Plotkin & Power's PCF language shown on pg 8710.<br>	pg 8710<br>
<latex>~\\Unlike Moggi, Plotkin and Power do not use an effect type constructor $T(\sigma)$. What do they use instead?</latex>	<latex>~\\They use $1 \to \sigma$. pg 8710.</latex>
<latex>~\\What typing rule do Plotkin and Power use for algebraic operations?</latex>	pg 8710, bottom
<latex>~\\What do Plotkin and Power mean when they say that a closed term is \emph{well typed}?</latex>	pg 8711, top
<latex>~\\In Plotkin and Powers' small step operational semantics, there are two kinds of transitions between closed terms. What are they?</latex>	pg 8711<br>
Read pg 8711, starting at "Transitions terminate at values..." down to the bottom of the page.<br>	pg 8711<br>
<latex>~\\In Plotkin and Powers' calculus, a term may take on one of three forms. What are they?</latex>	1. a value "V"<br>2. a term in an evaluation context "E[R]"<br>3. a constant "a()"<br><br>pg 8712, top paragraph
<latex>~\\<br>Plotkin and Powers' big step relation has the following form:<br>$$M \Rightarrow t$$<br>We know $M$ denotes a term. What does $t$ denote?<br></latex>	it denotes an effect value.<br><br>pg 8712, bottom half
<latex>~\\<br>There are four big step rules in Plotkin and Powers' calculus<br>\begin{enumerate}<br>\item A rule for values $V$ <br>\item A rule for effect free transitions $\to$<br>\item A rule for effectful transitions $\overset{f_i}{\to}$<br>\item A rule for constants $a()$<br>\end{enumerate}<br>Give all four rules and explain them.<br></latex>	pg 8712, bottom<br>
Read figure 1 at the top of pg 8713<br>	pg 8713<br>
<latex>~\\<br>Give big step reductions for terms of the following form:<br>\begin{itemize}<br>\item $\mbf{if}~L~\mbf{then}~M~\mbf{else}~N$<br>\item $\lambda x : \sigma . M$<br>\item $\mathit{succ}(M)$<br>\end{itemize}<br></latex>	pg 8714 figure 2, notational explanation on pg 8713<br>
<latex>~\\<br>What does the judgment $\Gamma \vdash M = N : \sigma$ mean? Give a few of the equational rules.<br></latex>	bottom of pg 8714, top of pg 8715, down to section 3<br>
<latex>~\\<br>Briefly define Moggi's notion of a \emph{model} for the computational lambda calculus $\lambda_c$.<br></latex>	pg 8715, bottom half<br>
<latex>~\\<br>If $T$ is a monad, what does it mean for $T$ to have Kleisli exponentials?<br></latex>	pg 8715, bottom half<br>
<latex>~\\<br>On page 8715, near the bottom, there is a discussion of $g^\dagger$, which denotes the \emph{parameterized lift} of $g$. Read that section. It doesn't say how the parameterized lift is formed, but you should be able to figure it out. Figure out what the parameterized lift is.<br></latex>	I think we just need to use the monad strength, functoriality, and multiplication<br>pg 8715<br>
<latex>~\\<br>An effectful operation denotes a family of functions of the form $f_x : T(x)^n \to T(x)$ having a special property. What is this property, and what motivates it?<br></latex>	pg 8716 bottom / 8717 top<br>
<latex>~\\<br>If $a : 1 \to x$ and $f : x \to x$, what does $\mathit{Iter}_x(a,f)$ denote?<br></latex>	pg 8716<br>
The second paragraph of pg 8716 hints at a few interesting sounding things briefly. Can you elaborate on them?	pg 8716<br>
<latex>~\\<br>How do Plotkin and Power interpret the function symbols $\mathit{zero}$ and $\mathit{pred}$?</latex>	pg 8716, bottom paragraph<br>
<latex>~\\<br>How do Plotkin interpret terms of the following form:<br>$$\mbf{if}~L~\mbf{then}~M~\mbf{else}~N$$<br></latex>	pg 8716, bottom paragraph / pg 8717 top paragraph<br>
<latex>~\\What does a computation of the form $x~?~y$ denote? What are the equations governing the $?$ operation?</latex>	pg 8777 left, "Consider the simple effect..."
<latex>~\\What is a \emph{parameterized algebraic theory}?</latex>	pg 8777 bottom right
<latex>~\\In the setting of memory cells, it is reasonable to add a law asserting that different instances commute with each other. State this law.</latex>	pg 8778, top left
<latex>~\\Dealing with commutativity of writing effect instances requires some care. Discuss.</latex>	pg 8778, top left.
<latex>~\\Explain the algebraic operator $?_= : \frak M \times \alpha \times \alpha \times \frak M \to \frak M$.</latex>	pg 8778 left a).<br>
<latex>~\\<br>Give Staton's type syntax $\tau$.<br></latex>	pg 8778, bottom right
<latex>~\\<br>Staton defines two judgment forms $\Gamma \vdash t : \tau$ and $\Gamma \vdash t$. What are the inference rules for these two judgment forms?<br></latex>	pg 8778, bottom right.
<latex>~\\<br>As a type of a functional programming langauge, how can we think of Staton's type $[\tau_1, \ldots, \tau_n]$?<br></latex>	pg 8779, top left "As a functional programming language..."
<latex><br>What is the \emph{order} of a type?<br></latex>	pg 8779, section B first paragraph
<latex>~\\<br>What is a \emph{parameterized signature} $\Sigma$? What is a \emph{term} over $\Sigma$ in context $\Gamma$?. What is an \emph{equation} over signature $\Sigma$? What is a presentation of a parameterized algebriac theory?<br></latex>	pg 8779 left, def 1.<br>Note that by "order 1/2" he means that the order of a type can be 1 or 2. Order just means height. This is explained in the first paragraph of section B.<br><br>
<latex>~\\Staton states three laws associated with the algebraic operator $?$ for reading a binary digit. Give each one. Here are there names:<br>\begin{itemize}<br>\item ($?/?$)<br>\item $(\mathit{idem}-?)$<br>\item $(\mathit{dup}-?)$<br>\end{itemize}<br></latex>	pg 8779, right, section A near top
<latex>~\\<br>In addition to the algebraic operator for $?$ for reading a bit, we can add two unary function symbols $w_0 : [[]]$ and $w_1 : [[]]$ for writing the values 0 and 1 to the bit, respectively. Staton states three laws associated with these operators. Provide them. Here are there names:<br>\begin{itemize}<br>\item $(w_iw_j)$<br>\item $(w_i ?)$<br>\item $(?w)$<br>\end{itemize}<br></latex>	pg 8779, right side<br>
<latex>~\\<br>Staton defines two laws for the parameterized operator $?_a$ for reading the bit $a$ from memory. State them. Here are their names:<br>\begin{itemize}<br>\item (idem-$?_a$)<br>\item (dup-$?_a$)<br>\end{itemize}<br></latex>	pg 8780, top left<br><br>
<latex>~\\<br>Let $\Gamma$ and $\Delta$ be order 1 contexts. What does $(\Gamma \times \Delta)$ denote?<br></latex>	pg 8780 left<br>
<latex>~\\<br>Let $\Xi$ be any context, and let $\Gamma$ and $\Delta$ be order 1 contexts. If $\Xi,\Gamma \vdash t$ and $\Xi,\Delta \vdash u$ then how is the sequential composition $\Xi,\Gamma \times \Delta \vdash t;u$ defined?</latex>	pg 8780 left<br>
<latex>~\\<br>Let $\Gamma$ and $\Delta$ be order 1 contexts and let $\Xi$ be a context. What does it mean for two terms $\Xi, \Gamma \vdash t$ and $\Xi, \Delta \vdash u$ to \emph{commute}?<br></latex>	pg 8780 left, definition 2<br>
<latex>~\\<br>The $\nu$ binder is used to denote allocation of new instances / memory cells. What is its algebraic signature? What equation is used to stipulate that the bound instance is fresh?<br></latex>	pg 8778, bottom left, right above section 3<br>
<latex>~\\<br>When parameterizing a classical algebraic theory, there are three options regarding additional commutativity laws. What are they?<br></latex>	pg 8780, bottom right<br>
<latex>~\\<br>State Staton's four laws for the theory of equality testing. Here are their names:<br>\begin{itemize}<br>\item (idem-$?_=$)<br>\item ($?_=/?_=$)<br>\item (sub-$?_=$)<br>\item ($?_=$)<br>\end{itemize}<br></latex>	pg 8780 right, section C near top<br>
<latex>~\\<br>The parameterized theory of reading/writing has function symbols for reading a 1-bit memory cell, writing 0 to a 1-bit memory cell, writing 1 to a 1-bit memory cell, and comparing the identitities of two memory cells.<br>Its equational theory includes the standard laws for equality, commutativityof reading, and parameterized versions of the laws for writing. Provide the parameterized version of laws for writing. Their names are:<br>\begin{itemize}<br>\item (W/W)<br>\item (W/?)<br>\item (?W)<br>\end{itemize}<br></latex>	pg 8780, bottom right
<latex>~\\<br>Instead of the operation $? : [[],[]]$ that reads a binary digit, we can consider an operation $r : [[\alpha]]$ that reads an \emph{instance}. Give the idempotence and commutativity laws (idem-r) and (r/r) for this operator.<br></latex>	pg 8781 left, section A.<br><br>
<latex>~\\<br>How does Staton's restriction operator $\nu : [[\alpha]]$ work? What equations does it satisfy?<br></latex>	pg 8781 left, section B<br><br>
<latex>~\\<br>When we combine the theory of reading a bit with the theory of restriction ($\nu a. x$), the meaning of $\nu a.x~?_a~y$ is not determined. What are the two approaches to dealing with this. Give all equation(s) involved in each case.<br></latex>	pg 8781 left, section C<br>
<latex>~\\<br>How do we interpret the types $\tau$ of Staton's language categorically, with respect to a given object $X$? Note that there are two cases: parameters $\alpha$ and computations $[\tau_1,\ldots,\tau_n]$<br></latex>	pg 8782 left, section A, "Consider a cartesain closed..."
<latex>~\\<br>Let $\Sigma$ be a parameterized signature. What is a $\Sigma$-structure in a cartesian closed category? What is a homomorphism between $\Sigma$-structures $\frak M$ and $\frak N$?<br></latex>	pg 8782 left, def 3<br>
<latex>~\\<br>How do we interpret a ``computation in context'' judgment $\Gamma \vdash t$ with respect to a structure $\frak M$?<br></latex>	pg 8782 left, def 4<br>
<latex>~\\<br>What does it mean for a structure $\frak M$ to satisfy an equation $\Gamma \vdash t \equiv u$? What does it mean for a structure $\frak M$ to be a model of a theory? <br></latex>	pg 8782, def 4<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For any sets $\sem{\alpha}$ and $\frak M$ there is a unique function $\sem{?_=} : \frak M \times \sem{\alpha} \times \sem{\alpha} \times \frak M \to \frak M$ making $\frak M$ a model of the theory of equality testing in the category of sets.\\~\\<br>Prove or disprove.  <br></latex>	true. pg 8782 bottom left, prop 5
<latex>~\\<br>Consider the following statement:\\~\\<br>If $\sem{\alpha}$ is a countable set then there are no non-trivial set-theoretic models of restriction and equality.\\~\\<br>Prove or disprove.<br></latex>	pg 8782 right, prop 6<br>TODO: counterexample?
<latex>~\\<br>Consider the theory of ``specified initialization'' including the ($\eta$-?) rule given on pg 8781, top right.<br>$$a : \alpha, x : [\alpha] \vdash x(a) \equiv (\nu_0 b. x(b))~?_a~(\nu_1 b.x(b))$$<br>Let $\mathcal C$ be a cartesian closed category with specified object $\sem{\alpha}$. Further, suppose that every object $\mathcal C$ can be assigned a model structure in such a way that every morphism is a homomorphism. Consider the following statement:\\~\\<br>The object $\sem{\alpha}$ is a coproduct of the terminal object with itself ($\sem{\alpha} = 1 + 1$)\\~\\<br>Prove or disprove.<br></latex>	pg 8782, bottom right, prop 7 (=>). TODO: add impostor?
<latex>~\\<br>Consider the theory of ``specified initialization'' including the ($\eta$-?) rule given on pg 8781, top right.<br>$$a : \alpha, x : [\alpha] \vdash x(a) \equiv (\nu_0 b. x(b))~?_a~(\nu_1 b.x(b))$$<br>Let $\mathcal C$ be a cartesian closed category with specified object $\sem{\alpha}$. Further, suppose that the object $\sem{\alpha}$ is a coproduct of the terminal object with itself ($\sem{\alpha} = 1 + 1$). Consider the following statement:\\~\\<br>Every object of $\mathcal C$ can be assigned a model structure in such a way that every morphism is a homomorphism.\\~\\<br>Prove or disprove.<br></latex>	true, pg 8782 proposition 7, (2 => 1).<br>todo: add impostor?
<latex>~\\<br>How does Staton define $\mathit{Ctx_0}$, the ``category of contexts''. How does staton use this category to form a ``presheaf category''?<br></latex>	pg 8782 bottom right, sections 1) and 2), which spills on to next page<br>
<latex>~\\<br>How does Staton interpret a base type $\sem{\alpha}$ in a functor category?<br></latex>	pg 8783<br>
<latex>~\\<br>Explain the Cartesian closed structure of the functor category $[\mathit{Ctx}_0,\mathit{Set}]$. <br></latex>	pg 8783 top right, section 4<br>
<latex>~\\<br>Read section 5, as well as prop 8, on pg 8783, top left<br></latex>	og 8783
<latex>~\\<br>Give Eggers' syntax for value types and computation types.<br></latex>	pg 9860<br><br>
Read pg 9861, the paragraph starting with "To ease the transition..."<br>	pg 9861<br>
<latex>~\\<br>The enriched effect calculus contains two forms of typing judgments. What are they?<br></latex>	pg 9861, "The above discussion...."<br>
<latex>~\\<br>Give the following typing rules for the effect calculus:<br>\begin{itemize}<br>\item Value variable<br>\item Computation variable<br>\item Unit<br>\end{itemize}<br></latex>	pg 9862, first three rules<br>
<latex>~\\<br>Give the following typing rules for the effect calculus:<br>\begin{itemize}<br>\item Application<br>\item Bang modality<br>\item Monadic let<br>\end{itemize}<br></latex>	pg 9862, last three rules.
<latex>~\\<br>What are Eggers' typing rules for product introduction and elimination? How do we justify these based on his idea of linear computation dependence?<br></latex>	pg 9862 fig 1<br>justification in the paragraph starting with "The problem here is..."<br>
<latex>~\\<br>Give Eggers' equality rule for unit. <br>Give his three equality rules for binary products.<br></latex>	pg 9863, fig 2<br><br>
<latex>~\\<br>Give Eggers' two equality rules for abstraction and application. <br></latex>	pg 9863, fig 2<br>
<latex>~\\<br>Give Eggers' two equality rules for monadic let bindings. <br></latex>	pg 9863, fig 2, last two rules<br>
<latex>~\\<br>Give Eggers' typing rules for linear abstraction and linear application.<br></latex>	pg 9864, figure 3, first two rules<br>
<latex>~\\<br>Give Eggers' typing rules for tensor product introduction and elimination.<br></latex>	pg 9864 figure 3, also see paragraph beginning with "Similarly, it is also difficult..."<br>
<latex>~\\<br>How do we extend the type syntax of the effect calculus to obtain the enriched effect calculus?<br></latex>	pg 9864, "The resulting enriched effect calculus has type defined..."<br>
Read the bottom paragraph of pg 9864, "The restriction that..."<br>	pg 9864<br>
<latex>~\\<br>Give the two equality rules for linear functions in the enriched effect calculus.<br></latex>	pg 9865, first two rules of fig 4<br>
<latex>~\\<br>Give the two equality rules for asymmetric tensors in the enriched effect calculus.<br></latex>	pg 9865, below figure 4<br><br>
<latex>~\\<br>Intuitively describe what \emph{compositionality} is, as it relates to coalgebras. What is the microcosm principle?<br></latex>	pg 5937, "Compositionality in coalgebras", "The microcosm principle"<br>the diagram at the top of pg 5938 is particularly helpful<br>
<latex>~\\<br>In order to lift a tensor bifunctor from a category $\mbf{C}$ to a category of coalgebras in $\mbf{C}$, we need a special natural transformation. What is it called? What are its domain and codomain?<br></latex>	pg 5939 bottom, "Parallel composition"<br>pg 5940 top, "sync" natural transformation
<latex>~\\<br>Assume that a category $\mbf{C}$ has a tensor $\otimes : \mbf C \times \mbf C \to \mbf C$ and an endofunctor $F : \mbf C \to \mbf C$ has a natural transformation $\mathit{sync}_{X,Y} : FX \otimes FY \to F(X \otimes Y)$. Moreover, let there exist a final $F$-coalgebra. Consider the following statements:<br>\begin{enumerate}<br>\item The tensor $\otimes$ on $\mbf{C}$ liftes to an ``outer'' composition operator $\otimes : \mbf{Coalg}_{F} \times \mbf{Coalg}_F \to \mbf{Coalg}_F$.<br>\item We obtain an ``inner'' composition operator $\parallel : Z \otimes Z \to Z$ by coinduction.<br>\item Between the two composition operators the compositionality property (4) on the bottom of pg 5939 holds. <br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 5940, thm 2.1<br>
<latex>~\\<br>What is Hasuo's ``compositionality property''? We can put compositionality in more abstract terms by saying "the functor $\mathit{beh} : \mbf{Coalg}_F \to \mbf C / Z$ preserves a tensor? Elaborate.<br></latex>	compositionality is defined at bottom of pg 5939.<br>"preserving tensor" is explained near the bottom of pg 5940<br>
<latex>~\\<br>Explain the difference between CSP-style parallel composition and CCS-style parallel composition. Show how each of these styles can be represented by a suitable \emph{sync} natural transformation.<br></latex>	pg 5941, "In considering parallel composition"...
<latex>~\\<br>Let $\mbf C$ be a category with a strictly associative tensor $\otimes$, and $F : \mbf C \to \mbf C$ be a functor with $\mathit{sync} : FX \otimes FY \to F(X \otimes Y)$. Consider the following statement:\\~\\<br>If the diagram:<br>\[\begin{tikzcd}<br> {FX \otimes(FY \otimes FZ)} && {FX \otimes (Y \otimes Z)} && {F(X \otimes (Y \otimes Z))} \\<br> \\<br> {(FX \otimes FY) \otimes FZ} && {F(X \otimes Y) \otimes FZ} && {F((X \otimes Y) \otimes Z)}<br> \arrow["{FX \otimes \mathit{sync}}", from=1-1, to=1-3]<br> \arrow["{\mathit{sync}}", from=1-3, to=1-5]<br> \arrow["{\mathit{sync} \otimes FZ}"', from=3-1, to=3-3]<br> \arrow["{\mathit{sync}}"', from=3-3, to=3-5]<br> \arrow["{\mathit{id}}"', from=1-1, to=3-1]<br> \arrow["{\mathit{id}}", from=1-5, to=3-5]<br>\end{tikzcd}\]<br>commutes, then the lifted tensor $\otimes$ on $\mbf{Coalg}_F$ is strictly associative.<br></latex>	pg 5942, thm 2.4<br><br>
<latex>~\\<br>Prove the following statement using induction:\\<br>For all natural numbers $x$ and $n$, $x^n - 1$ is divisible by $x - 1$.<br></latex>	pg 12703<br>
<latex>~\\<br>Use induction to prove that the sum of the first $n$ natural numbers is $n(n+1)/2$.<br></latex>	pg 12704, thm 2.2<br>
<latex>~\\<br>Prove that if $n$ is a natural number and $1 + x > 0$, then<br>$$(1+x)^n \geq 1 + nx$$<br></latex>	pg 12705, theorem 2.4<br><br>
<latex>~\\<br>A set of lines is said to be in \emph{general position} if no two lines are parallel and no three lines intersect at a common point. How many regions are formed by $n$ lines in general position?<br></latex>	pg 12706, full page, spills on to next page. Make sure to read the "Comments" section on the next page.<br><br>
<latex>~\\<br>Consider $n$ distinct lines a plane, not necessarily in general position. We are interested in assigning colors to the regions formed by these lines such that neighboring regions have different colors (two regions are considered neighbors if and only if they have an edge in common.) We will say that ``it is possible to color the regions if we can follow this rule, and we call the assignment of colors a \emph{valid coloring}. Consider the following statement:\\~\\<br>It is possible to color the regions formed by any number of lines in the plane with only two colors.\\~\\<br>Prove or disprove.<br></latex>	pg 12707, section 2.4. Spills onto pg 12708. Make sure to read the "Comments" section.<br><br>
<latex>~\\<br>Consider the following sequence of summations:\\~\\<br>\begin{tabular}{lcl}<br>1 & = & 1 \\<br>3 + 5 & = & 8 \\<br>7 + 9 + 11 & = & 27 \\<br>13 + 15 + 17 + 19 & = & 64 \\<br>21 + 23 + 25 + 27 + 29 & = & 125<br>\end{tabular}<br></latex>	pg 12708, section 2.5<br>spills onto pg 12709, make sure to read the "comments" section<br><br>
<latex>~\\<br>Provide the type and definition of the standard \emph{map} function.<br></latex>	pg 11501<br>
<latex>~\\<br>Provide the type and definition of the standard \emph{filter} function.<br></latex>	pg 11501<br>
<latex>~\\<br>Give the type and definition of the standard \emph{foldr} function.<br></latex>	pg 11501<br>
<latex>~\\<br>Give the definition of the standard \emph{flip} function.<br></latex>	pg 11502<br>
<latex>~\\<br>Give the type and definition of the standard \emph{foldl} function.<br></latex>	pg 11502<br>
<latex>~\\<br>In Haskell, we can define $$\mathit{head} = \mathit{foldr}~(\ll)~\bot~\mbf{where}~y=x$$<br>show the operational reduction sequence resulting from applying $\mathit{head}$ to a list $(x:xs)$.<br></latex>	pg 11503. foldr defined on pg 11501 near the bottom<br>
<latex>~\\<br>What is an \emph{online algorithm}? Give the type and definition of the standard \emph{scanl} function.<br></latex>	pg 11504<br>
<latex>~\\<br>Write a function \emph{perms} to compute all permutations of a list.<br></latex>	pg 11504<br>
<latex>~\\<br>How do we create an \emph{until} function, which performs an until loop in Haskell? What is its type? What is its definition?<br></latex>	pg 11506<br>
<latex>~\\<br>What is fusion? Fuse the following haskell expressions:<br>\begin{itemize}<br>\item $\mathit{map~f \cdot map~g}$<br>\item $\mathit{concatMap~f \cdot map~g}$<br>\item $\mathit{foldr}~f~e \cdot \mathit{map}~g$<br>\end{itemize}<br></latex>	wow, this is so important. I saw the need for this all the time at Epic, but it was impossible to do this because we were programming in MUMPs.<br><br>pg 11506
<latex>~\\<br>Given a sequence of real numbers $a_n,a_{n-1},\ldots,a_1,a_0$, and a real number $x$, compute the value of the polynomial $P_n(x) = a_n x^n + a_{n-1} x^{n-1} + \cdots + a_1 x + a_0$.\\~\\<br>There are a few solutions to the above problem that use induction, some more efficient than others. Discuss.<br></latex>	pg 12785, 12786,12787
<latex>~\\<br>Given an undirected graph $G = (V,E)$ and an integer $k$, find an induced subgraph $H = (U,F)$ of $G$ of maximum size such that all vertices of $H$ have degree $\geq k$ (in $H$), or conclude that no such induced subgraph exists.\\~\\<br>How do we solve the above problem using induction?<br></latex>	pg 12788, 12789<br>
<latex>~\\<br>Try to solve the problem defined on pg 12789-12790, section 5.4, using induction.<br></latex>	pg 12789<br>
<latex>~\\<br>Solve the following problem using induction.\\~\\<br>Given a finite set $A$ and a mapping $f$ from $A$ to itself, find a subset $S \subseteq A$ with the maximum number of elements, such that $(1)$ the function $f$ maps every element of $S$ to another element of $S$ (i.e., $f$ maps $S$ into itself), and $(2)$, no two elements of $S$ are mapped to the same element (i.e., $f$ is one-to-one when restricted to $S$).<br></latex>	pg 12790,12791<br><br>important paragraphs "The essence of the solution..." and "Comments" section<br><br>
Explain the <i>main memory</i> and <i>program store</i> components of the C-Machine. Main memory contains a stack. How does that work?<br>	pg 8532,8533<br>
When does the C machine stop executing? How does it return a value back to the operating system?	pg 8533<br>
What does the C-machine's <i>loadc</i> instruction do? 	pg 8534/8535<br><br>
<latex>~\\<br>Explain how the C-Machine's $\mbf{mul}$ instruction works.<br></latex><br>	pg 8534<br>
Explain how the C-Machine's <b>leq</b> operator works. Explain how it's <b>neg</b> instruction works.	pg 8535 top
What is an <i>address environment</i>?	pg 8536<br>
<latex>~\\<br>What are L-values and R-Values? Does every expression have an R-value? An L-value?<br>What do $\mbf{code}_L$ and $\mbf{code}_R$ denote? <br></latex>	pg 8536, bottom paragraph.<br>
<latex>~\\<br>Partially provide the inductive definition of $\mbf{code}_R$ for the following cases:\\<br>$\mbf{code}_R$~(e_1 + e_2)~\rho$\\<br>$\mbf{code}_R$~(-e)~\rho$\\<br>$\mbf{code}_R$~3~\rho$~~~(\text{integer constant})\\<br>$\mbf{code}_R$~x~\rho$~~~(\text{variable})\\~\\<br>For $\mbf{code}_L$, define the following case:\\<br>$\mbf{code}_L~x~\rho$<br></latex>	pg 8537, fig 2.8<br>
<latex>~\\<br>How does the $\mbf{load}$ instruction work?<br></latex>	pg 8537<br>
<latex>~\\<br>Provide the sequence of instructions to compute ``$x \leftarrow y + 1$'' under the address environment $\rho = \{ x \mapsto 4, y \mapsto 7 \}$. <br></latex>	pg 8537<br>
<latex>~\\<br>Provide the defintion of $\mbf{code}_R~(x \leftarrow e)~\rho$.<br></latex>	pg 8538<br>
Read example 2.3.1 on pg 8538<br>	pg 8538<br>
<latex>~\\<br>Explain the $\mbf{loada}$ and $\mbf{storea}$.<br></latex>	pg 8539 top<br><br>
<latex>~\\<br>What is the different between the \emph{expression} $e$ and the \emph{statement} $e;$?<br></latex>	pg 8539, section 2.4<br>
<latex>~\\<br>How do we generate code for the sequence ``$s_1$~$s_2$'' of the statement $s_1$ followed by $s_2$.<br></latex>	pg 8539<br>
Explain the <b>jump</b> and <b>jumpz</b> instructions.	pg 8540<br>
<latex>~\\<br>Provide the inductive case definition of:\\<br>$\mbf{code}~(\mathit{if}~(e)~s)~\rho$<br></latex>	pg 8541, figure 2.13<br>
<latex>~\\<br>How do we compile a while loop?\\<br>I.e. how do we define $\mbf{code}~(\mathit{while}~(e)~s)~\rho$?<br></latex>	pg 8542 near bottom<br>
Read example 2.5.1, which starts on page 8541 bottom, and spills onto page 8542.<br>	pg 8541
<latex>~\\<br>Explain the \mbf{jumpi} instruction. What control flow mechanism does it most directly correspond to?<br></latex>	pg 8544<br>
In compiling a switch statement, we use the macro "check 0 k B", which checks if the value on the top of the stack lies in the interval [0,k] and then performs an indexed jump. How might the check macro be expanded? 	pg 8544 bottom / 8545 top<br>
Explain the <b>dup</b> instruction.<br>	pg 8545<br>
Read section 2.6, on pages 8546 and 8547<br>	pg 8546<br>
Give the inductive definition of <i>sizeof</i>, assuming that only basic types and arrays exist.	pg 8547<br>
<latex>~\\<br>For a sequence of declarations $t_1~x_1;\cdots;t_k~x_k$, how do we define the corresponding address environment $\rho$, using induction on the sequence length and the \emph{sizeof} auxiliary function? (Hint: the lowest allowed address is 1)<br></latex>	pg 8547<br>
<latex>~\\<br>Provide the definition of $\mbf{code}_L~a[e]~\rho$.<br></latex>	pg 8548
<latex>~\\<br>Let $t$ be an aggregate type of the from $\mbf{struct}~\{ t_1~c_1;\cdots t_k~c_k; \}$. Fill in the blanks for the following definition, using the auxiliary function $|-|$ (aka sizeof):\\~\\<br>$\mathit{offsets}(t,c_1) \doteq \underline{~~~~~~}$\\<br>$\mathit{offsets}(t,c_i) \doteq \underline{~~~~~~~}$\\<br>$|t| \doteq \underline{~~~~~}$<br></latex>	pg 8548 near bottom, pg 8549 near top<br>
<latex>~\\<br>Provide the definition of $\mbf{code}_L~(e.c)~\rho$.<br></latex>	pg 8549<br>
The <b>load</b> instruction is extended to take a positive integer parameter m. What does "<b>load </b> m" do and what motivates the inclusion of this parameter?	pg 8549, "where m = offsets(t,c). How is the R-value of a member obtained?..."<br>
<latex>~\\<br>Let $e$ be an expression of aggregate (struct) type $t$ with $|t|=m$. Provide the definition of $\mbf{code}_R~(e)~\rho$.<br></latex>	pg 8549 bottom<br>
<latex>~\\<br>Provide the definition of $\mbf{code}_R~(e_1 \leftarrow e_2)~\rho$, where $e_2$ has the aggregate (struct) type $t$.<br></latex>	pg 8550<br>
Read the top paragraph on pg 8550.<br>	pg 8550<br>
<latex>~\\<br>Where are the stack and heap located in data memory? Where does the heap pointer (HP) point to? Where does the stack pointer (SP) point to?<br></latex>	pg 8551, "As briefly outlined..."<br>
<latex>~\\<br>Explain the $\mbf{new}$ instruction. What does it do? How is it implemented?<br></latex>	pg 8551 bottom paragraph / pg 8552 top<br><br>
What is the <i>extreme pointer</i> (EP)?	pg 8552<br>
In C, there are two ways to produce pointers. What are they?	pg 8552 bottom<br>
<latex>~\\<br>Provide the definition of $\mbf{code}_R~(\mbf{malloc}(e))~\rho$<br></latex>	pg 8552 bottom / 8553 top<br><br>
<latex>~\\<br>Provide the definitions of:\\~\\<br>$\mbf{code}_R~(\& e)~\rho$\\<br>$\mbf{code}_L~(\ast e)~\rho$<br></latex>	pg 8553, "The address operator..."<br>
Read example 2.8.1 on pg 8554-8555<br>	pg 8554<br>
<latex>~\\<br>Let $t$ be a struct type, let $e_1$ have type $t$ and $e_2$ type $\mbf{int}$. Provide the definition of $\mbf{code}_R~(e_1 - e_2)~\rho$. Then, provide the definition of $\mbf{code}_R~e_1[e_2]~\rho$.<br></latex>	pg 8553, near bottom<br><br>
<latex>~\\<br>Let $f$ be a function. What is an \emph{incarnation} of $f$? What is an \emph{incarnation path}?<br></latex>	pg 8556 bottom<br>
Read example 2.9.1 near the top of pg 8557<br>	pg 8557<br>
Read the bottom paragraph of pg 8557 and the top four paragraphs of pg 8558.	pg 8557<br>
Read example 2.9.2 on pg 8558, and also read example 2.9.3 on pg 8558-8559<br>	<br>
The data representing a function incarnation is stored in a structure called a <i>stack frame</i>. Provide a diagram of the layout of the stack frame.	pg 8559, bottom two paragraphs, pg 8560 fig 2.24<br>
<latex>~\\<br>To accomodate both local and global variables, we update the address environment so that it has the type $\rho : \mathit{Names} \to \{ G , L \} \times \mathbb Z$. With address environments of this form, how is $\mbf{code}_L~x~\rho$ defined?<br></latex>	pg 8561<br>
<latex>~\\<br>Explain the $\mbf{loadrc}$ instruction. How is it implemented?<br></latex>	pg 8561 bottom<br>
<latex>~\\<br>How are the $\mbf{loadr}$ and $\mbf{storer}$ instruction macros defined?<br></latex>	pg 8561 near bottom<br>
How are the "elab_global", "elab_formal", and "elab_local" metafunctions defined?	pg 8562
Read the bottom paragraph of pg 8562, down to example 2.9.4 on pg 8563.<br>	pg 8563<br>
Read example 2.9.4 on pg 8563, which refers to example 2.9.1 on pg 8557<br>	pg 8563<br>
State the <i>fusion law of foldr</i>. What is the <i>fusion condition</i>? Prove the fusion law, assuming the condition.	pg 11507<br>
<latex>~\\<br>State the fusion law of foldr. Use it to prove that $\mathit{foldr}~f~e \cdot \mathit{concat} = \mathit{foldr}~(\mathit{flip}~(\mathit{foldr}~f))~e$.<br></latex>	fusion law of foldr stated near bottom of pg 11507.<br><br>We need a lemma, proven by appealing to the definition of foldr:<br>foldr f e (xs ++ ys) = foldr f (foldr f e ys) xs<br><br>We also need to expand the definition of concat<br>concat = foldr (++) []<br><br>Then, take <br>h = foldr f e <br>and  <br>g = flip (foldr f)<br><br>The fusion conditions is then<br>foldr f e (xs ++ ys) = (flip (foldr f)) xs (foldr f e ys)<br>which is pretty close (and equivalent to) the lemma above which was derived from the definition of foldr.<br><br>The fusion condition is then<br>
<latex>~\\<br>Provide the definition of the category $\mathcal E^{++}$.<br></latex>	pg 11306 bottom / 11307 top<br>
<latex>~\\<br>Provide the definition of the 2-functor $p^{++} : \mathcal E^{++} \to 2-\mathcal{C}at_2$.<br></latex>	pg 11307, above section 3.2.2<br>
<latex>~\\<br>Explain why a graded monad is just a monad (in the 2-categorical sense of Street) in the category $\mathcal E^{++}$.<br></latex>	pg 11310/11311<br>
<latex>~\\<br>Provide the definition of the 2-category $\mathcal E^{+-}$.<br></latex>	pg 11307/11308
<latex>~\\<br>Provide the definition of the 2-category $\mathcal E^{-+}$.<br></latex>	pg 11308/11309<br>
<latex>~\\<br>Provide the definition of the 2-category $\mathcal E^{--}$.<br></latex>	pg 11309/11310<br>
<latex>~\\<br>There is a 2-monad $\mathbb M \times (-)$ on $\mathcal C\text{at}$. Give its unit $H^{\mathbb M}$ and multiplication $M^{\mathbb M}$.<br></latex>	pg 11310, def 3.8<br>
<latex>~\\<br>There is a 2-comonad $[\mathbb M, -]$ on $\mathcal C\text{at}$. Give its counit $H^{\mathbb M}$ and comultiplication $M^{\mathbb M}$.<br></latex>	pg 11313 top<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category. Consider the following statement:\\~\\<br>An $\mathbb M$-graded monad on $\mathbb C$ is the same thing as a monad in $\mathcal E^{--}$ on $(\mathcal C\text{at},\mathbb C)$ above the 2-comonad $[\mathbb M, -] : \mathcal C\text{at} \to \mathcal C\text{at}$.\\~\\<br>Prove or disprove.<br></latex>	pg 11312<br>
<latex>~\\<br>Let $\mbf T = (\ast, \eta, \mu)$ be a graded monad. How is the category $\mathbb C^{\mbf T}$ defined?<br></latex>	pg 11320, def 4.1<br>
<latex>~\\<br>How is the \emph{strict left action} $\oast : \mathbb M \times \mathbb C^{\mbf T} \to \mathbb C^{\mbf T}$ defined?<br></latex>	pg 11321, def 4.2<br><br>
<latex>~\\<br>Provide the definition of the left adjoint<br>$$(F^{\mathbb M}, f^{\mbf T}) : (\mathcal C\text{at}) \to (\mathcal C\text{at}^{\mathbb M \times (-)}, \vrt{\mathbb M \times \mathbb C^{\mbf T}}{\mathbb C^{\mbf T}} \! \oast)$$<br>in the Eilenberg-Moore adjunction of $\mathcal E^{++}$.<br></latex>	pg 11322, def 4.3 & 4.4<br>
<latex>~\\<br>Provide the definition of the right adjoint <br>$$(U^{\mathbb M}, u^{\mbf T}) : (\mathcal C\text{at}^{\mathbb M \times (-)}, \vrt{\mathbb M \times \mathbb C^{\mbf T}}{\mathbb C^{\mbf T}} \! \oast) \to (\mathcal C\text{at}, \mathbb C)$$<br>of the Eilenberg-Moore adjunction of $\mathcal E^{++}$.<br></latex>	pg 11322<br>
Give the definition of a probability space.	pg 14166, def 1.1<br><br>A probability space has three components:<br><br>1. a sample space Ω, which is the set of all possible outcomes of the random process<br><br>2. a family of sets <i>F</i> representing the allowable events, where each set in <i>F</i> is a subset of the sample space Ω; and<br><br>3. a probability function Pr : <i>F</i> → <b>R</b> satisfying the following three criteria<br><br>1. for any event E, 0 ≤ Pr(E) ≤ 1;<br>2. Pr(Ω) = 1; and<br>3. for any finite or countably infinite sequence of pairwise mutually disjoint events E<sub>1</sub>,E<sub>2</sub>,E<sub>3</sub>,...,<br>Pr(∪<sub>i≥1</sub>E<sub>i</sub>)=Σ<sub>i≥1</sub>Pr(E<sub>i</sub>)<br><br>
Consider the following statement:<br><br>For any two events E<sub>1</sub> and E<sub>2</sub>,<br><br>Pr(E<sub>1</sub> ∪ E<sub>2</sub>) = Pr(E<sub>1</sub>) + Pr(E<sub>2</sub>) - Pr(E<sub>1</sub>∩E<sub>2</sub>)<br><br>Prove or give a counterexample.	true. pg 14167, lemma 1.1<br>
Consider the following statement.<br><br>For any two events E<sub>1</sub> and E<sub>2</sub>,<br><br>Pr(E<sub>1</sub> ∪ E<sub>2</sub>) = Pr(E<sub>1</sub>) + Pr(E<sub>2</sub>)<br><br>Prove or give a counterexample.<br><br>	Prove or give a counterexample.<br><br>IMPOSTOR!  pg 14167<br>
State and prove <i>union bound</i>.	pg 14167, lemma 1.2<br>
What is the inclusion-exclusion principle?	pg 14167, lemma 1.3<br>
What does it mean for two events E and F to be <i>independent</i>?	Two events E and F are independent if and only if Pr(E ∩ F) = Pr(E)Pr(F).<br><br>pg 14169, def 1.3<br><br>
What does it mean for a finite set of events to be mutually independent?	For any subset I ⊆ [1,k], Pr(∩<sub>i∈I</sub>E<sub>i</sub>) = Π<sub>i∈I</sub>Pr(E<sub>i</sub>).<br><br>pg 14169, def 1.3<br>
Give the meaning and formal definition of Pr(E | F).<br>	pg 14169, def 1.4<br><br>the probability of E, given that F occurs<br><br>Pr(E | F) = Pr(E∩F)/Pr(F)<br><br>only defined when Pr(F) ≠ 0.<br><br>The definition can also be written in the useful form:<br>Pr(E|F)Pr(F)=Pr(E∩F)<br>
Consider the problem of deciding identities of the following form:<br><br>(x+1)(x-2)...(x+3) ≡ x<sup>6</sup>-7x<sup>3</sup>+25<br><br>What is the complexity of the straightforward solution to this? Give a randomized solution that gets the right answer with high probability and has lower time complexity.	pg 14170, also see pgs 14164-14165<br>
<latex>~\\<br>Let A,B, and C be matrices. Consider the following statement:\\~\\<br>If $AB \neq C$ and $\overline{r}$ is chosen uniformly at random from $\{0,1\}^n$, then $\mathit{Pr}(AB\overline{r} = C\overline{r}) \leq \frac{1}{2}$.<br></latex><br><br><br>Prove or disprove.<br>	true. thm 1.4. pg 14171
Consider the following statement:<br><br>Choosing <b>r</b>=(r<sub>1</sub>,...,r<sub>n</sub>) ∈ {0,1}<sup>n</sup> uniformly at random is equivalent to choosing each r<sub>i</sub> independently and uniformly from {0,1}.<br><br>Prove or disprove.<br>	true. lemma 1.5, pg 14171<br>
Give the definition of the <i>principle of deferred decisions</i>.	pg 14172<br>
Give the definition of a <i>random variable</i>. Also, give the definition of a <i>discrete random variable</i>. 	A random variable X on a sample space Ω is a real-valued function on Ω; that is, X : Ω → <b>R</b>. A discrete random variable is a random variable that takes on only a countable number of values.<br><br>pg 14183<br>
What does it mean for two random variables to be independent?	pg 14184<br><br><br>Two random variables X and Y are independent <i>if and only if</i> Pr( ( X = x ) ∩ (Y = y) ) = Pr(X = x)*Pr(Y = y) for all x in the range of X and y in the range of Y.<br><br>
What does it mean for k random variables X<sub>1</sub>,X<sub>2</sub>,...,X<sub>k</sub> to be mutually independent?	pg 14184<br><br><br>X<sub>1</sub>,X<sub>2</sub>,...,X<sub>k</sub> are mutually independent if and only if, for any subset I ⊆ [1,k] and any values x<sub>i</sub>, i ∈ I.<br><br>Pr(∩<sub>i∈I</sub>X<sub>i</sub>=x<sub>i</sub>) = Π<sub>i ∈ I</sub> Pr(X<sub>i</sub> = x<sub>i</sub>).<br><br>def 2.2, pg 
Give the definition of E[X], the expectation of a discrete random variable X.<br><br>	<br>def 2.3, pg 14184<br><br><br>E[X] = Σ<sub>i</sub>i*Pr(X = i),<br><br>where the summation is over all values in the range of X. The expectation is finite if Σ<sub>i</sub>|i|Pr(X = i) converges; otherwise, the expecation is unbounded.<br>
Consider the following statement:<br><br>For any finite collection of descrete random variables X<sub>1</sub>, X<sub>2</sub>, ... , X<sub>n</sub> with finite expectations,<br><br><$$>E[ \sum_{i=1}^nX_i]=\sum_{i=1}^{n}E[X_i]</$$><br><br>Prove or give a counterexample.	true. proof on pg 14185
Consider the following statement:<br><br>For any collection of descrete random variables {X<sub>t</sub> | t ∈ T} with finite expectations,<br><br><$$>E[ \sum_{t \in T}X_t]=\sum_{t \in T}E[X_t]</$$>	this is an impostor, I think, because it may not hold for infinite collections of random variables.<br><br>pg 14185<br>
Consider the following statement. For any constant c and discrete random variable X,<br><br>E[cX] = cE[X]<br><br>Prove or give a counterexample.	true. lemma 2.2, pg 14186<br>
Consider the following statement:<br><br>For any random variable X, E[X<sup>2</sup>]=E[X]<sup>2</sup>.<br><br>Prove or give a counterexample.<br>	Nope. This isn't true. Should be a counterexample. see pg 14186
Consider the following statement:<br><br>For any random variable E[X<sup>2</sup>] ≥ (E[X])<sup>2</sup>.<br><br>Prove or give a counterexample.<br>	true. proof on pg 14187<br>
Consider the following statement:<br><br>For any random variable E[X<sup>2</sup>] ≤ (E[X])<sup>2</sup>.<br><br>Prove or give a counterexample.	false. should be ≥. pg 14186-14187
What does it mean for a function to be convex?<br>	def 2.4, pg 14187<br><br>A function f : <b>R</b>→<b>R</b> is said to be convex if, for any x<sub>1</sub>,x<sub>2</sub> and 0 ≤ λ ≤ 1,<br><br>f(λx<sub>1</sub> + (1 - λ)x<sub>2</sub>) ≤ λf(x<sub>1</sub>)+(1-λ)f(x<sub>2</sub>).<br><br>
Consider the following statement: <br><br>If f is a twice differentiable function, then f is convex if and only if f''(x) ≥ 0.<br><br>Prove or give a counterexample.	true. proof not in book (big spivak probably has it).<br><br>pg 14187
Consider the following statement: <br><br>If f is a differentiable function, then f is convex if and only if f'(x) ≥ 0.<br><br>Prove or give a counterexample.	false. pg 14187
Consider the following statement: <br><br>If f is a convex function, then<br><br>E[f(X)] ≥ f(E[X])<br><br>Prove or give a counterexample.	true. pg 14187<br>
Give the definition of a Bernoulli random variable.<br><br>	pg 14188, near top<br><br>Suppose we run an experiment that succeeds with probability p and fails with probability (1-p). <br><br>A random variable Y is a Bernoulli random variable iff:<br>- Y = 1 if the experiment suceeds<br>- Y = 0 otherwise<br><br>
Give the definition and probability distribution of the binomial random variable B(n,p).<br>	def 2.5, pg 14188<br><br>A binomial random variable X with parameters n and p, denoted by B(n,p), is defined by the following probability distribution on j = 0,1,2,...,n: <br><br><$$> Pr(X = j) = {n \choose j}p^j(1-p)^{n-j}</$$><br><br><br>
State and prove the expectation of a binomial random variable B(n,p).	it's np<br><br>pg 14189 ** DONT OVERLOOK THE LINEARITY APPROACH MENTIONED AT THE BOTTOM OF THE PAGE **
If Y and Z are random variables, what does E[Y | Z = z] denote?	pg 14190, def 2.6<br><br>It is a "conditional expectation"<br><br><$$>E[Y | Z = z] = \sum_{y}yPr(Y=y|Z=z)</$$><br><br>where the summation is over all y in the range of Y.
Consider the following statement:<br><br>For any random variables X and Y,<br><$$> E[X] = \sum_{y}Pr(Y=y)E[X | Y = y],</$$><br><br>where the sum is over all values in the range of Y and all of the expectations exist.<br><br>Prove or give a counterexample.<br>	true. pg 14190. TODO: add impostor<br>
Consider the following statement:<br>For any finite collection of discrete random variables X<sub>1</sub>, X<sub>2</sub>,...,X<sub>n</sub> with finite expectations and for any random variable Y,<br><br><$$>E[(\sum_{i=1}^{n}X_i) | Y = y] = \sum_{i=1}^{n}E[X_i | Y = y]</$$><br><br>Prove or give a counterexample.	true. pg 14191, lemma 2.6. 
What does E[Y|Z] denote? 	pg 14191<br><br>E[Y | Z] is a random variable f(Z) that takes on the value E[Y | Z = z] when Z = z.
State and prove Markov's Inequality.	pg 14207<br><br>Let X be a random variable that assumes only nonnegative values. Then, for all a > 0, Pr(X ≥ a) ≤ E[X]/a.<br><br>
Use Markov's inequality to bound the probability of obtaining more than 3n/4 heads in a sequence of n fair coin flips.	<br>pg 14208 top<br><br>
Give the definition of <i>the kth moment</i> of a random variable.	pg 14208, def 3.1<br><br>kth moment of X:<br>E[X<sup>k</sup>]<br>
Give the definition of the <i>variance</i> of a random variable.	pg 14208, def 3.2<br><br>Var[X] = E[(x-E[X])<sup>2</sup>] = E[X<sup>2</sup>] - (E[X])<sup>2</sup>
Give the definition of the standard deviation of a random variable.	pg 14208, def 3.2<br><br>σ[X]=sqrt(Var(X))
Give the definition of the <i>covariance</i> of two random variables X and Y. Where does this definition come from?	pg 14209, def 3.3<br><br>Cov(X,Y)=E[(X-E[X])(Y-E[Y])]<br><br>Where it comes from: <br>Var[X+Y]=Var[X]+Var[Y]+2Cov(X,Y)
Consider the following statement.<br><br>Var[X+Y]=Var[X]+Var[Y]+2Cov(X,Y)<br><br>Prove or give a counterexample.	true. pg 14209.<br>
Consider the following statement:<br><br>Var[X+Y] = Var[X] + Var[Y]<br><br>Prove or give a counterexample.	IMPOSTOR!<br>Var[X+Y] = Var[X] + Var[Y] + 2Cov(X,Y)<br><br>pg 14209<br>
Consider the following statement:<br><br>If X and Y are two independent random variables, then<br><br>E[X*Y] = E[X]*E[Y]<br><br>Prove or give a counterexample.<br>	true. pg 14209
Consider the following statement:<br><br>If X and Y are two random variables, then<br>E[X*Y]=E[X]*E[Y]<br><br>Prove or give a counterexample.<br>	IMPOSTOR! the variables must be independent<br><br>pg 14209<br>
Consider the following statement:<br><br>If X and Y are independent random variables, then <br>Cov(X,Y)=0<br>and<br>Var[X+Y] = Var[X] + Var[Y]<br><br>Prove or give a counterexample.	true. pg 14210
Consider the following statement:<br><br>Let X<sub>1</sub>,X<sub>2</sub>,...,X<sub>n</sub> be mutually independent random variables. Then<br><$$>Var[\sum_{i=1}^nX_i]=\sum_{i=1}^nVar[X_i]</$$><br><br>prove or give a counterexample<br>	true. thm 3.5, pg 14211 (proof: apply induction on cor. 3.4, pg 14210)
Compute the variance of a Bernoulli random variable.	pg 14211<br>*NOTE: the first version is whack, instead go with the second approach right above the head "Chebychev's Inequality" on pg 14211, the one that involves representing a Bernoulli variable as a sum of Bernoulli trials*<br><br>pg 14211
State and prove Chebychev's inequality.<br>	pg 14212<br><br>For any a > 0, Pr(|X-E[X]| ≥ a) ≤ Var[X]/a<sup>2</sup>.<br><br><br>
Give a simple closed-form expression for an upper bound on the following probability: <br>Pr(|X-E[X]| ≥ t*σ[X])<br><br><br>	pg 14212<br><br>1/t<sup>2</sup><br><br>This can be obtained by plugging t*σ[X] in for a in Chebychev's inequality.<br><br>
Give a simple closed-form expression for the following probability: Pr(|X-E[X]| ≥ t*E[X])<br><br><br>	pg 14212<br><br>Var[X]/(t<sup>2</sup>*(E[X])<sup>2</sup>)<br><br>you can obtain this by plugging (t*E[X]) in for a in Chebychev's inequality.<br><br>
Use Chebychev's inequality to bound the probability of obtaining more than 3n/4 heads in a sequence of n fair coin flips.<br><br>	<br>pg 14212/14213
Derive the variance of a geometric random variable with parameter p.	<br>pg 14214. NOTE: there's a much simpler way of deriving the second moment of our random variable near the bottom of pg 14214 and the top of pg 14215--ignore the stuff on pg 14213<br>
Let Y be a geometric random variable with parameter p. Derive a formula for Y's second moment using conditional expectations.	bottom of pg 14214/top of pg 14213<br>
Give the definition of <i>stochastic process</i>.	A stochastic process <b>X</b>={X(t): t ∈ T} is a collection of random variables.<br><br>pg 14316<br>
Give the definition of <i>discrete space process</i>.	A stochastic process {X(t) : t ∈ T} which, for all t ∈ T, X<sub>t</sub> assumes values from a countably infinite set.<br><br>pg 14316
What does it mean for a stochastic process to be finite?	A stochastic process {X(t) : t ∈ T} is finite if, for all t ∈ T, X<sub>t</sub> assume values from a finite set.<br><br>pg 14316<br>
What is a <i>discrete time process</i>?	A stochastic process {X(t): t ∈ T} for which T is countably infinite.<br><br>pg 14316<br>
Give the definition of <i>Markov chain</i>.	pg 14316, def 7.1<br><br>A discrete time stochastic process X<sub>0</sub>,X<sub>1</sub>,... is a Markov chain if<br><br>Pr(X<sub>t</sub>=a<sub>t</sub> | X<sub>t-1</sub> = a<sub>t-1</sub>, X<sub>t-2</sub> = a<sub>t-2</sub>,...,X<sub>0</sub>=a<sub>0</sub>) = Pr(X<sub>t</sub> = a<sub>t</sub> | X<sub>t-1</sub> = a<sub>t-1</sub>) = P<sub>a<sub>t-1</sub>,a<sub>t</sub></sub>.<br>
What is the Markov property?	The property that state X<sub>t</sub> depends on the previous state X<sub>t-1</sub> but is independent of the particular history of how the process arrived at state X<sub>t-1</sub>.<br><br>pg 14316 bottom / 14317 top<br>
If {x<sub>t</sub>} is a Markov chain, does that mean that X<sub>i</sub> is independent of X<sub>i-2</sub>,X<sub>i-3</sub>,... for all i ≥ 2?	No. It just means that the dependence is captured in the value of X<sub>i-1</sub>.<br><br>pg 14317 near top<br>
What is a <i>transition matrix</i> for a Markov chain?	pg 14317<br><br>A matrix for which the entry in the ith row and jth column is the transition probability P<sub>i,j</sub>, the probability of transition to state j when in state i.
What aspect of a Markov chain does <$>\overline{p}_i(t)</$> denote?<br><br>	The probability that the markov chain is in state i at time t.<br><br>pg 14317<br>
What does <br><$$>P_{i,j}^m</$$><br>denote? (related to markov chains)	pg 14317, near bottom<br><br>The probability that the chain transitions from state i to state j in m steps.<br><br>pg 154<br>
What does P<sup>(m)</sup> denote (related to Markov chains)?<br>	pg 14318 near top<br><br>The m-step transition probability matrix.
Derive a recursive formula for P<sup>(m)</sup>.	pg 14317/14318<br>
How are Markov chains represented using directed weighted graphs?	For each non-zero P<sub>i,j</sub>, put an edge from i to j having weight P<sub>i,j</sub>.<br><br>pg <br><br>pg 14318<br>
Consider this algorithm for solving 2-SAT:<br><br>1. Start with an arbitrary truth assignment.<br>2. Repeat up to 2mn<sup>2</sup> times, terminating if all clauses are satisfied:<br>  (a) Choose an arbitrary clause that is not satisfied.<br>  (b) Choose uniformly at random one of the literals in the    clause and switch the value of its variable.<br>3. If a valid truth assignment has been found, return it.<br>4. Otherwise, return that the formula is unsatisfiable.<br><br>Use a Markov chain model to bound the expected number of iterations before finding an assignment.<br>	pg 14319-14322
In Markov chains, what does it mean for a state i to be <i>accessible</i> from a state j.	pg 14327, def 7.2<br><br>There is some integer n ≥ 0 such that<br><$$>P_{i,j}^n > 0</$$><br><br>def 7.2
In Markov chains, what does it mean for two states i and j to communicate. What symbol do we use to denote this relation?	pg 14327, def 7.2<br><br>It means that i and j are accessible from each other. symbol: ↔
What does it mean for a Markov chain to be <i>irreducible</i>?<br>	It means all states belong to one communicating class.<br><br>pg 14327, def 7.3<br>
Consider the following statement:<br><br>A finite Markov chain is irreducible if and only if its graph representation is a strongly connected graph.<br><br>Prove or give a counterexample.	true. pretty trivial, really. pg 14327, lemma 7.4<br>
What does it mean for a state to be <i>recurrent</i>?	pg 14327<br><br><$$>Let\ r_{i,j}^t\ \mbox{denote the probability that, starting at state i, the first transition to state j occurs at time t}</$$><br><br>A state is recurrent if <$>\sum_{t \geq 1}r_{i,i}^t=1</$>.
What does it mean for a state in a Markov chain to be <i>transient</i>?<br>	pg 14327, def 7.4<br><br><$$>Let\ r_{i,j}^t\ \mbox{denote the probability that, starting at state i, the first transition to state j occurs at time t}</$$><br><br>A state is transient if <$>\sum_{t \geq 1}r_{i,i}^t<1</$>.<br><br>pg 164
What does it mean for a Markov chain to be recurrent?	pg 14327, def 7.4<br><br>Every state in the chain is recurrent.
What does it mean for a recurrent state to be <i>positive recurrent</i>?	pg 14328, def 7.5<br><br>Let h<sub>i,j</sub> denote the expected time to first reach j from state i. <br><br>A recurrent state i is positive recurrent if h<sub>i,i</sub> < ∞.
What does it mean for a recurrent state to be null recurrent.	pg 14328, def 7.5<br><br>It means that state is not positive recurrent. i.e. the summation representing the expected time to return to the state after leaving diverges.
Consider the following statement:<br><br>In a finite markov chain 1.) at least one state is recurrent; and 2.) all recurrent states are positive recurrent.<br><br>Prove or give a counterexample.<br>	true. pg 14328 lemma 7.5<br>
Consider the following statement:<br><br>In a finite markov chain 1.) at least one state is recurrent; and 2.) all recurrent states are null recurrent.<br><br>Prove or give a counterexample.	IMPOSTOR. of lemma 7.5 pg 14328
What does it mean for a state j in a discrete time Markov chain to be <i>periodic</i>?<br>	pg 14328, def 7.6<br><br>A state j in a discrete time Markov chain is periodic if there exists an integer Δ > 1 such that Pr(X<sub>t+s</sub> = j | X<sub>t</sub> = j) = 0 unless s is divisible by Δ. 
What does it mean for a discrete time Markov chain to be periodic?	At least one state in the chain is periodic.<br><br>pg 14335, def 7.6<br>
What does it mean for a state in a Markov chain to be ergodic?	It means that it is aperiodic and positive recurrent.<br><br>pg 14329 def 7.7
What does it mean for a Markov chain to be ergodic?	All of its states are ergodic.<br><br>pg 14329, def 7.7
Consider the following statement:<br><br>Any finite, irreducible, and aperiodic Markov chain is an ergodic chain.<br><br>Prove or give a counterexample.	true. col 7.6, pg 14329. TODO: ADD IMPOSTOR
<latex>~\\<br>Let $\mathbb M = (\mathbb M, \otimes, I)$ be a strict monoidal category and $\mathbb C$ a category. What is an $\mathbb M$\emph{-graded monad} on $\mathbb C$?<br></latex>	pg 11295/11296. Note that GM2 has its composition operators switched around.<br><br> 
<latex>~\\<br>Provide the definition of the monoidal category $\mbf{Inj} = (\mbf{Inj},+,0)$.<br></latex>	pg 11297, def 2.3<br><br>note that + is the restriction of the coproduct to sets representing natural numbers (i.e. finite ordinals)<br><br>
<latex>~\\<br>Let $V$ be a set, interpreted as the set of values that can be stored in one register. Provide the definition of the graded state monad with the set of values $V$.<br></latex>	pg 11297<br><br><latex>~\\<br>In the second bullet point, $V^f$ is used where $V^u$ is meant.\\~\\<br>The definition of $u \bullet \tau$ looks much more confusing than it is. Think of it as: if $u$ injects into a natural number in $m'$, use $\tau$ to compute the output; otherwise, use the input of type $\V^{m'}$ to compute the output.<br></latex><br>
<latex>~\\<br>Let $\mathbb C$ be a 1-category. How is the category $\mbf{Mnd}(\mathbb C)$ of monads on $\mathbb C$ defined? Note that this is a specialization of Street's definition, since he uses defines $\mbf{Mnd}(\mathbb C)$ for $\mathbb C$ a \emph{2}-\emph{category}.<br></latex>	pg 1129, def 2.6<br>
<latex>~\\<br>Let $\mathbb B$ and $\mathbb C$ be categories.<br>What is a $\mathbb B$-indexed monad on $\mathbb C$?<br></latex>	pg 11299, def, 2.7<br><br>
List five advantages of static factory methods over public constructors.<br>List two disadvantages.<br>	pg 17949-17953<br><br>
When a constructor has many optional parameters, how should we typically handle it? Should we use null to communicate absense of an optional parameter? Should we use the "JavaBeans" pattern?	No, use a builder.<br><br>pg 17954-17956<br><br>
Read "The Builder pattern is well suited to class hierarchies." section on pgs 17958-17959<br>	pg 17958<br>
What is a singleton? Why are they difficult to test? Give three approaches for implementing singletons in Java. What are the pros and cons of each approach?<br><br>	pg 17961
Look at the code on page 17970. Can you spot the "memory leak"?	pg 17970<br>
How are "weak references" created in Java, and why would someone create one?	pg 17972 "A third common source of memory leaks is listeners and other callbacks"<br>
If an class's objects encapsulate resources that require termination, how should we typically terminate them?	Implement AutoCloseable.<br><br>pg 17975<br><br>
