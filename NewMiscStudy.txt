<latex>~\\<br>Consider the coalgebra \emph{next} (1.4) given on page 9, right. Consider the following statement:\\~\\<br>The coalgebra \emph{next} : $A^\infty \to \{ \bot \} \cup A \times A^\infty$ from (1.4) is final among coalgebras of this type: for an arbitrary coalgebra $c : S \to \{ \bot \} \cup (A \times S)$ on a set $S$ there is a unique `behavior' function $beh_c : S \to A^\infty$ which is a homomorphism of coalgebras. That is, for each $x \in S$, bot<br>\begin{itemize}<br>\item if $c(x) = \bot$ then $\mathit{next}(beh_c(x)) = \bot$<br>\item if $c(x) = (a, x')$ then $\mathit{next}(beh_c(x)) = (a, beh_c(x'))$<br>\end{itemize}<br>Prove or disprove.<br></latex>	pg 10 / left, prop 1.2.1<br><br>
<latex>~\\<br>Let $A = \{ 0,1,2,3,4,5,6,7,8,9 \}$. Define a coalgebra of type $\mathbb R \to (A, \mathbb R)$ sending a real number to its decimal representation in $A^{\infty}$.<br></latex>	pg 10 bottom right / pg 11 top left<br>
<latex>~\\<br>Explain ``transition notation'' for reasoning about coalgebras: with respect to a coalgebra $c : S \to \{ \bot \} \cup (A \times S)$, for $x \in S$, what does $x \not \to$ mean? What does $x \overset{a}{\to} x'$ mean?<br></latex>	pg 11, bottom right corner (1.5)<br>*also read* pg 12, top left, which makes an interesting analogy to operational semantics.<br>
<latex>~\\<br>Use inference rules to define a function \emph{evens} which maps a colist $A^\infty$ to a colist of every other element (specifically, the even elements of the argument).<br></latex>	pg 12, bottom left.<br>
<latex>~\\<br>Define an function \emph{odds}, for taking the odd elements of a colist in $A^\infty$. <br>Also define functions \emph{evens} and \emph{tail}, having the obvious definitions. Prove that<br>$odds = evens \circ tail$ using coinduction.<br></latex>	pg 13 left, lemma 1.2.4<br><br>
<latex>~\\<br>Consider a function $merge : A^\infty \times A^\infty \to A^\infty$ defined using the following inference rules.<br>\begin{mathpar}<br>\inferrule<br>  {\sigma \not \to \\ \tau \not \to}<br>  {\mathit{merge}(\sigma,\tau) \not \to}<br>\and<br>\inferrule<br>  {\sigma \not \to \\ \tau \overset{a}{\to} \tau'}<br>  {\mathit{merge}(\sigma,\tau) \overset{a}{\to} merge(\sigma,\tau')}<br>\and<br>\inferrule<br>  {\sigma \overset{a}{\to} \sigma'}<br>  {\mathit{merge}(\sigma,\tau) \overset{a}{\to} merge(\tau,\sigma')}<br>\end{mathpar}<br>Provide an equivalent definition using coinduction.<br></latex>	remember that a coinductive definition a domain coalgebra paired with a coalgebra morphism into the final coalgebra.<br>pg 13, bottom right<br>
<latex>~\\<br>What do the symbols $\bigcirc_c$, $\square_c$, and $\lozenge_c$ mean?<br></latex>	pg 15, bottom left<br>
<latex>~\\<br>For a sequence coalgebra $c : S \to \{ \bot \} \cup (A \times S)$ with a predicate $P \subseteq S$ on its state space, how do we define the predicate $\bigcirc P \subseteq S$?<br></latex>	pg 15, top right<br>
<latex>~\\<br>What does it mean for a predicate P on a coalgebra state space to be an \emph{invariant}?<br></latex>	pg 15, top right<br>
<latex>~\\<br>Let $P \subseteq S$ be an arbitrary predicate on the state space $S$ of a sequence coalgebra. How do we define the predicate $\square P$?<br></latex>	pg 15, bottom right<br>
<latex>~\\<br>Let $P \subseteq S$ be an arbitrary predicate on the state space $S$ of a sequence coalgebra. How do we define the predicate $\lozenge P$?<br></latex>	pg 16, top left<br>
<latex>~\\<br>Let $c : S \to \{ \bot \} \cup (A \times S)$ be an arbitrary sequence coalgebra. Let $c^n : S \to \{ \bot \} \cup (A \times S)$ be its $n$th iteration, as defined on page 10, bottom left corner. Consider the following statement:\\~\\<br>For $P \subseteq S$, $x \in S$,<br>$$(\lozenge P)(x) \Leftrightarrow P(x) \vee (\exists n \in \mathbb N. \forall a \in A. \exists y \in S. c^n(x) = (a,y) \wedge P(y))$$<br>Prove or disprove.<br></latex>	pg 16 left, lemma 1.3.3<br>todo: add impostor?<br>
Read Example 1.3.4 on page 16<br>	<br>
<latex>~\\<br>We define $\mathit{Occ}(a) \doteq \lozenge(\{ y \in S \mid \exists y' \in S. c(y) = a(y'))$, where $c$ is a $A$-sequence coalgebra with state space $S$.<br>Look at the \emph{merge} function defined on page 15, bottom right. Consider for an element $a \in A$ the occurrence predicate $a \in (-) = Occ(a) \subseteq A^\infty$, for the final coalgebra $\mathit{next} : A^\infty \overset{\cong}{\to} \{ \bot \} \cup (A \times A^\infty)$ from proposition 1.2.1 on page 10 left. Consider the following statement:\\~\\<br>$$a \in \mathit{merge}(\sigma,\tau) \Leftrightarrow a\in \sigma \vee a\in \tau$$<br>Prove or disprove.<br></latex>	true. pg 16, bottom right<br>
<latex>~\\<br>How do we represent standard object-oriented classes as coalgebras? Let $S$ be the state space for such a ``coalgebraic class''. How do we define the next-time operator $\bigcirc$ on predicates of this state space?<br>What is a \emph{class invariant}? A \emph{safety property}? A \emph{liveness property}?<br></latex>	pg 17, bottom left / top right<br>
<latex>~\\<br>Provide the definition of the category $\mbf{SetsRel}$ of sets and relations.<br></latex>	pg 19 / top right<br>
<latex>~\\<br>Provide the definition of the `graph' functor $\mbf{Sets} \to \mbf{SetsRel}$.<br></latex>	pg 20 right / example 1.4.4 (4)<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category, with an endofunctor $F : \mathbb C \to \mathbb C$.<br>What is an $F$-coalgebra? What is a \emph{coalgebra structure}?<br></latex>	pg 21, def 1.4.5 (1)<br>
<latex>~\\<br>What is a \emph{coalgebra map}?<br></latex>	pg 21 left, def 1.4.5 (2)<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category and $F : \mathbb C \to \mathbb C$ an endofunctor. What does $\mbf{CoAlg}(F)$ denote?<br></latex>	pg 21 left, def 1.4.5 (3)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with finite coproducts $(0,+)$, and let $F$ be an arbitrary endofunctor $\mathbb C \to \mathbb C$. Consider the following statement:\\~\\ <br>The category $\mbf{CoAlg}(F)$ of $F$-coalgebras then also has finite coproducts.\\~\\<br>Prove or disprove.<br></latex>	true. pg 25 bottom right, prop 2.1.5.<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with products. What is the \emph{exponent} of two objects $X,Y \in \mathbb C$?<br></latex>	pg 27<br>
<latex>~\\<br>Given a set $X$, its powerset $\mathcal P(X)$ can be considered a \emph{complete boolean algebra}. What does this mean?<br></latex>	pg 27, top right<br>see also MiscStudy.pdf, pg 47 right
<latex>~\\<br>Given a relation $R$, what does $R^{\dagger}$ denote?<br></latex>	pg 27 right, "Reversal and composition are..."<br>
<latex>~\\<br>Explain how the relation reversal operator $(-)^{\dagger}$ can be used as a functor.<br></latex>	pg 27, bottom right.<br>
<latex>~\\<br>How is the powerset operator $X \mapsto \mathcal P(X)$ extended to a functor?<br></latex>	pg 27, bottom right "The powerset operator..."<br>
<latex>~\\<br>The standard powerset functor $\coprod_f$ and the \emph{inverse image} functor $f^{-1}$ are related in a special way. Explain.<br></latex>	pg 28 left, (2.15)
<latex>~\\<br>State the standard set-theoretic Axiom of Choice, and then give its categorical interpretation.<br></latex>	pg 28, right (top three paragraphs)<br>
<latex>~\\<br>Categorically, there is a ``dual version'' of the Axiom of Choice. State this axiom, and also explain why it is useful.<br></latex>	pg 28, right column.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is surjective, then so is $F(f) : F(X) \to F(Y)$.\\~\\<br>Prove or disprove.<br></latex>	pg 28 right, lemma 2.1.7 (1)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is injective, then so is $F(f) : F(X) \to F(Y)$.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! X must be non-empty!<br>pg 28, bottom right corner.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary functor. Consider the following statement:\\~\\<br>If $f : X \to Y$ is injective and $X$ is non-empty, then $F(f) : F(X) \to F(Y)$ is also injective.\\~\\<br>Prove or disprove.<br></latex>	true. pg 28, bottom right, lemma 2.1.7 (2)<br>
<latex>~\\<br>Provide the definition for the collection SPF of \emph{simple polynomial functors}.<br></latex>	pg 30, right, def 2.2.1 (1)<br><br>Viewing (2.3) at the bottom left of pg 23 might also be helpful.<br>
<latex>~\\<br>Provide the definition of the class EPF of \emph{exponent polynomial functors}.<br></latex>	pg 31, top left (2)<br><br><br>
<latex>~\\<br>Provide the definition of the class KPF of \emph{Kripke polynomial functors}.<br></latex>	pg 31<br>
<latex>~\\<br>Provide the definition of the class KPF of \emph{Kripke polynomial functions}.<br></latex>	pg 31, left (3)<br><br>
What are the practical benefits that motivate the usage of EPF and KPF over SPF?	pg 31, left, "We notice that exponents..."<br><br>EPF is justified very well, but here's my guess:<br>EPF may be useful for finite automata whose edges consist of sequences of symbols
<latex>~\\<br>Letting $F_1$ and $F_2$ be polynomial functors, Jacobs uses the notation $F_1 + F_2$ as a shorthand. Explain.<br></latex>	pg 31, left "The coproducts that are used..."
<latex>~\\<br>Letting $F$ be a polynomial functor what does Jacobs use $F^{\star}$ to denote?<br></latex>	pg 31, left, "The coproducts that are used..."<br>
<latex>~\\<br>What is an \emph{arity}? What is an \emph{arity functor}?<br></latex>	pg 31, right, def 2.2.2.<br><br>
<latex>~\\<br>Read proposition 2.2.3 on pg 31-32. (can we make a better card from this?)<br></latex>	pg 31<br>
Read section 2.2.1 on page 32<br>	pg 32<br>
Read section 2.2.2 starting in the bottom right corner of pg 32	pg 32/33<br>
How can the notion of a deterministic finite automata (DFA), as described, for example, in Sipser's book, be represented as a coalgebra?	pg 33, section 2.2.3<br>
<latex>~\\<br>How does Jacobs define the notion of a \emph{deterministic automata} coalgebraically?<br></latex>	pg 34 left<br>
<latex>~\\<br>When discussing deterministic finite automata, Jacobs uses the notation ``$x \downarrow b$''. What does this notation mean? What does the notation ``$(x \downarrow b) \overset{a}{\to} (x' \downarrow b')$'' mean?<br></latex>	pg 34 left<br>
There is one notable difference between the standard computation-theoretic presentation of deterministic finite automata and the coalgebraic presentation. What is it?	The coalgebraic version (by default) uses infinite state spaces.<br>pg 34 left, "Often one considers automata with a finite state space..."<br>
<latex>~\\<br>Given a deterministic automaton $S \overset{\langle \delta, \epsilon \rangle}{\longrightarrow} S^A \times B$, how do we define the function $\delta^*$? What does the notation ``$x \overset{\sigma}{\longrightarrow}^* y$'' mean?<br></latex>	pg 34 right, (2.22)<br>
<latex>~\\<br>For a state $x$ in a deterministic automaton, of a coalgebra $S \to S^A \times B$, <br>how do we define the $beh(x) : A^{\star} \to B$? <br></latex>	pg 34 right, (2.23)<br><br>
<latex>~\\<br>Read pg 34 right, from ``The behavior $beh(x) : A^{\star} \to B$ of a state...'', down to the end.<br></latex>	pg 34<br>
<latex>~\\<br>Why are $S \to \mathcal P(S)^A$ and $S \to \mathcal P(A \times S)$ equivalent coalgebraic representations for non-deterministic automata?<br></latex>	pg 35 bottom left<br><br>
<latex>~\\<br>What is Jacobs' favored representation for nondeterministic automata?<br></latex>	<latex>~\\<br>$S \to \mathcal P(S)^A \times B$\\<br>pg 35 right, 2.24, see also the text directly above this definition<br></latex><br>
<latex>~\\<br>When discussing non-deterministic automata, Jacobs uses the notation ``$x \overset{a}{\not \to}$''. What does this notation mean?<br></latex>	pg 35, bottom right<br>
<latex>~\\<br>Give coalgebraic definitions for the following:<br><br>\begin{itemize}<br>\item unlabelled transition system (UTS)<br>\item labelled transition system (LTS)<br>\item Kripke structure <br>\end{itemize}<br><br></latex>	pg 36 left
<latex>~\\<br>Consider two deterministic automata $X \to X^A \times B$ and $Y \to Y^A \times B$ as coalgebras. Consider the following statement:\\~\\<br>A function $f : X \to Y$ is a homomorphism of coalgebras if and only if<br>\begin{itemize}<br>\item $x \downarrow b \Longrightarrow f(x) \downarrow b$<br>\item $x \overset{a}{\longrightarrow} x' \Longrightarrow f(x) \overset{a}{\longrightarrow} f(x')$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 36, top right corner, lemma 2.2.4 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Consider two non-deterministic automata $X \to \mathcal P(X)^A \times B$ and $Y \to \mathcal P(Y)^A \times B$. Consider the following statement:\\~\\<br>A function $f : X \to Y$ is a homomorphism of coalgebras if and only if<br>\begin{itemize}<br>\item $x \downarrow b \Longrightarrow f(x) \downarrow b$<br>\item $x \overset{a}{\longrightarrow} x' \Longrightarrow f(x) \overset{a}{\longrightarrow} f(x')$<br>\item $f(x) \overset{a}{\longrightarrow} y \Longrightarrow \exists x' \in X.~~f(x') = y \wedge x \overset{a}{\longrightarrow} x'$<br>\end{itemize} <br>Prove or disprove.<br></latex>	pg 36 right, lemma 2.2.4 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Give a coalgebraic definition of the notion of a \emph{context-free grammar}.<br></latex>	pg 36, right, section 2.2.5<br>
<latex>~\\<br>How can the notion of a \emph{Turing machine} be described coalgebraically?<br></latex>	pg 37
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category with an endofunctor $F : \mathbb C \to \mathbb C$. What is a \emph{final $F$-coalgebra}?<br></latex>	pg 40 left, def 2.3.1<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A final coalgebra, if it exists, is determined up to isomorphism.\\~\\<br>Prove or disprove.<br></latex>	pg 40, lemma 2.3.2, bottom left<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A final coalgebra $\zeta : Z \to F(Z)$ is necessarily an isomorphism $\zeta : Z \overset{\cong}{\to} F(Z)$.\\~\\<br>Prove or disprove.<br></latex>	pg 40<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The powerset functor $\mathcal P : \mbf{Sets} \to \mbf{Sets}$ does not have a final coalgebra.\\~\\<br>Prove or disprove.<br></latex>	true. pg 41, corollary 2.3.4.<br>
<latex>~\\<br>Fix two sets $A$ and $B$ and consider the polynomial functor $id^A \times B$ whose coalgebras are deterministic automata. Consider the following statement:\\~\\<br>The final coalgebra of this functor is given by the set of behavior functions $B^{A^*}$, with structure<br>$$B^{A^*} \overset{\zeta = \langle \zeta_1, \zeta_2 \rangle}{\longrightarrow} ((B^{A^*})^A \times B)$$<br>given by<br>$$\zeta_1(\varphi)(a) = \lambda \sigma \in A^*.~\varphi(a \cdot \sigma)~~~\text{and}~~~\zeta_2(\varphi) = \varphi(\langle \rangle)$$<br>Prove or disprove.<br></latex>	true. pg 41, prop 2.3.5<br>todo: add impostor?<br>
<latex>~\\<br>Recall the final coalgebra $B^{A^*} \overset{\cong}{\to} (B^{A^*})^A \times B$ of the deterministic automata functor $id^A \times B$. How do we ``instantiate'' this functor (and final coalgebra) to represent streams? When we set $B \doteq 2 = \{0,1\}$ the carrier set for the final coalgebra becomes $\mathcal P(A^*)$, the set of languages over the alphabet $A$. How is the final coalgebra defined? (Hint: recall the definition of the $a$-derivative of a language.)<br></latex>	pg 42, left (2) at top<br>
Read pg 42 left, example 2.3.7 (and note that the definition of a taylor series is given shortly after the term is mentioned).<br>	pg 42
<latex>~\\<br>Consider the following statement:\\~\\<br>Each finite Kripke polynomial functor $\mbf{Sets} \to \mbf{Sets}$ has a final coalgebra.\\~\\<br>True or false? (no need to attempt a proof at this point)<br></latex>	true. pg 42, thm 2.3.9.<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each Kripke polynomial functor $\mbf{Sets} \to \mbf{Sets}$ has a final coalgebra.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! see corollary 2.3.4 on pg 41 left.<br>
Read the definition of "Cantor space" on MiscStudy pg 2110, then read example 2.3.10 on pg 43.<br>	pg 43<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category, with an endofunctor $F : \mathbb C \to \mathbb C$. What is an $F$-algebra? What is a \emph{homomorphism of $F$-algebras}?<br></latex>	pg 45, def 2.4.1<br>
<latex>~\\<br>Let $b : F(X) \to X$ be an algebra. What is an \emph{interpretation map} for $b$?<br></latex>	pg 45, top right corner.<br>
<latex>~\\<br>What is a \emph{single-sorted signature}? What is an \emph{algebra for} a single-sorted signature?<br></latex>	pg 45, right, "The functor F in the above definition..."
<latex>~\\<br>Read pg 45, right, paragraph: ``A rule of thumb is...'' near bottom.<br></latex>	pg 45<br>
<latex>~\\<br>Final coalgebras can be viewed intuitively as ``pure behavior''. What is the intuitive way to view initial algebras?<br></latex>	pg 45, bottom right paragraph, "Initial algebras are special...", spills to pg 46<br><br>
Read example 2.4.2 on page 46.<br>	pg 46<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An initial algebra $F(A) \to A$ of a functor $F : \mathbb C \to \mathbb C$ is an isomorphism $F(A) \overset{\cong}{\to} A$ in $\mathbb C$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 47, left, lemma 2.4.3<br>todo: add impostor?<br>
<latex>~\\<br>What is the initial algebra of the functor $F(X) \doteq 1 + X$?<br></latex>	pg 47, left, example 2.4.4, read the entire example<br>
<latex>~\\<br>Consider the following induction rule:\\~\\<br>\inferrule<br>  {P(0) \\ \forall n \in \mathbb N. P(n) \longrightarrow P(n+1)}<br>  {\forall n \in \mathbb N. P(n)}\\~\\<br>Formulate this categorically, and argue its validity using initiality.<br></latex>	pg 47, right column, top<br>
<latex>~\\<br>A-labelled binary trees may be constructed from two operations:\\~\\<br>\begin{tabular}{ll}<br>nil & for the empty tree \\<br>node($b_1$,$a$,$b_2$) & for the tree constructed from subtrees $b_1$, $b_2$, and label $a \in A$<br>\end{tabular}\\~\\<br>Thus, the associated signature functor is $T(X) = 1 + (X \times A \times X)$. The initial algebra for this functor is denoted $\mathit{BinTree}(A)$. Suppose we want to define two functions $iotrv : \mathit{BinTree}(A) \to A^\star$ and $potrv : \mathit{BinTree}(A) \to A^\star$, for inorder and preorder traversal, respectively. Show how this can be done formally via initiality.<br></latex>	pg 48, left<br>
<latex>~\\<br>For a fixed set $A$ we can form the functor $F(X) = 1 + (A \times X)$. The initial algebra of this functor is the set $A^\star$ of finite lists of elements of $A$, with algebra structure given by the empty list $\mathit{nil}$ and the prefix operation $\mathit{cons}$ in <br>\begin{center}<br>\begin{tikzcd}<br>1 + (A \times A^\star) \ar[r, "\lbrack nil \text{,} cons \rbrack" above, "\cong" below] & A^\star  <br>\end{tikzcd}<br>\end{center}<br>Define the length function $\mathit{len} : A^{\star} \to \mathbb Z$ via this initiality.<br></latex>	pg 48, top right, example 2.4.6<br>also read the part directly below this about defining an append function; you may decide to turn that into a card<br>
<latex>~\\<br>Assume the set $A$ carries a binary operation $+ : A \times A \to A$. We would like to use it do define an operation $\mathit{sum}$ on lists, namely as<br>$$\mathit{sum}(\langle a_1, \ldots, a_n \rangle, \langle b_1, \ldots, b_n \rangle) = \langle a_1 + b_1, \ldots, a_n + b_n \rangle$$<br>The problem is that this only works for lists of the same length! Hence, what we would like to have is a special type of lists of a certain length $n$. It can be formed as an inverse image:<br>$$\mathit{len}^{-1}(\{n\}) = \{ \sigma \in A^\star \mid \mathit{len}(\sigma) = n \}$$<br>Sketch how we can formalize such a datatype via initiality.<br></latex>	pg 49, left "In [45] a solution is given..."<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an arbitrary functor on a category $\mathbb C$. Assume an $F$-algebra $b : F(B) \to B$. Provide the definition of the functor $F^b$ how is this functor used to represent \emph{refinement types}?<br></latex>	pg 49, bottom left, spills to top right, spills further to the left column of pg 50<br><br>
<latex>~\\<br>What is the difference between \emph{inductive definitions} and \emph{recursive definitions}? State and prove the universal algebra version of the recursion theorem.<br></latex>	pg 50, right column<br>
Show that the left adjoint in a Galois connection preserves joins.	pg 53, proof tree at top right corner.<br>
What is an adjunction? (Give the "bijective correspondence + naturality" definition.)<br>	pg 53<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The obvious forgetful functor $U : \mbf{Prosets} \to \mbf{Sets}$ has both left and right adjoints.\\~\\<br>Prove or disprove.<br></latex>	pg 54, left, example 2.5.2<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$, the forgetful functor $U : \mbf{CoAlg}(F) \to \mbf{Sets}$ has a right adjoint. It sends a set $A$ to the carrier of the final coalgebra of the functor $A \times F(-)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 54, right column, spills onto pg 55. <br>Theorem 2.3.9 is stated on pg 42, right column<br><br>todo: add impostor?
<latex>~\\<br>Consider a natural transformation $\alpha : H \Rightarrow K$ as defined above, for two endofunctors $H,K : \mathbb C \to \mathbb C$. Consider the following statement:\\~\\<br>This $\alpha$ induces translation functors between the corresponding categories of algebras and coalgebras in commuting triangles:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(K) \ar[rr] \ar[dr] & & \ar[dl] \mbf{Alg}(H) \\<br> & \mathbb C & <br>\end{tikzcd}~~~<br>\begin{tikzcd}<br>\mbf{CoAlg}(K) \ar[rr] \ar[dr] & & \ar[dl] \mbf{CoAlg}(H) \\<br> & \mathbb C & <br>\end{tikzcd}\end{center}\\~\\<br>The (horizontal) functors are given on objects by pre-composition for algebras:<br>\begin{center}<br>$\ddisp{K(X)}{b}{X} \mapsto \ddisp{H(X)}{b \circ \alpha_X}{X}$<br>\end{center}<br>and similar post-composition for coalgebras (diagram elided). On morphisms these functors are simply<br>$f \mapsto f$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 56, left column<br>
<latex>~\\<br>Provide the definition for the category $\mbf{DA}$.<br></latex>	<latex>~\\<br>pg 56, right column, def 2.5.6<br><br>Note that the pargraph below gives what is possibly a more succint definition "The first two equations..."<br><br>It may be helpful to think of morphisms as subtyping relations $f : X \to Y$ describes a way to use $X$ where $Y$ is expected. The alphabet set is in a contravariant position in the DFA functor.<br></latex>~\\<br><br>
<latex>~\\<br>Provide the definition of the category $\mbf{DB}$.<br></latex>	pg 56, bottom right, def 2.5.7, spills onto pg 57<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>There is a behavior functor $\mathcal B$ and a realisation functor $\mathcal R$ in an adjunction.<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{DA} \ar[dd, "\mathcal B" left, bend right = 20] \\<br> \dashv \\<br>\mbf{DB} \ar[uu, "\mathcal R" right, bend right = 20]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 57, prop 2.5.8.<br>NOTE: prop 2.3.5 is on pg 41, left<br>
<latex>~\\<br>For automata $M_i = \langle X_i \overset{\langle \delta_i, \epsilon_i \rangle}{\longrightarrow} X_i^{A_i} \times B_i, x_i \in X \rangle$, we can construct new automata using combinators: e.g., $M_1 \mid M_2$ and $M_1 \otimes M_2$. Explain how both of these combinators work. Give their formal definitions.<br></latex>	pg 57, right column
<latex>~\\<br>Let $S : \mathbb A \to \mathbb A$, $T : \mathbb B \to \mathbb B$, and $F : \mathbb B \to \mathbb A$. Consider a natural transformation $\alpha : SF \Rightarrow FT$. Consider the following statement:\\~\\<br>$\alpha$ induces a lifting of $F$ to a functor $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(T) \ar[r, "\mbf{Alg}(F)"] & \mbf{Alg}(S) \\<br>(T(X) \overset{a}{\to} X) \ar[r, mapsto] & (SF(X) \overset{\alpha_X}{\longrightarrow} FT(X) \overset{F(a)}{\longrightarrow} F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	Theorem 2.5.9<br>Note that this theorem goes further than what is asked in the question: read the whole proof. Additionally, it might make sense to make another card for "adjunction preservation" part of the theorem.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor, and let $X,Y$ be a arbitrary sets. How is the mapping $Rel(F)$, which sends a relation $R \subseteq X \times Y$ to a `lifted' relation $Rel(F)(R) \subseteq F(X) \times F(Y)$ defined?<br></latex>	pg 64 left, def 3.1.1<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. What is a \emph{bisimulation} for coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$?<br></latex>	pg 64 right, def 3.1.2 (1). <br>NOTE: 2.15 is on pg 28 left<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. What is a \emph{congruence} for algebras $a : F(X) \to X$ and $b : F(Y) \to Y$?<br></latex>	pg 64 right, def 3.1.2 (2)<br><br>
<latex>~\\<br>What is a \emph{bisimulation equivalence}? What is a \emph{congruence equivalence}?<br></latex>	pg 65, top-left, definition 3.1.3<br>
<latex>~\\<br>When is a relation $R \subseteq X \times X$ a bisimulation with respect to the deterministic automaton coalgebra $\langle \delta, \epsilon \rangle : X \to X^A \times B$?<br></latex>	pg 65, left column, "Bisimulations for deterministic automata"<br>
<latex>~\\<br>When is a relation $R \subseteq X \times X$ a bisimulation with respect to the non-deterministic automaton coalgebra $\langle \delta, \epsilon \rangle : X \to \mathcal P(X)^A \times B$?<br></latex>	pg 65, bottom left / top right, "Bisimulations for Non-deterministic Automata"<br>
<latex>~\\<br>Recall that a monoid is a set $m$ carrying an associative operation $+ : M \times M \to M$ with a unit element $0 \in M$. These two operations $+$ and $0$, but not the relevant monoid equations, can be captured as an algebra:<br>\begin{center}<br>\begin{tikzcd}<br>1 + (M \times M) \ar[r, "\lbrack 0 \text{,} + \rbrack"] & M<br>\end{tikzcd}<br>\end{center}<br>of the functor $F(X) = 1 + (X \times X)$. What does it mean for a relation $R \subseteq X \times X$ to be a congruence on this algebra?<br></latex>	pg 65 right, "Congruences for monoids"
<latex>~\\<br>State the ``binary induction proof principle'' (no need to prove).<br></latex>	pg 66 left, theorem 3.1.4<br>
Read "Bisimulations as Congruences", pg 66 left column<br>	pg 66<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a polynomial functor $F$. What is the bisimilarity relation $\underline{\leftrightarrow}$ with respect to $c$ and $d$?<br></latex>	pg 66 left, def 3.1.5<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves the equality relation:<br>$$ Rel(F)(Eq(X)) = Eq(F(X))$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>Proof by induction on the structure of the functor $F$: I will add more cases each time I visit this card.<br>\begin{description}<br>\item[Base case $F(X) = X$:]~\\<br>$\mathit{Rel}(F)(\mathit{Eq}(X)) = \mathit{Eq}(X) = \mathit{Eq}(F(X))$<br>\item[Base case $F(X) = A$:]~\\<br>$\mathit{Rel}(F)(\mathit{Eq}(X)) = \mathit{Eq}(A) = \mathit{Eq}(F(X))$<br>\end{description}<br>pg 67 left, lemma 3.2.1 (1)<br></latex><br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting commutes with reversal of relations:<br>$$ Rel(F)(R^{\dagger}) = Rel(F)(R)^{\dagger}$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>By induction on the structure of $F$: more cases will be added each time I visit this card.<br>\begin{description}<br>\item[Case $F(X)=X$:]~\\<br>$\mathit{Rel}(F)(R^{\dagger}) = R^\dagger = (\mathit{Rel}(F)(R))^\dagger$<br><br>\item[Case $F(X)=A$:]~\\<br>$\mathit{Rel}(F)(R^\dagger) = \mathit{Eq}(A) = (\mathit{Eq}(A))^\dagger = (\mathit{Rel}(F)(R))^\dagger$<br><br>\end{description}<br>pg 67, left, lemma 3.2.1<br></latex><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting is monotone:<br>$$R \subseteq S \Longrightarrow Rel(F)(R) \subseteq Rel(F)(S)$$<br>Prove or disprove.<br></latex>	pg 67, left, lemma 3.2.1 (3)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves relation composition:<br>$$ Rel(F)(R \circ S) = Rel(F)(R) \circ Rel(F)(S)$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>Proof by induction. I'll add some more cases to this each time I view the card.<br>\begin{description}<br>\item[Base Case $F(X) = X$:]~\\<br>$\mathit{Rel}(F)(S \circ R) = S \circ R = \mathit{Rel}(F)(S) \circ \mathit{Rel}(F)(R)$<br>\item[Base Case $F(X) = A$:]~\\<br>$\mathit{Rel}(F)(S \circ R) = \mathit{Eq}(A) = \mathit{Eq}(A) \circ \mathit{Eq}(A) = <br>  \mathit{Rel}(F)(S) \circ \mathit{Rel}(F)(R)$<br>\end{description}~\\<br>pg 67, left, lemma 3.2.1 (4)<br></latex><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting preserves reflexivity, symmetry, and transitivity, and thus, if $R$ is an equivalence relation, then so is $Rel(F)(R)$\\~\\<br>Prove or disprove.<br></latex>	pg 67, left, lemma 3.2.1 (5)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor and let $f : X \to Z$ and $g : Y \to W$ be arbitrary functions. Consider the following statement:\\~\\<br>Relation lifting commutes with inverse images: for $R \subseteq Z \times W$, <br>$$Rel(F)((f \times g)^{-1}(R)) = (F(f) \times F(g))^{-1}(Rel(F)(R))$$<br>Prove or disprove.<br></latex>	pg 67 right, lemma 3.2.2 (1)<br>
<latex>~\\<br>Give the definition of the category $\mbf{Rel}$. <br></latex>	pg 68 left, def 3.2.3<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Relation lifting forms a functor:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Rel} \ar[r, "Rel(F)"] \ar[d] & \mbf{Rel} \ar[d] \\<br>\mbf{Sets} \times \mbf{Sets} \ar[r,"F \times F" below] & \mbf{Sets} \times \mbf{Sets} \\<br>\end{tikzcd}<br>\end{center}<br>where the vertical arrows are the obvious forgetful functors.<br></latex>	true. pg 68, Lemma 3.2.4 (1) (top right)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A bismulation is a $\mathit{Rel}(F)$-coalgebra in the category $\mbf{Rel}$. Similarly, a congruence is a $\mathit{Rel}(F)$-algebra in $\mbf{Rel}$.\\~\\<br>Prove or disprove.<br></latex>	pg 68, lemma 3.2.4 (2)<br>
<latex>~\\<br>For an arbitrary function $f : X \to Y$, what does $\mathit{Ker}(f)$ denote?\\~\\ <br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Ker}(f)) = \mathit{Ker}(F(f))$$<br>Prove or disprove.<br></latex>	true. pg 69 left,  (1)<br>
<latex>~\\<br>For a function $f : X \to Y$, what does $\mathit{Graph}(f)$ denote?\\~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Graph}(f)) = \mathit{Graph}(F(f))$$<br>Prove or disprove.<br></latex>	true. pg 69, top left, (2)<br>todo: add impostor?<br>
<latex>~\\<br>For functions $f : Z \to X$ and $g : Z \to Y$, what does $\mathit{Im}(\langle f , g \rangle)$ denote?\\~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:<br>$$\mathit{Rel}(F)(\mathit{Im}(\langle f , g \rangle)) = \mathit{Im}(\langle F(f), F(g) \rangle)$$<br>Prove or disprove.<br></latex>	pg 69, left (3)<br>todo: add impostor?<br>
<latex>~\\<br>Let $f : X \to Z$ and $g : Y \to Z$ be functions. What does $\mathit{Eq}(f,g)$ denote?\\~\\<br>Consider the following statement.<br>For any Kripke polynomial functor F, we have:<br>$$\mathit{Rel}(F)(\mathit{Eq}(f,g)) = \mathit{Eq}(F(f), F(g))$$<br>Prove or disprove.<br></latex>	pg 69 left (4)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be $F$-coalgebras. Consider the following statement:\\~\\<br>If $R \subseteq X \times Y$ is a bisimulation of $c$ and $d$, then so is $R^{\dagger} \subseteq Y \times X$.\\~\\<br>Prove or disprove.<br></latex>	pg 69, right, prop 3.2.6 (1)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, and $c' : X' \to F(X)$ be $F$-coalgebras. <br>Consider the following statement:\\~\\<br>If $R \subseteq X \times X'$ and $S \subseteq X' \times Y$ are bisimulations, then so is $(S \circ R) \subseteq X \times Y$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be $F$-coalgebras. Consider the following statement:\\~\\<br>If $R_i \subseteq X \times Y$ is a bisimulation for each $i \in I$, then so is $\bigcup_{i \in I} R_i \subseteq X \times Y$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (4)<br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, $c' : X' \to F(X')$, and $d' : Y' \to F(Y')$ be $F$-coalgebras. Consider the following statement:\\~\\<br>For homomorphisms $f : X \to Y$ and $f' : X' \to Y'$, if $R \subseteq Y \times Y'$ is a bisimulation, then so is $(f \times f')^{-1}(R) \subseteq X \times X'$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 69 right, prop 3.2.6 (4)<br>todo: add impostor?<br>
<latex>~\\<br>Let $c : X \to F(X)$, $d : Y \to F(Y)$, $c' : X' \to F(X')$, and $d' : Y' \to F(Y')$ be $F$-coalgebras. Consider the following statement:\\~\\<br>For homomorphisms $f : X \to Y$ and $f' : X' \to Y'$, if $R \subseteq X \times X'$ is a bisimulation, then so is $\coprod_{f \times f'}(R) \subseteq Y \times Y'$.\\~\\<br>Prove or disprove.<br></latex>	pg 69 right, prop 3.2.6 (5)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>An arbitrary function $f : X \to Y$ is a homomorphism of coalgebras if and only if its graph relation $Graph(f)$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 70 left, prop 3.2.7 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>The equality relation $\mathit{Eq}(X)$ on $X$ is a bisimulation equivalence. More generally, for a homomorphism $f : X \to Y$, the kernel relation $\mathit{Ker}(f)$ is a bisimulation equivalence.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (2)<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>For two homomorphisms $X \overset{f}{\leftarrow} Z \overset{g}{\rightarrow} Y$ the image of the tuple $\mathit{Im}(\langle f, g \rangle) \subseteq X \times Y$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (3)<br>todo: add impostor?
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$, $Y \overset{d}{\to} F(Y)$, and $Z \overset{e}{\to} F(Z)$ be three coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>For two homomorphisms $X \overset{f}{\rightarrow} Z \overset{g}{\leftarrow} Y$ the pullback relation $\mathit{Eq}(\langle f, g \rangle) \subseteq X \times Y$ is a bisimulation.\\~\\<br>Prove or disprove.<br></latex>	pg 70 left, prop 3.2.7 (4)<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor, with coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$. Consider the following statement:\\~\\<br>The bisimilarity relation $_c\underline{\leftrightarrow}_d \subseteq X \times Y$ is a bisimulation; it is the greatest among all bisimulations between $c$ and $d$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 70 right, prop 3.2.8 (1)<br>todo: add impostor?<br>
Explain the 'ket' notation for discussing multisets.	pg 86 left<br>
<latex>~\\<br>In the ``ket notation'' $m|x\rangle$, what sort of object is $m$?<br></latex>	it's an element of a commutative monoid<br>pg 86 left, near bottom<br><br>
<latex>~\\<br>For a commutative monoid $M = (M,+,0)$, how is the \emph{multiset functor} $\mathcal M_M : \mbf{Sets} \to \mbf{Sets}$ defined? Prove that it actually is a functor.<br></latex>	pg 86 right, def 4.1.1<br>be sure to define its values on both sets (objects) and functions (arrows)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The empty multiset and the join of multisets make the sets $\mathcal M_M(X)$ (for sets $X$) commutative monoids.\\~\\<br>Prove or disprove.<br></latex>	true. pg 87 left, lemma 4.1.2<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite set $V$, there are isomorphisms:\\<br>$\mathcal M_M(0) \cong 1$\\<br>$\mathcal M_M(1) \cong M$\\<br>$\mathcal M_M(V) \cong M^V$\\~\\<br>Prove or disprove.<br></latex>	pg 87 left, lemma 4.1.2<br>
Read example 4.1.3 on pg 87 left	pg 87 left<br>
<latex>~\\<br>How can we express the set of multivariate polynomials on variable set $X$, using the multiset functors $\mathcal M_{(-)}$? What about the set of univariate polynomials?<br></latex>	pg 87 right<br>
<latex>~\\<br>How is the (discrete probability) \emph{distribution functor} $\mathcal D : \mbf{Sets} \to \mbf{Sets}$ defined? Prove that it is actually a functor.<br></latex>	pg 87 right, def 4.1.5<br>
Read the three paragraphs in the top left part of pg 88<br>	pg 88, top left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For the distribution functor $\mathcal D$ there are the following isomorphisms:<br>$$\mathcal D(0) \cong 0$$<br>$$\mathcal D(1) \cong 1$$<br>$$\mathcal D(2) \cong [0,1]$$<br>Prove or disprove.<br></latex>	true. pg 88 left, lemma 4.1.6<br>todo: add impostor! would be super easy.<br>
<latex>~\\<br>Give the coalgebraic definition of a Markov chain.<br></latex>	pg 88, bottom left paragraph.<br>
<latex>~\\<br>Describe how the ``support function'' establishes a relationship between $\mathcal D(X)$<br>and $\mathcal P(X)$. The ``support function'' is actually a more than just a function: it's an instance of a common construct from category theory. Explain. <br></latex>	pg 89, bottom left corner.<br>it's a natural transformation.<br>
<latex>~\\<br>What does it mean for a monoid to be \emph{zerosum free} or \emph{positive}? What is the motivation for defining this concept?<br></latex>	pg 89 right, "A subtle point is that..."<br>down to<br>"This phenomenon that certain..."<br><br>
Take a gander at diagram (4.5) on pg 90 left.<br>	pg 90<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor and $R \subseteq X \times Y$ be an arbitrary relation, written via explicit functions $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$. Consider the following statement:\\~\\<br>The lifted relation $\mathit{Rel}(F)(R)$, considered as a set, is a \emph{retract} of $F(R)$: there<br>are functions $\alpha : \mathit{Rel}(F)(R) \to F(R)$ and $\beta : F(R) \to \mathit{Rel}(F)(R)$ with<br>$\beta \circ \alpha = id_{\mathit{Rel}(F)(R)}$. Moreover, these $\alpha$ and $\beta$ make the following triangle commute:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Rel}(F)(R) \ar[ddr, tail] \ar[rr, "\alpha" above, tail, bend left = 15] &                        & \ar[ll, "\beta" below, two heads, bend left = 15] \ar[ddl, "~~\langle F(r_1) \text{,} F(r_2) \rangle" right] F(R) \\<br>                          &                        & \\<br>                          & F(X) \times F(Y) &<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 72, top left<br>todo: add impostor?<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>A relation $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$ is a bisimulation for $c$ and $d$ if and only if $R$ is an \emph{Aczel-Mendler bisimulation}: $R$ itself is the carrier of some coalgebra $e : R \to F(R)$, making the legs $r_i$ homomorphisms of coalgebras, as in:<br>\begin{center}<br>\begin{tikzcd}<br>F(X) & \ar[l, "F(r_1)" above] F(R) \ar[r, "F(r_2)" above] & F(Y) \\<br>X \ar[u,"c" left] & \ar[u, "e" right] \ar[l, "r_1" below] R \ar[r, "r_2" below]  & Y \ar[u, "d" right]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex><br>	true. pg 72 right, theorem 3.3.2<br>
<latex>~\\<br>What is an \emph{Aczel-Mendler bisimulation}?<br></latex>	pg 72 right, in the statement of theorem 3.3.2<br>
<latex>~\\<br>Assume two elements $x \in X$ and $y \in Y$ of coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. The following statements are equivalent:<br>\begin{enumerate}<br>\item $x,y$ are bisimilar: $x~_c\underline{\leftrightarrow}_d~y$.<br>\item There is a span of coalgebra homomorphisms: a coalgebra $Z \overset{e}{\to} F(Z)$ and coalgebra homomorphisms $f : e \to c$ and $g : e \to d$ with $x = f(z)$ and $y = f(z)$ for some $z \in Z$.<br>\item $x,y$ are \emph{behaviorally equivalent}: there is a cospan of coalgebra homomorphisms, i.e., <br>a coalgebra $e : Z \to F(Z)$ and coalgebra maps $h : c \to e$ and $k : d \to e$ with $h(x) = k(y)$.<br>\end{enumerate}<br>Prove or disprove.<br></latex><br>	pg 73, theorem 3.3.3
<latex>~\\<br>Assume two elements $x \in X$ and $y \in Y$ of coalgebras $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. What does it mean for $x \in X$ and $y \in Y$ to be \emph{behaviorally equivalent}?<br>Prove or disprove.<br></latex>	pg 73, in statement of theorem 3.3.3<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>For a coalgebra $c : X \to F(X)$ and a bisimulation equivalence $R \subseteq X \times X$, the quotient set $X/R$ carries a unique quotient coalgebra structure, written as $c/R : X/R \to F(X/R)$, making the canonical quotient map $[-]_R : X \twoheadrightarrow X/R$ a homomorphism of coalgebras, as in <br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>F(X) \ar[r, "F(\lbrack - \rbrack_R)" above] & F(X/R) \\<br>X \ar[u, "c" left] \ar[r, "a_R" below, two heads] & \ar[u, "c/R" right] X/R  <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove<br></latex>	true. pg 73 right, Theorem 3.3.4 (1)<br>todo: add  impostor?<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A homomorphism of coalgebras $f : X \to Y$ from $X \overset{c}{\to} F(X)$ to $Y \overset{d}{\to} F(Y)$ is a monomorphism/epimorphism in the category $\mbf{CoAlg}(F)$ if and only if $f$ is an injective/surjective function between the underlying sets.\\~\\<br>Prove or disprove<br></latex>	true. pg 73 right, Theorem 3.3.4 (2)<br><br>the proof in the book seems like massive overkill to me.<br><br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Every homomorphism of coalgebras factors as an epimorphism followed by a monomorphism in $\mbf{CoAlg}(F)$. This factorisation is essentially unique because of the following `diagonal-fill-in' property. For each commuting square of  coalgebra homomorphisms as below, there is a unique diagonal homomorphism making both triangles commute:<br>\begin{center}<br>\begin{tikzcd}<br>\bullet \ar[d] \ar[r, two heads] & \bullet \ar[d] \ar[dl, dashed] \\<br>\bullet \ar[r, tail] & \bullet<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove<br></latex>	true. pg 73 right, theorem 3.3.4 (3)<br>
<latex>~\\<br>Assume two algebras $a : F(X) \to X$ and $b : F(Y) \to Y$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>A relation $R \subseteq X \times Y$ is a congruence relation if and only if it carries a (necessarily unique) algebra structure $F(R) \to R$ itself, making the two legs $\langle r_1, r_2 \rangle : R \rightarrowtail X \times Y$ of the inclusion homomorphisms of algebras, as in<br>\begin{center}<br>\begin{tikzcd}<br>F(X) \ar[d,"a" left] & \ar[l, "F(r_1)" above] F(R) \ar[d] \ar[r, "F(r_2)"] & \ar[d, "b" right] F(Y) \\<br>X     &  \ar[l, "r_1" below] R \ar[r, "r_2" below]  & Y<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 75 right. theorem 3.3.5.<br>todo: add impostor?<br><br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an arbitrary endofunctor on $\mbf{Sets}$. Consider the following statement:\\~\\<br>If $q : X \twoheadrightarrow X/R$ is the quotient map of an equivalence relation $\langle r_1, r_2 \rangle : R \hookrightarrow X \times X$, then we have a coequaliser diagram:\\~\\<br>\begin{center}<br>\begin{tikzcd}<br>F(R) \ar[r, "F(r_1)" above, shift left = 1.2] \ar[r, "F(R_2)" below, shift right = 1.2] & F(X) \ar[r, "F(q)" above, two head] & F(X/R)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 76 left, lemma 3.3.6<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $R \subseteq X \times X$ be a congruence equivalence relation (i.e. both a congruence and an equivalence relation) on an algebra $F(X) \to X$. Consider the following statement:\\~\\<br>The quotient $X/R$ carries a unique algebra structure $a/R : F(X/R) \to X/R$ making the quotient map $q : X \to X/R$ a homomorphism of algebras.\\~\\<br>Prove or disprove.<br></latex>	pg 76 left, prop 3.3.7<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a (finite) polynomial functor which has a final coalgebra $\zeta : Z \overset{\cong}{\to} F(Z)$. Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be arbitrary coalgebras, with associated behavior homomorphisms $\mathit{beh}_{c} : X \to Z$ and $\mathit{beh}_d : Y \to Z$ given by finality. Consider the following statement:\\~\\<br>Two states $x \in X$ and $y \in Y$ are then bisimilar if and only if they have the same behavior:<br>$$x _c\underline{\leftrightarrow}_d y \Longleftrightarrow \mathit{beh}_c(x) = \mathit{beh}_d(y)$$<br>In particular, bisimilarity $_\zeta\underline{\leftrightarrow}_\zeta \subseteq Z \times Z$ on the final coalgebra is equality.\\~\\<br>Prove or disprove.<br></latex>	true. pg 77 left, theorem 3.4.1<br>
State and prove the "coinduction proof principle".	pg 77 right, corollary 3.4.2<br>todo: add impostor?<br>
<latex>~\\<br>What does it mean for a coalebra $c : X \to F(X)$ to be \emph{observable}?<br></latex>	pg 77 right, in corollary 3.4.3<br>
<latex>~\\<br>Consider two deterministic automata $\langle \delta_i, \epsilon_i \rangle : S_i \to S_i^A \times \{ 0, 1 \}$ with initial states $s_i \in S_i$, for $i = 1,2$. Consider the following statement:\\~\\<br>These states $s_1$ and $s_2$ are then equivalent if and only if they are bisimilar.\\~\\<br>Prove or disprove.<br></latex>	true. pg 77 right, corollary 3.4.4. <br>todo: add impostor<br>
<latex>~\\<br>We would like to view the concept of \emph{bisimulation} as a property of relations. From this perspective, which definition of bisimulation is preferable: the logical (relation lifting) or structural (Aczel-Mendler) one?<br></latex>	pg 75 left, item 1 (at top)<br>
<latex>~\\<br>Which definition of bisimulation is more general: the logical (relation lifting) or structural (Aczel-Mendler) one?<br></latex>	there isn't a clear choice: relation lifting is more "logically general", but it applies to a smaller class of functors<br>pg 75 left, items 2 & 3<br><br><br>
<latex>~\\<br>Under certain circumstances, the Aczel-Mendler approach to bisimulation reduces the notion of bisimulation to equality. What are these circumstances?<br></latex>	pg 75 left, item 4<br>
<latex>~\\<br>Define the set $\mathcal R(A)$ of regular languages over an alphabet $A$. Why does the coinduction proof principle imply that for $L,K \in \mathcal R(A)$,<br>$$L = K \Leftrightarrow \text{there is a bisimulation } R \subseteq \mathcal R(A) \times \mathcal R(A) \text{ with } R(L,K)$$<br>Prove that $(1 + a)^* = a^*$ using this prinicple.<br></latex>	pg 78 right
Read example 2 on pg 79-80<br>	pg 79-80<br>
<latex>~\\<br>Consider a machine that provides 1 and 2 euro coins in exchange for 5 and 10 euro bills. How can we describe the behavior of this machine coalgebraically?<br></latex>	pg 80 right / pg 81 left<br>
From a coalgebraic perspective, what is a <i>process</i>?	pg 81 left, near bottom<br>
Read section 3.5.1 on pg 81 right<br>	pg 81, right<br>
How do we define the <i>null process</i> coalgebraically?	<latex>~\\<br>pg 82 left, ``The Null Process''\\<br>remember that $\zeta_A$ is the final coalgebra of $F(X) = \mathcal P_{fin}(X)^A$.<br></latex>
<latex>~\\<br>How do we define the \emph{sum} of two processes coalgebraically?<br></latex>	pg 82 left, "Sum of Two Processes"<br>
Is the process summation operator a semilattice join? Why or why not?	it is. pg 82 left, "Sum of two processes" near bottom of section
<latex>~\\<br>Given a process $z \in Z_A$ and an action $b \in A$ there is a process $b \cdot z$ which first performs $b$ and then continues with $z$. How does one define this ``action prefixing'' coalgebraically?<br></latex>	pg 82 left, "Prefixing of actions", spills onto right column<br>
<latex>~\\<br>Consider the coalgebra representing a machine that translates 10 and 5 euro bills into 1 and 2 euro coins, depicted in figure 3.1 on pg 81 left. Prove that it satisifies equation 3.5 shown on pg 81 right. Note that this equation uses the process prepend and sum operators, as well as the 0 process; if you can't remember how these are defined, see their definitions on pg 82.<br></latex>	pg 82, example 3.5.1<br>pg 83 (figure 3.2: it's sideways, so you may want to open in Okular and go view -> rotate right,<br>         note that s<sub>10</sub> on the first line should actually be s<sub>0</sub>)<br>
<latex>~\\<br>The \emph{basic process algebra} is a bialgebraic formalization of processes. Give the involved algebra and coalgebra. <br></latex>	pg 82 "3.5.2 Simple Process Algebra", spills onto the right column of the next page (the figure in the left column is related to a previous section and can be ignored)<br><br>note that this uses the notions of "null process", "process summation", and "prefixing", defined on pg 82 left<br><br>
<latex>~\\<br>Let $\Sigma_A$ be the functor underlying the algebra for the basic process algebra over action set $A$. How can we construct the initial $\Sigma_A$-algebra?<br></latex>	It's the free algebra on the empty set<br>pg 83, bottom half of page<br>
<latex>~\\<br>Let $P_A$ be the initial algebra for the basic process algebra on action set $A$. Let $Z_A$ be the final coalgebra for the basic process algebra on action set $A$. Then by initiality and finality we obtain:<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\Sigma_A(P_A) \ar[d, "\alpha" left, "\cong" right] \ar[r, "\Sigma_A(\mit{int}_\alpha)" above] & \Sigma_A(Z_A) \ar[d, "\xi" right] & & \mathcal P_{fin} (P_A)^A \ar[r, "\mathcal P_{fin}(\mit{beh}_\beta)^A"] & \mathcal P_{fin}(Z_A)^A \\<br>P_A \ar[r, "\mit{int}_\alpha" below, dashed] & Z_A & & P_A \ar[u, "\beta" left] \ar[r, "\mit{beh}_\beta" below, dashed] & \ar[u, "\cong" left, "\zeta" right] Z_A<br>\end{tikzcd}<br>\end{center}<br>where $\xi$ is defined (though not named) on page 82 left, and $\beta$ is defined on pg 83, bottom right.<br>Consider the following statement:\\~\\<br>These two maps are equal, so that $\mit{int}_\alpha = \mit{beh}_\beta : P_A \to Z_A$ is a `map of bialgebras' commuting with both the algebra and coalgebra structures. This proves in particular that the behavioral semantics $\mit{beh}_\beta$ of processes is compositional: it commutes with the term-forming operations.\\~\\<br>Prove or disprove.<br></latex>	true. pg 84 left<br><br>todo: add impostor?<br>
<latex>~\\<br>Let $P_A$ be the initial algebra for the basic process algebra on action set $A$. Let $Z_A$ be the final coalgebra for the basic process algebra on action set $A$. Then by initiality and finality we obtain:<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\Sigma_A(P_A) \ar[d, "\alpha" left, "\cong" right] \ar[r, "\Sigma_A(\mit{int}_\alpha)" above] & \Sigma_A(Z_A) \ar[d, "\xi" right] & & \mathcal P_{fin} (P_A)^A \ar[r, "\mathcal P_{fin}(\mit{beh}_\beta)^A"] & \mathcal P_{fin}(Z_A)^A \\<br>P_A \ar[r, "\mit{int}_\alpha" below, dashed] & Z_A & & P_A \ar[u, "\beta" left] \ar[r, "\mit{beh}_\beta" below, dashed] & \ar[u, "\cong" left, "\zeta" right] Z_A<br>\end{tikzcd}<br>\end{center}<br>where $\xi$ is defined (but not named) on pg 82 left, and $\beta$ is defined on pg 83, bottom right.<br>Consider the following statement:\\~\\<br>The bisimilarity relation $\underline{\leftrightarrow}$ on the set $P_A$ of process terms is a congruence.\\~\\<br>Prove or disprove.<br></latex>	pg 84 left, proposition 3.5.3<br>
<latex>~\\<br>What is a \emph{pullback}? What is a \emph{weak pullback}?<br></latex>	pg 91 left, def 4.2.1 (1)<br>
<latex>~\\<br>What does it mean for a functor to be \emph{pullback preserving}? What does it mean for a functor to be \emph{weak pullback preserving}?<br></latex>	pg 91 left, def 4.2.1 (2)<br>
<latex>~\\<br>Concretely, what is the pullback of two maps $X \overset{f}{\to} Z \overset{g}{\leftarrow} Y$ in the category of sets?<br></latex>	pg 91, top right<br>
<latex>~\\<br>How do we represent the inverse images of a predicate $P$ on $Y$ with respect to a map $h : X \to Y$?<br></latex>	pullbacks. pg 91 right.
<latex>~\\<br>How do we frame the notion of \emph{monomorphisms} in terms of weak pullbacks? Prove your answer.<br></latex>	pg 91 right, lemma 4.2.2 near bottom<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Weak pullback preserving functors preserve monos.\\~\\<br>Prove or disprove.<br></latex>	pg 91 right, lemma 4.2.2, spills onto next page.<br><br>
<latex>~\\<br>Assume a category $\mathbb C$ with pullbacks, and a weak-pullback-preserving functor $F : \mathbb C \to \mathbb C$ with a final coalgebra $Z \overset{\cong}{\to} F(Z)$. Let $c : X \to F(X)$ and $d : Y \to F(Y)$ be coalgebras. Consider the following statement:\\~\\<br>The pullback relation on $X, Y$ in <br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Eq}(\mit{beh}_c, \mit{beh}_d) \ar[dr, phantom, "\lrcorner" very near start] \ar[d, tail] \ar[r] & Z \ar[d,"\langle id \text{,} id \rangle" right] \\<br>X \times Y \ar[r, "\mit{beh}_c \times \mit{beh}_d" below] & Z \times Z<br>\end{tikzcd}<br>\end{center}<br>is then the greatest Aczel-Mendler bisimulation on coalgebras $c,d$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 92 left, theorem 4.2.4.<br>todo: add impostor?<br>
<latex>~\\<br>Assume a functor $F : \mathbb C \to \mathbb C$ that preserves ordinary pullbacks. Consider the following statement:\\~\\<br>If the category $\mathbb C$ has pullbacks, then so has the category of coalgebras $\mbf{CoAlg}(F)$.\\~\\<br>Prove or disprove. <br></latex>	true. pg 92 right, prop 4.2.5<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Every exponent polynomial functor $\mbf{Sets} \to \mbf{Sets}$ preserves pullbacks (and also weak ones). \\~\\<br>Prove or disprove.<br></latex>	pg 93 right, prop 4.2.6 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The powerset functors $\mathcal P$ and $\mathcal P_{\mit{fin}}$ preserve weak pullbacks.\\~\\<br>Prove or disprove.<br></latex>	true. pg 93 right, prop 4.2.6 (2)<br>todo: add impostor?<br>
<latex>~\\<br>What does it mean for a commutative monoid $M = (M,0,+)$ to be a \emph{refinement monoid}?<br></latex>	pg 94 right, def 4.2.7<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The multiset functors $\mathcal M_M$ preserve weak pullbacks.\\~\\<br>True or false? (No need to prove).<br></latex>	pg 94 right, paragraph above def 4.2.7<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The natural numbers with addition are a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	true. pg 95 top left<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each Abelian group is a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	true. pg 95 left, above lemma 4.2.8<br>todo: add impostor, perhaps by removing 'abelian'?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A commutative monoid is a positive refinement monoid if and only if the refinement property holds for each pair of numbers $(n,k) \in \mathbb N^2$. That is, if <br>$$r_1 + \cdots + r_n = c_1 + \cdots + c_k$$<br>then there is an $n \times k$ matrix $(m_{ij})_{i \leq n, j \leq k}$ with<br>\begin{mathpar}<br>r_i = \Sigma_j m_{ij} <br>\and<br>\text{and}<br>\and<br>c_j = \Sigma_i m_{ij}<br>\end{mathpar}<br>Prove or disprove.<br></latex>	true. pg 95 left, lemma 4.2.8<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A multiset functor $\mathcal M_M$ preserves weak pullbacks if and only if the commutative monoid $M$ is both positive and a refinement monoid.\\~\\<br>Prove or disprove.<br></latex>	pg 95 right, prop 4.2.9 at top<br>todo: add impostor?<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The distribution functor $\mathcal D : \mbf{Sets} \to \mbf{Sets}$ preserves weak pullbacks.\\~\\<br>Prove or disprove.<br></latex>	true. pg 96 left, prop 4.2.10<br>todo: add impostor? (perhaps by removing 'weak'?)<br>
<latex>~\\<br>What is a \emph{subobject}?<br></latex><br>	pg 98 left.<br>
<latex>~\\<br>Let $U$ be a dcpo. What does it mean for a subset $U \subseteq D$ to be \emph{admissible}? Are the admissible subsets of a DCPO its subobjects in the category $\mbf{dcpo}$?<br></latex>	nope. pg 98 bottom left / top right<br>
<latex>~\\<br>A \emph{logical factorisation system} in a category $\mathbb C$ consists of two components: a collection of<br>`abstract monos' $\frak M \subseteq \mathbb C_1$ and a collection of `abstract epis' $\frak E \subseteq \mathbb C_1$. What seven properties must this pair of collections satisfy to be considered a logical factorisation system?<br></latex>	pg 98 right, def 4.3.2<br>note that point 1 is really two properties, which is why the card says 'seven' rather than 'six'.<br><br>
<latex>~\\<br>For a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$, define the following:<br>\begin{itemize}<br>\item the category $\mit{Pred}(\mathbb C)$ of predicates in $\mathbb C$<br>\item the category $\mit{Rel}(\mathbb C)$ of relations in $\mathbb C$ (provided that $\mathbb C$ has binary products) <br>\end{itemize}<br></latex>	pg 99 bottom left / top right, def 4.3.3<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>Each map $f : X \to Y$ in $\mathbb C$ gives rise to a pullback functor $f^{-1} : \mit{Pred(Y)} \to \mit{Pred}(X)$, using diagram (4.8). Similarly, each pair of maps $f_1 : X_1 \to Y_1$. $f_2 : X_2 \to Y_2$ gives rise to a pullback functor $(f_1 \times f_2)^{-1} : \mit{Rel}(Y_1,Y_2) \to \mit{Rel}(X_1,X_2)$. In this way we get two functors:<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb C^{\mit{op}} \ar[r, "\mit{Pred}(-)" above] & \mbf{PoSets} & \text{and} & (\mathbb C \times \mathbb C)^{op} \ar[r, "\mit{Rel}(-)" above] & \mbf{PoSets}<br>\end{tikzcd}<br>\end{center}<br>Is this statement true?<br></latex>	Yes. pg 99, bottom right, lemma 4.3.4 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The posets $\mit{Pred}(X)$ and $\mit{Rel}(X_1,X_2)$ have finite meets $\top, \wedge$.\\~\\<br>Prove or disprove.<br></latex>	pg 100, top left, (2)<br>(proof is at the bottom left of the page)<br><br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Define $\top_X \doteq \xdisp{X}{mapsto}{\mit{id}}{X}$.<br>Consider the following statement:\\~\\<br>The mapping $X \mapsto \top_X$ yields a truth functor $\top : \mathbb C \to \mit{Pred}(\mathbb C)$ that is a right adjoint to the forgetful functor in<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d, bend right = 30] \\<br>\mathbb C \ar[u, phantom, "\dashv"] \ar[u, "\top" right, bend right = 30]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 100 left, (3)<br>todo: add impostor?
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The truth functor $\top : \mathbb C \to \mit{Pred}(\mathbb C)$ has a right adjoint, mapping a predicate $(U \mapsto X)$ to its domain $U$.\\~\\<br>Prove or disprove.<br></latex>	pg 100 left, (4)<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\frak M, \frak E)$. Consider the following statement:\\~\\<br>Each map $f : X \to Y$ and each pair of maps $f_1 : X_1 \to Y_1$, $f_2 : X_2 \to Y_2$ in $\mathbb C$ give rise to functors between posets:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(X) \ar[r, "\coprod_f" above] & \mit{Pred}(Y) & & \mit{Rel}(X_1,X_2) \ar[r, "\coprod_{f_1 \times f_2}" above] & \mit{Rel}(Y_1, Y_2) <br>\end{tikzcd}<br>\end{center}<br>They are defined via factorisations: $\coprod_{f}(m) = \frak m(f \circ m)$ and $\coprod_{f_1 \times f_2}(r) = \frak m((f_1 \times f_2) \circ r)$ in<br>\begin{center}<br>\begin{tikzcd}<br>U \ar[d, "m" left, mapsto] \ar[r] & \coprod_f(U) \ar[d, "\coprod_{f}(m)" right, mapsto] & & R \ar[d, "r = \langle r_1 \text{,} r_2 \rangle" left, mapsto] \ar[r] & \ar[d,"\coprod_{f_1 \times f_2}(r)" right, mapsto] \coprod_{f_1 \times f_2}(R) \\<br>X \ar[r,"f" below] & Y & & X_1 \times X_2 \ar[r, "f_1 \times f_2" below] & Y_1 \times Y_2<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 100, bottom right, prop 4.3.5 (1)<br>todo: add impostor?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The functors $\coprod$ are left adjoints to the pulback functors from lemma 4.3.4 (1) on pg 99.\\~\\<br>Prove or disprove.<br></latex><br>	true. pg 101 left.<br>todo: add impostor? (right adjoint, maybe?)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each object $X \in \mathbb C$ the equality relation $\mit{Eq}(X) \in \mit{Rel}(X,X)$ is defined by factoring the diagonal $\Delta = \langle id, id \rangle : X \rightarrowtail X \times X$, in <br>\begin{center}<br>\begin{array}{lll}<br>\mit{Eq}(X) & = & \coprod_{\langle id, id \rangle}(\top_X) \\<br>                  &    & \frak{m}(\langle id, id \rangle)  <br>\end{array}~~~~~~<br>i.e.~~~~~~<br>\begin{tikzcd}<br>X \ar[r] \ar[dr, "\langle id \text{,} id \rangle~~~~" below] & \mit{Eq}(X) \ar[d, "\frak m(\langle id \text{,} id \rangle) = \mit{Eq}(X)", mapsto] \\<br>           & X \times X<br>\end{tikzcd}<br>\end{center}<br>Here we deliberately overload the notation $\mit{Eq}(X)$. This equality forms a functor in<br>\begin{center}<br>\begin{tikzcd}<br> & \mit{Rel}(\mathbb C) \ar[d, "\mit{cod}" right] \\<br>\mathbb C \ar[ur, "\mit{Eq}(-)~~~~" above] \ar[r, "\langle id_{\mathbb C} \text{,} id_{\mathbb C}\rangle" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>If diagonals $\Delta = \langle id, id \rangle : X \rightarrowtail X \times X$ are in the set $\frak M$ of abstract monos, then $\mit{Eq}(X)$ is equal to this diagonal, and `internal' equality in our predicate logic and `external' equality coincide, in the sense that for two parallel maps $f,g : Y \to X$ one has<br>\begin{center}<br>\begin{array}{lll}<br>\text{f,g are internally equal} & \overset{\mit{def}}{\Leftrightarrow} & \top \leq \mit{Eq}(f,g) = \langle f,g \rangle^{-1}(\mit{Eq}(X)) \\<br> & \Leftrightarrow & f = g \\<br> & \overset{\mit{def}}{\Leftrightarrow} & f,g \text{ are externally equal} <br>\end{array}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 101 left (3)<br>todo: add impostor?<br>
<latex>~\\<br>Give the definition of the logical factorization system in the category $\mbf{SetsRel}$. Is internal equality equal to external equality in this category?<br></latex>	pg 103 left<br>
<latex>~\\<br>Give the definition of the factorization system for $\mbf{Vect}$, the category of finite-dimensional vector spaces over $\mathbb R$ and linear transformations between them.<br></latex>	pg 103 left, (2) near bottom<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$ and an arbitrary endofunctor $F : \mathbb C \to \mathbb C$. How do we define the functor $\mit{Rel}(F)$?<br></latex>	pg 107 left, def 4.4.1<br>
<latex>~\\<br>For two relations $\langle r_1, r_2 \rangle : R \mapsto X \times Y$ and $\langle s_1, s_2 \rangle : S \mapsto Y \times Z$, how do we define their relational composition $S \circ R \mapsto X \times Z$ categorically?<br></latex>	pg 107 right, fig (4.11)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and\\~\\<br>The functor $\mit{Rel}(F)$ preserves the order $\leq$ between relations (on the same objects): $R \leq S \Longrightarrow \mit{Rel}(F)(R) \leq \mit{Rel}(F)(S)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left, (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and\\~\\<br>The functor $\mit{Rel}(F)$ preserves reversal (also called daggers) $(-)^{\dagger}$ of relations, where<br>$$(R \overset{\langle r_1, r_2 \rangle}{\mapsto} X \times Y)^{\dagger} = (R \overset{\langle r_2, r_1 \rangle}{\mapsto} Y \times X)$$\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left, (2)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and we have the inequality $\mit{Eq}(F(X)) \leq \mit{Rel}(F)(\mit{Eq}(X))$.\\~\\<br>Additionally, we have the equality $\mit{Eq}(F(X)) = \mit{Rel}(F)(\mit{Eq}(X))$ in case either<br>\begin{itemize}<br>\item Diagonals are in $\frak M$, or<br>\item $F$ preserves abstract epis, i.e. $e \in \frak E \Longrightarrow F(e) \in \frak E$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 108 left, (3)<br>todo: add impostor? (remove the conditions on the equality)
<latex>~\\<br>Consider the following statement:\\~\\<br>Relation lifting forms a functor in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Rel}(\mathbb C) \ar[d] \ar[r,"\mit{Rel}(F)" above] & \ar[d] \mit{Rel}(\mathbb C) \\<br>\mathbb C \times \mathbb C \ar[r, "F \times F" below] & \mathbb C \times \mathbb C<br>\end{tikzcd}<br>\end{center}<br>and we have the inequality $\mit{Rel}(F)(S \circ R) \leq \mit{Rel}(F)(S) \circ \mit{Rel}(F)(R)$ if $F$ preserves abstract epis.\\~\\<br>Prove or disprove.<br></latex>	true. pg 108 left (4)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\mathcal M, \mathcal E)$. There are obvious forgetful functors that map predicates and relations to their carriers:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Pred}(\mathbb C) \ar[d] & U \mapsto X \ar[d, mapsto] & & \mit{Rel}(\mathbb C) \ar[d] & R \mapsto X_1 \times X_2 \ar[d, mapsto] \\<br>\mathbb C & X & & \mathbb C \times \mathbb C & (X_1, X_2)<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>These forgetful functors are fibrations.\\~\\<br>Prove or disprove.<br></latex>	true. it's not in the book, but it's not hard to prove. Splittings are pullbacks. Seems like a subcategory of the arrow category, and a subfibration of the codomain fibration.<br>inspired by the text near pg 100 left<br>
<latex>~\\<br>Let $(\frak M, \frak E)$ be a logical factorisation system on a category $\mathbb C$, where $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:\\~\\<br>In this case the lifting $\mit{Rel}(F) : \mit{Rel}(\mathbb C) \to \mit{Rel}(\mathbb C)$ of a functor $F : \mathbb C \to \mathbb C$ preserves reversals $(-)^{\dagger}$, equality, and coproducts $\coprod$. Moreover,<br>if $F$ preserves weak pullbacks, then $\mit{Rel}(F)$ preserves composition of relations and inverse images:<br>$$\mit{Rel}(F)(S \circ R) = \mit{Rel}(F)(S) \circ \mit{Rel}(F)(R)$$<br>$$\mit{Rel}(F)((f_1 \times f_2)^{-1}(S)) = (F(f_1) \times F(f_2))^{-1}(\mit{Rel}(F)(S))$$<br>Prove or disprove.<br></latex>	true. pg 109, prop 4.4.3<br>
<latex>~\\<br>Let $F$ be a weak-pullback-preserving endofunctor on a category $\mathbb C$ with a logical factorisation system $(\frak M, \frak E)$ satisfying $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:<br>$$R \text{ is an equivalence relation} \Longrightarrow \mit{Rel}(F)(R) \text{ is an equivalence relation.}$$<br>Writing $\mit{EqRel}(\mathbb C)$ for the category of equivalence relations $R \mapsto X \times X$ in $\mathbb C$, we get an obvious restriction of the relation-lifting functor $\mit{Rel}(F)$ to $\mit{EqRel}(F)$ in <br>\begin{center}<br>\begin{tikzcd}<br>\mit{EqRel}(\mathbb C) \ar[d] \ar[r, "EqRel(F)" above] & \ar[d] \mit{EqRel}(\mathbb C) \\<br>\mathbb C \ar[r, "F" below] & \mathbb C<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 110 left, corollary 4.4.4<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system $(\frak M, \frak E)$. What is a \textbf{relator} for a functor $F : \mathbb C \to \mathbb C$, also known as an $\mit{F}$-relator?<br></latex>	pg 110 left, def 4.4.5<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be a functor, where the category $\mathbb C$ carries a logical factorisation system $(\frak M, \frak E)$ with $\frak E \subseteq \mit{SplitEpis}$. Consider the following statement:\\~\\<br>$F$ has a relator if and only if $F$ preserves weak pullbacks. Moreover, this relator, if it exists, is uniquely determined.\\~\\<br>Prove or disprove.<br></latex>	true. pg 110 right, theorem 4.4.6.<br>
<latex>~\\<br>Consider a functor $F : \mathbb C \to \mathbb C$ on a category $\mathbb C$ with a logical factorisation system, together with the resulting lifting $\mit{Rel}(F) : \mit{Rel}(\mathbb C) \to \mit{Rel}(\mathbb C)$.\\~\\<br>In this setting, what is a \emph{logical F-bisimulation}? What is a \emph{logical F-congruence}?<br></latex>	pg 112 bottom left / top right, def 5.4.1<br><br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system. Consider the following statement:\\~\\<br>For each coalgebra $c : X \to F(X)$ the equality relation $\mit{Eq}(X) \mapsto X \times X$ on its state is a bisimulation. As a result, there is a lifting of the equality functor in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{CoAlg}(F) \ar[d] \ar[r, "\mit{Eq}(-)"] & \mbf{CoAlg}(\mit{EnRel}(F)) \ar[d] \\<br>\mathbb C \ar[loop below, "F" below] \ar[r, "\mit{Eq}(-)" below] & \mit{EnRel}(\mathbb C) \ar[loop below, "\mit{EnRel}(F)" below]<br>\end{tikzcd}<br>\end{center}<br>This lifiting sends<br>\begin{center}<br>$(X \overset{c}{\to} F(X)) \mapsto$<br>\left (<br>\begin{tikzcd}<br>\mit{Eq}(X) \ar[r] \ar[d, mapsto] & \mit{Eq}(F(X)) \leq \mit{Rel}(F)(\mit{Eq}(X)) \ar[d, start anchor={[xshift=-5ex]}, end anchor = {[xshift-1ex]}, mapsto] \ar[d, start anchor={[xshift = 5ex]}, end anchor = {[xshift=1ex]}, mapsto] \\<br>X \times X \ar[r, "c \times c" above] & F(X) \times F(X) <br>\end{tikzcd}<br>\right )<br>\end{center}<br>where we use that the functor $\mit{Rel}(F)$ and $\mit{EnRel}(F)$ coincide on endorelations.\\~\\<br>Prove or disprove.<br></latex>	true. pg 112 right, lemma 4.5.2<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, logical bisimulation implies Aczel-Mendler bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! This requires the side condition that abstract epis are split.<br>pg 113 left
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if abstract epis are split then logical bisimulation implies Aczel-Mendler bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, Aczel-Mendler bisimulation implies logical bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, the span-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the cospan-of-coalgebra-maps notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. this requires the side condition that the ambient category has pushouts.<br>pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the span-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the cospan-of-coalgebra-maps notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3.<br><br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the Aczel-Mendler notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. this is only true with the side condition that the functor F preserves weak pullbacks and that diagonals are in the set of abstract monos.<br><br>pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Suppose that the functor $F$ preserves weak pullbacks, and further suppose that the diagonals $\Delta_X = \langle id_X, id_X \rangle$ are in $\frak M$. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left) implies the Aczel-Mendler notion of bisimulation.\\~\\<br>Prove or disprove.<br></latex>	true. pg 113 left, theorem 4.5.3<br>
<latex>~\\<br>Read definition 4.5.1 on page 112 left. Consider the following statement:\\~\\<br>In the setting of this definition, with a logical factorisation system $(\frak M, \frak E)$ on a category $\mathbb C$, if $\mathbb C$ has pushouts then the Aczel-Mendler notion of bisimulation implies the cospan-of-coalgebra-maps notion of bisimulation (as described on pg 73 left).\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR. It should be possible to find a counterexample.<br>pg 113 left.<br>
<latex>~\\<br>Let $c,d : X \to \mathcal D(X)$ be two coalgebras of the distribution functor, with the same state space $X$. Consider the following statement:\\~\\<br>An equivalence relation $R \subseteq X \times X$ is then a logical bisimulation for $\mathcal D$-coalgebras $c,d$ if and only if $R$ is a `probabilistic bisimulation': for all $x,y \in X$,<br>$$ R(x,y) \Longrightarrow c(x)[Q] = d(y)[Q],~~~~\text{for each R-equivalence class } Q \subseteq X$$<br>where for $\varphi \in \mathcal D(X)$ and $U \subseteq X$ we write $\varphi[U] = \Sigma_{x \in U}~ \varphi(x)$.\\~\\<br>Prove or disprove.<br></latex>	pg 114 right, prop 4.5.4<br>
<latex>~\\<br>What is a \emph{monad}?<br></latex>	pg 130 left<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a monad $T$, coalgebras $X \to T(X)$ form a monoid, where $X$ is a fixed object.<br>For two coalgebras $c,d : X \to T(X)$ we define a `c then d' coalgebra $c \ocircle d$ as <br>$X \overset{c}{\longrightarrow} T(X) \overset{T(d)}{\longrightarrow} T^2(X) \overset{\mu_X}{\longrightarrow} T(X)$.\\~\\<br>Prove or disprove.<br></latex>	<latex>~\\<br>We just need to show that $- \ocircle -$ is a monoid operator. pg 130 top right.<br></latex><br>
Explain how the powerset functor (direct image version) is a monad. What are some variations on the powerset functor that are also monads?	pg 130 right, example 5.1.3<br>
<latex>~\\<br>Recall that coalgebras $X \to \mathcal P(X)$ of the powerset monad $\mathcal P -$ are unlabelled transition systems. What, then, is the intuitive interpretation of Klesli-composition of powerset coalgebras?<br></latex>	exactly what you would expect:<br>pg 130, bottom right
<latex>~\\<br>Explain how the distribution functor $\mathcal D$ forms a monad. What are the unit and multiplication of this monad? What, intuitively, is Klesli composition for this monad?<br></latex>	pg 131 left, item 4<br>
<latex>~\\<br>Let $M$ be a monoid. In what way does the functor $M \times (-) : \mbf{Sets} \to \mbf{Sets}$ form a monad?<br></latex>	pg 131 right, point 5<br>
Explain how the state monad works.	pg 131 right, point 6<br>
Explain how the continuation monad works.	pg 131 bottom right, point 7, spills onto pg 132<br>
Read exercise 2.2.7 on pg 38 right. Explain how the neighborhood functor is a special case of the continuation monad.	pg 131 bottom right
Explain how the semantics of Java statements can be represented as a monad.	pg 132, point 8<br>
<latex>~\\<br>Provide the definition of $\frak D : \mbf{Sets} \to \mbf{Sets}$, the Dijkstra monad on $\mbf{Sets}$.<br></latex>	pg 133 left, point 10<br>
<latex>~\\<br>Provide the definition of the Hoare monad $\mathcal H : \mbf{Sets} \to \mbf{Sets}$.<br></latex>	pg 133 left<br>
<latex>~\\<br>What is a \emph{semiring}? What is a \emph{morphism of semirings}?<br></latex>	pg 133 bottom right, def 5.1.4<br>
<latex>~\\<br>Let $S$ be a semiring. Consider the following statement:<br>The multiset functor $\mathcal M_S : \mbf{Sets} \to \mbf{Sets}$, taking multiplicities in $S$, is a monad, with unit and multiplication as for the distribution monad:<br>\begin{mathpar}<br>\eta(X) = 1 \! \mid \! x \rangle <br>\and<br>\text{and}<br>\and<br>\mu(\Sigma_i s_i \! \mid \! \varphi_i \rangle)(x) = \Sigma_i ~{s_i \cdot \varphi_i(x)}<br>\end{mathpar}<br>where $\varphi_i \in \mathcal M_S(X) = \{ \psi : X \to S \mid supp(\psi) \text{ is finite} \}$.<br></latex>	pg 134, lemma 5.1.5, lemma 5.1.5<br><br><br>
<latex>~\\<br>Let $M$ be a monoid. Consider the following statement:<br>The multiset functor $\mathcal M_M : \mbf{Sets} \to \mbf{Sets}$, taking multiplicities in $M$, is a monad.<br></latex>	IMPOSTOR. M must be a semiring for this to work. pg 134, lemma 5.1.5<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each adjunction $F \dashv G$ the endofunctor $GF$ is a monad, as depicted in<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb D \ar[d, "G"] \\<br>\mathbb C \ar[u, "F", bend left = 50, "~\dashv" right] \ar[loop below, "T = GF~\text{monad}"]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 134 right, lemma 5.1.6<br>
<latex>~\\<br>Let $T,S : \mathbb C \to \mathbb C$ be two monads on the same category. What is a \emph{map of monads} $\sigma : T \Rightarrow S$?<br></latex>	pg 134 right, def 5.1.7<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with coproducts $+$. Assume for each object $X$, the functor $X + F(-) : \mathbb C \to \mathbb C$ has an initial algebra, written as<br>\begin{center}<br>\begin{tikzcd}<br>X + F(F^*(X)) \ar[r, "\cong" below, "\alpha_X" above] & F^*(X) <br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>The mapping $X \mapsto F^*(X)$ forms a monad, that is the free one on the functor $F$, via a universal natural transformation $\theta : F \Rightarrow F^*$.\\~\\<br>Prove or disprove.<br></latex>	pg 134 right, prop 5.1.8<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorization system. Consider the following statement:\\~\\<br>A morphism in the category $\mit{EnRel}(\mathbb C)$ is a pair of arrows $c : X \to Y$ and $d : X \to Y$<br>making the following diagram commute:<br>\begin{center}<br>\begin{tikzcd}<br>R \ar[d, "", mapsto] \ar[r, dotted] & S \ar[d, mapsto] \\<br>X \times X \ar[r,"c \times d" below] & Y \times Y<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	Nope. Recall the pullback-based formulation of EnRel. It requires that c = d: they cannot be distinct.<br>pg 112 top right<br>
<latex>~\\<br>Let $T$ be a monad on a category $\mathbb C$. Provide the definition of the \emph{Kleisli} category $\mathcal K \ell(T)$.<br></latex>	pg 137 right, def 5.2.1
<latex>~\\<br>The Klesli category $\mathcal K \ell(\mathcal P)$, where $\mathcal P$ is the powerset functor, is a well known category. Explain.<br></latex>	It is SetsRel.<br><br>pg 138 top left.<br>
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>There is an adjunction<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell (T) \ar[d, "U" right, "\dashv" left] \\<br>\mathbb C \ar[u, bend left = 38, "J" left]<br>\end{tikzcd}<br>\end{center}<br>where\\~\\<br>\left \{ \begin{array}{l} U(Y) = T(Y) \\ U(f) = \mu \circ T(f) \end{array} \right ~ \\~\\<br>and\\~\\<br>\left \{ \begin{array}{l} J(X) = X \\ J(f) = \eta \circ f \end{array} \right ~ \\~\\<br>\text{Prove or disprove.}<br></latex>	true. pg 138, prop 5.2.2 (1)<br>TODO: add impostor<br>
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>If the monad $T$ comes as $T = HL$ from an adjunction $L \dashv H$ (as in lemma 5.1.6 on pg 134)<br>then there is a `comparison' functor $K$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell (T) \ar[rr, "K"] \ar[dr, "~U" above, "\dashv~~" left] & & \ar[dl,"H" right, bend left = 40, "\dashv~~~" above] \mathbb D \\<br> & \ar[ul, "J" below, bend left = 40] \mathbb C \ar[ur, "L~" above] \ar[loop below, "T = HL" right] & <br>\end{tikzcd}<br>\end{center}<br>where\\~\\<br>$\left \{ \begin{array}{l} K(Y) = L(Y) \\ K(f) = \varepsilon \circ L(f) \end{array} \right ~$ \\~\\<br>The functor comparison functor $K$ satisfies $K \circ J = L$ and $H \circ K = U$.\\~\\<br>Prove or disprove.<br></latex> 	true. pg 138, prop 5.2.2 (2)<br>todo: add impostor?
<latex>~\\<br>Let $T$ be a monad on an arbitrary category $\mathbb C$. Consider the following statement:\\~\\<br>The Kleisli category inheirts coproducts and coequalizers from $\mathbb C$ - if any - and $J : \mathbb C \to \mathcal K \ell (T)$ preserves them.\\~\\<br>Prove or disprove. <br></latex>	true. pg 138 left, prop 5.2.2 (3)<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be an arbitrary category with<br>\begin{itemize}<br>\item a mapping $\mathbb C \ni X \mapsto T(X) \in \mathbb C$, on objects only<br>\item a map $\eta_X : X \to T(X)$, for each $X \in \mathbb C$<br>\end{itemize}<br>Then consider the following statement:\\~\\<br>The following are equivalent.<br>\begin{enumerate}<br>\item The mapping $X \mapsto T(X)$ is functorial, $\eta$ is a natural transformation, and there is a natural transformation $\mu : T^2 \Rightarrow T$ making $(T, \eta, \mu)$ a monad.<br>\item There is a `Kleisli extension' operation $(-)^{\$}$ sending <br>\begin{mathpar}<br>X \overset{f}{\longrightarrow} T(Y) <br>\and<br>\text{to}<br>\and<br>T(X) \overset{f^{\$}}{\longrightarrow} T(Y)<br>\end{mathpar}<br>in such a way that the following equations hold<br>\begin{mathpar}<br>f^\$ \circ \eta = f \and \eta^\$ = id \and g^\$ \circ f^\$ = (g^\$ \circ f)^\$<br>\end{mathpar}<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 138, bottom right
<latex>~\\<br>Let $T : \mathbb C \to \mathbb C$ be a monad and $F : \mathbb C \to \mathbb C$ an ordinary endofunctor, both on the same category $\mathbb C$. What is a \emph{distributive law} or $\mathcal K \ell$\emph{-law} of $F$ over $T$? <br></latex>	pg 139 right, def 5.2.4<br>
<latex>~\\<br>Let $T : \mathbb C \to \mathbb C$ be a monad and $F : \mathbb C \to \mathbb C$ a functor. Consider the following statement:\\~\\<br>There is a bijective correspondence between<br>\begin{enumerate}<br>\item A distributive $\mathcal K \ell$-law $\lambda : FT \to TF$<br>\item a lifting of $F : \mathbb C \to \mathbb C$ to a functor $\mathcal K \ell (F) : \mathcal K \ell(T) \to \mathcal K \ell (T)$ in a commuting diagram:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal K \ell(T) \ar[r, "\mathcal K \ell(F)"] & \mathcal K \ell (T) \\<br>\mathbb C \ar[u, "J"] \ar[r, "F" below] & \mathbb C \ar[u, "J"] <br>\end{tikzcd}<br>\end{center}<br>\end{enumerate}<br>Prove or disprove.<br></latex>	pg 139 right, prop 5.2.5
<latex>~\\<br>Let $F$ be an endofunctor and $T$ a monad on a category $\mathbb C$, together with a distributive $\mathcal K \ell$-law $FT \Rightarrow TF$ of $F$ over $T$. Consider the following statement:\\~\\<br>The adjunction $J \dashv U$ between the Kleisli category $\mathcal K \ell(T)$ and $\mathbb C$ lifts to an adjunction $\mbf{Alg}(J) \vdash \mbf{Alg}(U)$ by Theorem 2.5.9 on page 58 left.\\~\\<br>Prove or disprove.<br></latex>	NOTE: this is a *corollary* to proposition 5.2.5 on pg 139 bottom right; understanding that proposition is very important context for understanding the corollary. The paragraph directly above this corollary statement is very important as well.<br><br>true. pg 140 bottom left / corollary 5.2.6.<br><br>todo: add impostor?<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For each weak-pullback-preserving functor $F : \mbf{Sets} \to \mbf{Sets}$ there is a distributive $\mathcal K \ell$-law $\triangledown : F \mathcal P \to \mathcal P F$ obtained by applying relation lifting to the reverse inhabitation relation $\ni \subseteq \mathcal P(X) \times X$. <br>This $\triangledown$ may be used to describe relation lifting: if, for an arbitrary relation $R \subseteq X \times Y$ we write $\hat{R} : X \to \mathcal P(Y)$ for the corresponding function, as in (2.16, pg 28 left), then the following triangle commutes:<br>\begin{center}<br>\begin{tikzcd}<br> & F \mathcal P(Y) \ar[dd, "\triangledown" right] \\<br>F(X) \ar[dr, "\widehat{\mit{Rel}(F)(R)}~~~~~~" below] \ar[ur, "F(\hat{R})~~~" above] & \\<br> & \mathcal P F(Y)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 140 right, lemma 5.2.7.<br>todo: add impostor?<br><br>
<latex>~\\<br>A weak-pullback-preserving functor $F : \mbf{Sets} \to \mbf{Sets}$ has two liftings: a `computational' one and a 'logical' one. Provide the definition of each.<br></latex>	pg 141 right, corollary 5.2.8<br>
<latex>~\\<br>What does it mean for a functor to be \emph{strong}? What does it mean for a monad to be strong?<br></latex>	pg 142 left column.<br>
<latex>~\\<br>What does it mean for a strong monad to be \emph{commutative}? With respect to commutative strong monads, what does $\mit{dst}$ denote?<br></latex>	pg 142, def 5.2.9 (3)<br>
<latex>~\\<br>Let $T$ and $S$ be monads. What does it mean for a map of monads $\sigma : T \Rightarrow S$ to be a \emph{strong map}?<br></latex>	pg 142 right, def 5.2.9 (4)
<latex>~\\<br>Provide the definition of the categories $\mbf{CMnd}(\mathbb C)$ and $\mbf{StMnd}(\mathbb C)$.<br></latex>	pg 142 left, below def 5.2.9
<latex>~\\<br>Consider the following statement:\\~\\<br>$\mbf{StMnd}(\mbf{Sets}) = \mbf{Mnd}(\mbf{Sets})$\\~\\<br>Prove or disprove.<br></latex>	pg 142 right, lemma 5.2.10<br>todo: add impostor? Maybe find some alternative category for sets where this equality does not hold?<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A monoid $M$ is commutative if and only if the associated monad $M \times (-) : \mbf{Sets} \to \mbf{Sets}$ is commutative.\\~\\<br>Prove or disprove.<br></latex>	pg 143, lemma 5.2.11 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A semiring $S$ is commutative if and only if the multiset monad $\mathcal M_S : \mbf{Sets} \to \mbf{Sets}$ is commutative.\\~\\<br>Prove or disprove.<br></latex>	pg 143 left, lemma 5.2.11 (2)<br>
<latex>~\\<br>Let $T : \mbf{Sets} \to \mbf{Sets}$ be a commutative monad, and $F : \mbf{Sets} \to \mbf{Sets}$ a simple polynomial functor. Consider the following statement:\\~\\<br>There is a distributive $\mathcal K \ell$-law $\lambda : FT \Rightarrow TF$\\~\\<br>Prove or disprove.<br></latex> 	pg 143 right, lemma 5.2.12<br><br>
<latex>~\\<br>Let $\mathbb C$ be a category with finite products and $T : \mathbb C \to \mathbb C$ a commutative monoid. Consider the following statement:\\~\\<br>The cartesian product then becomes a functor $\times : \mathcal K \ell (T) \times \mathcal K \ell (T) \to \mathcal K \ell (T)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 143 right, prop 5.2.13<br>todo: add impostor?<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor, on a category $\mathbb C$ with a logical factorisation system, which has an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$. Consider the following statement:\\~\\<br>Each logical congruence is reflexive. More precisely, suppose we have two arbitrary algebras $a : F(X) \to X$ and $b : F(Y) \to Y$ and a relation $\langle r_1, r_2 \rangle : R \mapsto X \times Y$. Assume this $R$ is a logical congruence, in the sense that the pair $(a,b)$ forms an algebra $\mit{Rel}(F)(R) \to R$ in the category $\mit{Rel}(\mathbb C)$ of relations. Then there is a map $\mit{Eq}(A) \to R$ in $\mit{Rel}(\mathbb C)$, namely:<br>\begin{center}<br>\begin{tikzcd}<br>\mit{Eq}(A) \ar[r, dashed] \ar[d, mapsto] & \ar[d, mapsto] R \\<br>A \times A \ar[r, "\mit{int}_a \times \mit{int}_b" below] & X \times Y<br>\end{tikzcd}<br>\end{center}<br>where $\mit{int}_a : A \to X$ and $\mit{int}_b : A \to Y$ are the algebra homomorphisms obtained by initiality.\\~\\<br>Prove or disprove.<br></latex>	true. pg 115, theorem 4.5.5.<br>todo: add impostor?<br>
<latex>~\\<br>Assume relation lifting preserves equality. Consider the following statement:\\~\\<br>The lifted equality functor $\mit{Eq}(-) : \mbf{Alg}(F) \to \mbf{Alg}(EnRel(F))$ preserves initial objects.\\~\\<br>Thus, if $F(A) \overset{\cong}{\to} A$ is initial in the category $\mbf{Alg(F)}$, then the logical congruence $\mit{Eq}(A) \mapsto A \times A$ is initial in $\mbf{Alg}(\mit{EnRel}(F))$, i.e. is the initial logical congruence.\\~\\<br>Prove or disprove.<br></latex>	true. pg 115, corollary 4.5.6<br>todo: add impostor?<br>
<latex>~\\<br>Let $\mathbb C$ be a category with a logical factorisation system. What does it mean for $\mathbb C$ to \emph{admit quotients}?<br></latex>	pg 116 left, def 4.5.7<br>
<latex><br>Assume a logical factorisation system with quotients on a category $\mathbb C$, and an endofunctor $F : \mathbb C \to \mathbb C$ whose relation lifting $\mit{Rel}(F)$ preserves equality. Consider the following statement:\\~\\<br>The coinduction principle holds: the equality functor $\mit{Eq}(-) : \mbf{Coalg}(F) \to \mbf{CoAlg}(\mit{EnRel}(F))$ from lemma 4.5.2 preserves final objects.\\~\\<br>Prove or disprove.  <br></latex>	pg 116 left, theorem 4.5.8<br>todo: add impostor?<br>
Java statements can be modeled as coalgebras or Kleisli maps. Explain the distinction between these two approaches.	pg 5612<br>
<latex>~\\<br>Let $F$ be the list functor: $F(X) \doteq 1 + L \times X$. Let $c : X \to \mathcal PF(X)$ be a coalgebra<br>in the Kleisli category $\mathcal K \ell(\mathcal P)$. How, intuitively, can we think of such a coalgebra: what is its practical significance? What is a \emph{trace} for such a coalgebra $c$?<br></latex>	It's a transition system, and trace is defined on:<br>pg 146, top left<br>
<latex>~\\<br>Let $F(X) \doteq 1 + A \times X$ be the list functor on $\mbf{Sets}$. Concretely describe the lifted functor $\mathcal K \ell(F) : \mbf{SetsRel} \to \mbf{SetsRel}$.<br></latex>	pg 146 right, "First we need to move..."<br>
<latex>~\\<br>Complete the following statement:\\<br>A transition system, or $\mathcal P F$-coalgebra in $\mbf{Sets}$, is a $\mathcal K \ell(F)$-coalgebra<br>in the category \underline{~~~~~~~~~~}.<br></latex>	SetsRel<br>pg 146, bottom right, point 1<br>
<latex>~\\<br>Let $\mit{trace}_c : X \to \mathcal P(L^*)$ be the \emph{trace coalgebra}, where $c : X \to \mathcal P(1 + L \times X)$ is a transition system coalgebra. Consider the following statement:\\~\\<br>If we consider $\mit{trace}_c$ as a homomorphism in $\mbf{SetsRel}$, then it is a homomorphism of $\mathcal K \ell(F)$-coalgebras in $\mbf{SetsRel}$:<br>\begin{center}<br>\begin{tikzcd}[sep=60]<br>F(X) \ar[r,"\mit{Rel}(F)(\mit{trace}_c)" above] & F(L^*) \\<br>X  \ar[u,"c" left] \ar[r,"\mit{trace}_c" below] & \ar[u, "\cong" left, "\mit{Graph}(\alpha^{-1})" right] L^*<br>\end{tikzcd}<br>\end{center}<br>where $\alpha = [\mit{nil}, \mit{cons}] : F(L^*) \overset{\cong}{\to} L^*$ is the initial algebra map, and the graph functor $\mit{Graph}(-) : \mbf{Sets} \to \mbf{SetsRel}$ is the canonical map $J : \mbf{Sets} \to \mathcal K \ell(\mathcal P)$ described in prop 5.2.2 pg 138.<br></latex>	true. pg 146 bottom right, pg 147 top left.<br><br>Read point 3 on pg 147 while you're at it.<br>
<latex>~\\<br>Consider a natural transformation $\alpha : SF \Rightarrow FT$ in a situation:<br>\begin{center}<br>\begin{tikzcd}<br>\mathbb A \ar[r, "S"] & \mathbb A \\<br>\mathbb B \ar[u, "F" left] \ar[r, "T" below] & \mathbb B \ar[u, "F" right]<br>\end{tikzcd}<br>\end{center}<br>It induces a lifting of $F$ to a functor $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(T) \ar[r, "\mbf{Alg}(F)", mapsto] & \mbf{Alg}(S) \\<br>(T(X) \overset{a}{\to} X) \ar[r, mapsto] & (SF(X) \overset{\alpha_x}{\to} FT(X) \overset{F(a)}{\to} F(X) <br>\end{tikzcd}<br>\end{center}<br>If $\alpha$ is an isomorphism, then a right adjoint $G$ to $F$ induces a right adjoint $\mbf{Alg}(G)$ to $\mbf{Alg}(F)$ in<br>\begin{center}<br>\begin{tikzcd}[sep = 60]<br>\mathbb A \ar[d, "G" right, bend left = 30] & \ar[l, "U" above] \mbf{Alg}(S) \ar[d, "\mbf{Alg}(G)" right, bend left = 30] \\<br>\mathbb B \ar[u, "F" left, "~~\dashv" right, bend left = 30] & \ar[l, "U" below] \mbf{Alg}(T) \ar[u, "\mbf{Alg}(F)" left, "~~\dashv" right, bend left = 30]<br>\end{tikzcd}<br>\end{center}<br>where the $U$s are forgetful functors. The functor $\mbf{Alg}(G)$ arises from $\beta : TG \Rightarrow GS$, the adjoint transpose of $FTG \cong SFG \overset{S\epsilon}{\Longrightarrow} S$.\\~\\<br>Prove or disprove.<br></latex>	true. page 104 (yep, it's in a previous chapter, but it's relevant to this one)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a weak-pullback-preserving functor with an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$. Consider the following statements:\\~\\<br>Lemma 5.2.7 on page 140 left then yields a distributive $\mathcal K \ell$-law $F \mathcal P \Rightarrow \mathcal P F$ and thus a lifting of $F$ to an endofunctor $\mathcal K \ell(F)$ on the Kleisli category $\mathcal K \ell(\mathcal P) = \mbf{SetsRel}$.\\~\\<br>The map $\mit{Graph}(\alpha^{-1}) : A \overset{\cong}{\to} \mathcal K \ell(F)(A)$ is then a final coalgebra in $\mbf{SetsRel}$ for the lifted functor $\mathcal K \ell(F) : \mbf{SetsRel} \to \mbf{SetsRel}$.\\~\\<br>Prove or disprove. <br></latex>	true. pg 147 right, theorem 5.3.1<br>
<latex>~\\<br>In what way is a context-free grammar a coalgebra in $\mbf{SetsRel}$? Calling this coalgebra $g$, describe its trace $\mit{trace}_g$.<br></latex>	pg 148 left, example 5.3.2<br>
What does it mean for a category to be <i>dcpo-enriched</i>? Give an example of a dcpo-enriched category.	pg 148, bottom left (note that their example is a complete lattice: closed under all joins, but directed ones in particular)<br><br>
<latex>~\\<br>What does it mean for a map $f : X \to Y$ in a dcpo-enriched category to be an \emph{embedding}?<br></latex>	pg 148, upper right<br>
What is a <i>coreflection</i>?	pg 148, upper right<br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then consider the following statement:\\~\\<br>The coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$.\\~\\<br>Prove or disprove.<br></latex>	pg 148, prop 5.3.3 (1)<br><br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then it can be proven that the coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$. Consider the following statement:\\~\\<br>The projections $\pi_n : A \to X_n$ are jointly monic: if $h,h' : Y \to A$ satisfy $\pi_n \circ h = \pi_n \circ h'$ for all $n \in \mathbb N$, then $h = h'$.<br>\\~\\<br>Prove or disprove.<br></latex>	true. pg 148 right, prop 5.3.3 (3)<br>todo: add impostor?<br><br>
<latex>~\\<br>Let $\mathbb C$ be a dcpo-enriched category. Assume an $\omega$-chain<br>$$X_0 \overset{f_0}{\longrightarrow} X_1 \overset{f_1}{\longrightarrow} X_2 \overset{f_2}{\longrightarrow} \cdots$$<br>with colimit $A \in \mathbb C$. Further, assume the maps $f_i$ are embeddings. Then it can be proven that the coprojection maps $\kappa_n : X_n \to A$ associated with the colimit $A$ are embeddings, and their projections $\pi_n = \kappa_n^p : A \to X_n$ form a cone, i.e. satisfy $f_n^p \circ \pi_{n+1} = \pi_n$. Consider the following statement:\\~\\<br>For a cone $g_n : Y \to X_n$, where $f_n^P \circ g_{n+1} = g_n$, there is a unique mediating map $g : Y \to A$, given by $g = \bigvee_n \kappa_n \circ g_n$.<br>\\~\\<br>Prove or disprove.<br></latex>	true pg 148, bottom right, prop 5.3.3 (4)
<latex>~\\<br>Assume we have the following data on a category $\mathbb C$.<br>\begin{itemize}<br>\item Both an initial and final object $0,1 \in \mathbb C$<br>\item A monad $T : \mathbb C \to \mathbb C$ for which<br>\begin{enumerate}<br>\item the Kleisli category $\mathcal K \ell(T)$ is dcpo-enriched<br>\item the map $T(0) \to 1$ is an isomorphism, so that $0 \in \mathcal K \ell(T)$ is a zero object<br>\item the resulting zero maps ($X \overset{!}{\longrightarrow} 0 \overset{!}{\longrightarrow} Y$) in $\mathcal K \ell (T)$ are least elements in the hom-set dcpos.<br>\end{enumerate}<br>\item A functor $F : \mathbb C \to \mathbb C$ for which<br>\begin{enumerate}<br>\item there is a distributive $\mathcal K \ell$-law $FT \Rightarrow TF$, or equivalently by Proposition 5.2.5, a lifting $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$.<br>\item this lifting $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$ is `locally monotone': $f \leq g$ implies $\mathcal K \ell (T)(f) \leq \mathcal K \ell(T)(g)$.<br>\item there is an initial algebra $\alpha : F(A) \overset{\cong}{\to} A$ in $\mathbb C$, obtained as colimit of the chain $F^n(0)$ as in (4.12). <br>\end{enumerate}<br>\end{itemize}<br>Consider the following statement:\\~\\<br>The map $J(\alpha^{-1}) : A \overset{\cong}{\longrightarrow} F(A) = \mathcal K \ell(F)(A)$ is then a final coalgebra in the Kleisli category $\mathcal K \ell (T)$, for the lifted functor $\mathcal K \ell(F) : \mathcal K \ell(T) \to \mathcal K \ell(T)$.\\~\\<br>Prove or disprove.<br></latex>	pg 149, bottom right<br>
<latex>~\\<br>Let $\ni_X$ be the reverse inclusion relation on $X$ in the category $\mbf{Sets}$, i.e., $\ni_X : \ni_X \mapsto \mathcal P(X) \times X$.<br>Consider the following statement:\\~\\<br>$(\mathcal{P}(f) \times \mit{id})^{-1}(\ni_Y) = \coprod_{id \times f}(\ni_X)$\\~\\<br>Prove or disrpove.<br></latex>	<latex>~\\<br>true. pg 141 left. todo: add impostor? The solution is not given in the book, so we provide it here:\\~\\<br>First, for a function $f : X \to Y$, consider $(\mathcal P(f) \times id_Y)^{-1}$ its signature is<br>$\mathcal P(\mathcal P(Y) \times Y) \to \mathcal P(\mathcal P(X) \times Y)$. It's defined as <br>$(\mathcal P(f) \times id_Y)^{-1}(A \subseteq \mathcal P(Y) \times Y) \doteq \{ (U,y) \mid (f[U],y) \in A \}$.\\~\\<br>Now, we describe $\ni_Y$ at a more low level as $\{ (V,y) \mid V \subseteq Y \wedge y \in V \}$.\\~\\<br>Then we have $(\mathcal P(f) \times id_Y)^{-1}(\ni_Y) = (\mathcal P(f) \times id_Y)^{-1}(\{ (V,y) \mid V \subseteq Y \wedge y \in V \}) = \{ (U \subseteq X, y) \mid y \in f[U] \}$.\\~\\~\\<br>On the other hand, consider the expression $\coprod_{\mit{id} \times f}(\ni_X)$; as a reminder, this refers to the top-right object of the following epi-mono decomposition:<br>\begin{center}<br>\begin{tikzcd}<br>\ni_X \ar[d,mapsto, "\ni_X" left] \ar[r, two heads] & \ar[d, mapsto, "\coprod_{\mit{id} \times f} \ni_X" right] \coprod_{\mit{id} \times f}(\ni_X) \\<br>\mathcal PX \times X \ar[r,"\mit{id} \times f" below] & \mathcal PX \times Y<br>\end{tikzcd}<br>\end{center}<br>Upon reflection, it's not hard to see that this is the same set we described above.<br></latex>
<latex>~\\<br>Let $\eta_X$ be the unit of the powerset monad at a set $X$. Let $\ni_X \subseteq \mathcal P(X) \times X$ be the reverse inclusion relation. Consider the following statement:<br>$$(\eta_X \times \mit{id}_X)^{-1}(\ni_X) = \mit{Eq}(X)$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>true. pg 141 left. proof isn't given in the book, so here it is:\\~\\<br>First note the ``signature'': $(\eta_X \times \mit{id_X})^{-1} : \mathcal P(\mathcal P(X) \times X) \to \mathcal P(X \times X)$\\~\\<br>Then note that $$(\eta_X \times \mit{id}_X)^{-1}(A \subseteq \mathcal P(X) \times X) = \{ (x_1,x_2) \in X \times X \mid (\{ x_1 \}, x_2) \in A \}$$<br>Finally, we have<br>$$(\eta_X \times \mit{id}_X)^{-1}(\ni_X) = \{ (x_1, x_2) \in X \times X \mid x_2 \in \{ x_1 \} \} = \{ (x_1,x_2) \mid x_2 = x_1 \} = \mit{Eq}(X)$$<br>TODO: add impostor?<br></latex>
<latex>~\\<br>Let $\mu_X : \mathcal P^2(X) \to \mathcal P(X)$ be the multiplication for the powerset monad and let $\ni_X \subseteq \mathcal P(X) \times X$ be the reverse of the $\in_X : X \times \mathcal P(X)$ relation.<br>Consider the following statement:\\~\\<br>$$(\mu_X \times id)^{-1} (\ni_X) = \ni_X \circ \ni_{\mathcal P(X)}$$<br>Prove or disprove.<br></latex>	<latex>~\\<br>true. pg 141 left.\\~\\<br>First, note the ``type signature'' $(\mu_X \times \mit{id}_X)^{-1} : \mathcal P(\mathcal P(X) \times X) \to \mathcal P(\mathcal P^2(X) \times X)$.\\~\\<br>Then, note that $$(\mu_X \times \mit{id}_X)^{-1}(A \subseteq \mathcal P(X) \times X) = \{ (V \in \mathcal P^2(X), x) \mid (\bigcup V, x) \in A \}$$<br>Finally, we have $$(\mu_X \times \mit{id}_X)^{-1}(\ni_X) = \{ (V \in \mathcal P^2(X),x) \mid x \in \bigcup V \} = \{ (V \in \mathcal P^2(X),x) \mid \exists Q \in V.~x \in Q \}$$<br>It's not hard to see that this is equal to <br>$$\ni_X \circ \ni_{\mathcal P(X)}$$<br></latex>
<latex>~\\<br>Let $T = (T, \eta, \mu)$ be a monad on a category $\mathbb C$. Provide the definition of the category $\mathcal E \mathcal M(T)$.<br></latex>	pg 154 left, def 5.4.1<br>
<latex>~\\<br>What is the difference between a \emph{functor algebra} and a \emph{monad algebra}?<br></latex>	pg 154 right<br>
<latex>~\\<br>Let $S : \mathbb C \to \mathbb C$ be a comonad. Consider the following statement:\\~\\<br>The obvious forgetful functor $\mathcal E \mathcal M (S) \to \mathbb{C}$ has a right adjoint.\\~\\<br>Prove or disprove.<br></latex>	pg 155 left<br>
<latex>~\\<br>Let $S$ be a comonad on a category $\mathbb C$. Then the obvious forgetful functor $\mathcal U : \mathcal{EM}(S) \to \mathbb C$ has a right adjoint $\mathcal G : \mathbb C \to \mathcal{EM}(T)$ defined as $\mathcal G(Y) \doteq S(Y) \overset{\delta_Y}{\to} S^2(Y)$. Describe the monad that this adjunction gives rise to. <br></latex>	pg 155 left, lemma 5.4.2<br>also see exercise 5.8.4
<latex>~\\<br>What is a \emph{monoid action}? How is a monoid action a type of monad algebra?<br></latex>	pg 155, example 5.4.3 (1), bottom right
<latex>~\\<br>Recall the definition of a semiring. (It's on pg 133 right if you need help.) Recall how the multiset functor on a semiring $\mathcal M_S$ forms a monad. (This is described in lemma 5.1.5 on pg 134 left.)<br>Letting $S$ be a semiring, show that the monad algebras of $\mathcal M_S$ correspond to the modules (recall that the notion of a module is a generalization of that of a vector space) over the semiring $S$.<br></latex>	pg 155, bottom right, example 5.4.3 (2)<br>spills onto pg 156 top left<br>
<latex>~\\<br>Show that each monad algebra $\alpha : \mathcal P(X) \to X$ of the powerset monad encodes a poset. Further, show that this poset is more specifically a complete lattice. What are algebra maps between such algebras?<br></latex>	pg 156 left, example 3 near bottom<br><br>the maps are continuous functions. they preserve joins.
<latex>~\\<br>Define the \emph{ideal monad} $\mathit{Idl} : \mbf{Posets} \to \mbf{Posets}$.  What, concretely, are monad algebras $\mathit{Idl}(X) \to X$?<br></latex>	pg 156 right, example 4<br>make sure to examine what it means for these algebras to satisfy the laws (5.18), shown on pg 154 left.
<latex>~\\<br>Consider the following statement:\\~\\<br>The Eilenberg-Moore category $\mathcal{EM}(T)$ for a monad $T : \mathbb C \to \mathbb C$ has the same kind of limits as the underlying category $\mathbb C$. (By ``kind of limits'' we mean ``type of diagram'', i.e. the domain category of the diagram functor; search for ``diagram of type J'' in awodey.)\\~\\<br>Prove or disprove.<br></latex>	pg 157 left, lemma 5.4.4.<br>(It isn't proven here, but a hint is provided in the statement of the lemma.).<br>Also note that this applies to all algebra categories, not just the special case of Eilenberg-Moore categories.<br><br>Note that we can look at the domains of our EM-algebras and the codomains of our EM-algebras, and both collections form J-diagrams. From there, the rest of the reasoning should be simple.<br>The limit of the domains is a cone of the codomain diagram, and therefore it has a unique arrow to the limit of codomains.<br><br><br>
Read pg 157, starting at "The following useful result..." on the bottom left, down to "Under suitable circumstances...".<br><br>This stretch of text involves several unproven lemma statements, which is why I did not make traditional cards for it.<br><br>	<latex>~\\<br>It may at first be a little ambiguous as to what a bihomomorphism is: a bihomomorphism is simply taking to separate algebra homomorphisms, one from \alpha to \gamma and the other from $\beta$ to $\gamma$, <br>and combining them into a single ``bihomomorphism'' from $\alpha \times \beta$ to $\gamma$, as depicted in the diagram directly above prop 5.4.7\\~\\<br>pg 157<br></latex>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an arbitrary functor. Recall the free monad $F^* : \mathbb C \to \mathbb C$ on page 134 (right side), and the cofree comonad $F^{\infty}$ on $F$ from exercise 5.1.15, described via the initial algebras and final coalgebras:<br>\begin{center}<br>\begin{tikzcd}<br>X + F(F^*(X)) \ar[r,"\alpha_X" above, "\cong" below] & F^*(X)<br>\end{tikzcd}<br>\text{~~~and~~~}<br>\begin{tikzcd}<br>F^{\infty}(X) \ar[r, "\zeta_X" above, "\cong" below] & X \times F(F^{\infty}(X))<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>Assuming the above constructions exist in $\mathbb C$, there are isomorphisms of categories of monad (co)algebras and functor (co)algebras:<br>$$\mathcal{EM}(F^*) \cong \mbf{Alg}(F)\text{~~~~and~~~~}\mathcal{EM}(F^{\infty}) \cong \mbf{CoAlg}(F)$$<br>Prove or disprove.<br></latex>	pg 157 bottom right, prop 5.4.7, spills onto next page.<br>
<latex>~\\<br>Let $T$ be a commutative monad.<br>What is a \emph{bihomomorphism} of $T$-algebras? <br></latex>	<latex>~\\<br>It is a single morphism $f : X \times Y \to Z$ which serves as an algebra ``homomorphism'' simultaneously from both algebras $\alpha : T(X) \to X$ and $\beta : T(Y) \to Y$ to $\gamma : T(Z) \to Z$ I.e., it is a single ``bihomomorphism'' from $\alpha \times \beta : F(X) \times F(Y) \to X \times Y$ to $\gamma : T(Z) \to Z$, as depicted in the figure on pg 157 right.<br></latex>
<latex>~\\<br>Let $T : \mathbb{C} \to \mathbb{C}$ be a monad and $G : \mathbb{C} \to \mathbb{C}$ an ordinary functor. What is a \emph{distributive law} a.k.a. $\mathcal{EM}$-\emph{law} of $T$ over $G$?<br></latex>	pg 158, bottom right corner, def 5.4.8, spills onto next page<br>
<latex>~\\<br>Scroll half-way up on pg 159 so that you can see prop 5.4.9 but not its proof. Prove prop 5.4.9.<br></latex>	pg 159 left<br><br><latex>~\\<br>For functoriality of $R$, assuming $Tf;b = a;f$, we need the following diagram to commute:<br>\begin{center}<br>\begin{tikzcd}<br>TGX \ar[d, "\rho; Ga" left] \ar[r, "TGf"] & \ar[d, "\rho;Gb"] TGY \\<br>GX \ar[r, "Gf" below] & GY<br>\end{tikzcd}<br>\end{center}<br>We have this, since $TGf;\rho;Gb = \rho Gtf;Gb = \rho;G(Tf;b)=\rho;G(a;f)=\rho;Ga;Gf$.<br></latex><br><br>
<latex>~\\<br>Let $T$ be a monad and $G$ an endofunctor on a category $\mathbb C$, with an $\mathcal{EM}$-law $\rho : TG \Rightarrow GT$ between them. Consider the following statement:\\~\\<br>If $G$ has a final coalgebra $\zeta : Z \overset{\cong}{\to} G(Z)$ in $\mathbb C$, then $Z$ carries an Eilenberg-Moore algebra structure obtained by finality, as in <br>\begin{center}<br>\begin{tikzcd}<br>GT(Z) \ar[r,dashed,"G(\beta)"] & G(Z) \\<br>T(Z) \ar[u, "\rho \circ T(\zeta)" left] \ar[r,dashed,"\beta" below] & Z \ar[u,"\cong" left, "\zeta" right]<br>\end{tikzcd}<br>\end{center}<br>The map $\zeta$ then forms a map of algebras as below, which is the final coalgebra for the lifted functor $\mathcal{EM}(G) : \mathcal{EM}(T) \to \mathcal{EM}(T)$:<br>\begin{center}<br>$\ddisp{T(Z)}{\beta}{Z}$ <br>\begin{tikzcd}<br> ~ \ar[r,"\zeta" above, "\cong" below] & ~<br>\end{tikzcd}<br>$\mathcal{EM}(G) \ddisp{T(Z)}{\beta}{Z} = \ddisp{TG(Z)}{G(\beta) \circ \rho}{G(Z)}$ <br>\end{center}<br>Prove or disprove.<br></latex>	pg 159 right, prop 5.4.10<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Given an $\mathcal{EM}$-law of the form $TG \Rightarrow GT$, the free algebra functor $\mathcal F : \mathbb C \to \mathcal{EM}(T)$ can be lifted, as in<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{CoAlg}(GT) \ar[r, "\mathcal F_{\mathcal{EM}}"] \ar[d] & \ar[d] \mbf{CoAlg}(\mathcal{EM}(G)) \\<br>\mathbb{C} \ar[loop left, "G" left] \ar[loop below, "T" below] \ar[r, "\mathcal F" above] & \ar[loop right, "\mathcal{EM}(G)"] \mathcal{EM}(T)<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 159 right, lemma 5.4.11.<br><br>todo: add impostor?
<latex>~\\<br>Discuss the distinction between $\mathcal{EM}$-laws and $\mathcal{KL}$-laws.<br></latex>	For this, you will want to open two copies of NewMiscStudy (use Okular), one to page 158 (EM laws are discussed in the bottom right, def 5.4.8) and one to page 139 (where KL laws are discussed at the top right)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. What does $\mathit{Pred}(F)$ denote?<br></latex>	pg 174 left, def 6.1.1
<latex>~\\<br>Let $F: \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Consider the following statement:<br>\begin{center}<br>$\mathit{Rel}(F)(\coprod_{\Delta_X}(P)) = \coprod_{\Delta_{F(X)}}(\mathit{Pred}(F)(P))$<br>\end{center}<br>where $\Delta_X \doteq \langle id_X, id_X \rangle$.<br>Prove or disprove.<br></latex>	true. pg 174, lemma 6.1.2.<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Consider the following statement:<br>\begin{center}<br>$\mathit{Pred}(F)(\coprod_{\pi_i}(R)) = \coprod_{\pi_i}(\mathit{Rel}(F)(R))$<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 174 left, lemma 6.1.2. TODO: add impostor?<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a polynomial functor. Let $X$ be a set and $P \subseteq X$ a predicate on $X$. How can we express $\mathit{Pred}(F)(P)$ in terms of relation lifting? Prove your answer.<br></latex>	pg 174, lemma 6.1.2 (3)<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>For every collection of predicates $(P_i \subseteq X)_{i \in I}$,<br>$$\mathit{Pred}(F)(\cap_{i \in I} P_i) = \bigcap_{i \in I} \mathit{Pred}(F)(P_i)$$<br>Prove or disprove.<br></latex>	true. pg 174, lemma 6.1.3 (1)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Predicate lifting is monotone: $P \subseteq Q \Rightarrow \mathit{Pred}(F)(P) \subseteq \mathit{Pred}(F)(Q)$\\~\\<br>Prove or disprove.<br></latex>	true. pg 174 right, lemma 6.1.3 (1)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting $\mathit{Pred}(F)$ may be described as a natural transformation<br>$$\mathcal P \overset{\mathit{Pred}(F)}{\Longrightarrow} \mathcal{P}F$$<br>for the contravariant $\mathcal P$ functor<br>$$\mbf{Sets}^{\mbf{op}} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	true. pg 175, corollary 6.1.4, top left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting $\mathit{Pred}(F)$ may be described as a natural transformation<br>$$\mathcal P \overset{\mathit{Pred}(F)}{\Longrightarrow} \mathcal{P}F$$<br>for the covariant $\mathcal P$ functor<br>$$\mbf{Sets} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	true. pg 175, top left, corollary 6.1.4<br>
<latex>~\\<br>Provide the defintion of the category $\mbf{Pred}$. How is this category relevant to predicate lifting?<br></latex>	pg 175 left, below cor 6.1.4.<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Predicate lifting for a polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ yields a functor $\mathit{Pred}(F)$ in a commuting square:<br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Pred} \ar[d] \ar[r, "\mathit{Pred}(F)"] & \ar[d] \mbf{Pred} \\<br>\mbf{Sets} \ar[r, "F" below] & \mbf{Sets}<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 175, corollary 6.1.5<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Applying predicate lifting $\mathit{Pred}(F)$ to a predicate $m : P \rightarrowtail X$ is the same as applying the<br>functor $F$ itself to the domain $P$, in<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(F)(P) \ar[dr,tail] \ar[rr, no head, double] & & F(P) \ar[dl, "~~F(m)" right, tail] \\<br> & F(X) & \\<br>\end{tikzcd}<br>\end{center}<br></latex>	pg 175 right, lemma 6.1.6<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>There is an operation $\underset{\longleftarrow}{\mathit{Pred}} : \mathcal P(F(X)) \to \mathcal P(X)$ satisfying<br>\begin{center}<br>$\underset{\longleftarrow}{\mathit{Pred}}(F)(Q) \subseteq P \Leftrightarrow Q \subseteq \mathit{Pred}(F)(P)$<br>\end{center}<br>Hence $\underset{\longleftarrow}{\mathit{Pred}}$ is the left adjoint of $\mathit{Pred}(F)$ in a Galois connection $\underset{\longleftarrow}{\mathit{Pred}}(F) \dashv \mathit{Pred}(F)$\\~\\<br>Prove or disprove.<br></latex>	pg 176 left, prop 6.1.7<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Its opposite predicate lifting operation $\underset{\longleftarrow}{\mathit{Pred}}(F) : \mathcal P(F(X)) \to \mathcal P(X)$ preserves unions $\bigcup$ of predicates.\\~\\<br>Prove or disprove.<br></latex>	true. pg 176 lemma 6.1.8, bottom left / top right<br>
<latex>~\\<br>Let $F$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>Its opposite predicate lifting operation $\underset{\longleftarrow}{\mathit{Pred}}(F) : \mathcal P(F(X)) \to \mathcal P(X)$ preserves direct images $\coprod$, in the sense that for $f : X \to Y$,<br>\begin{center}<br>$\underset{\longleftarrow}{\mathit{Pred}}(F)(\coprod_{F(f)}(Q)) = \coprod_f \underset{\longleftarrow}{\mathit{Pred}}(F)(Q)$<br>\end{center}<br>This means that $\underset{\longleftarrow}{\mathit{Pred}}(F)$ forms a natural transformation:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal PF \ar[r, Rightarrow, "\underset{\longleftarrow}{\mathit{Pred}}(F)"] & \mathcal P<br>\end{tikzcd}<br>\end{center}<br>for the covariant<br>$$\mbf{Sets} \overset{\mathcal P}{\longrightarrow} \mbf{Sets}$$<br>Prove or disprove.<br></latex>	pg 176, lemma 6.1.8 (2), bottom left / top right
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathfrak M, \mathfrak E)$. For a predicate $(m : U \mapsto X) \in \mathit{Pred}(\mathbb C)$, how is $\mathit{Pred}(F)(m)$ defined? Is $\mathit{Pred}(F)$ functorial?<br></latex>	pg 117 bottom left, def 6.1.11<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>Predicate lifting is monotone and preserves truth $\top$.\\~\\<br>Prove or disprove.<br></latex>	pg 177 left, prop 6.1.12 (1)<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If diagonals $\Delta = \langle id, id \rangle : X \to X \times X$ are in $\mathfrak M$ - that is, if internal and external equality coincide (see Remark 4.3.6) - then $\coprod_{\Delta} \mathit{Pred}(F) = \mathit{Rel}(F)\coprod_{\Delta}$, as in the square below:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(X) \ar[r,"\coprod_{\Delta}" above] \ar[d,"\mathit{Pred}(F)" left] & \ar[d,"\mathit{Rel}(F)"] \mathit{Rel}(X) \\<br>\mathit{Pred(F(X))} \ar[r,"\coprod_{\Delta}" below] & \mathit{Rel}(F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 117 right, prop 6.1.12 (2) <br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If the functor $F$ preserves abstract epis, then the rectangle below commutes for $i \in \{ 1, 2 \}$.<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Pred}(X) \ar[d,"\mathit{Pred}(F)" left] & \ar[l,"\coprod_{\pi_i}" above] \ar[d,"\mathit{Rel}(F)"] \mathit{Rel}(X) \\<br>\mathit{Pred(F(X))} & \ar[l,"\coprod_{\pi_i}" below] \mathit{Rel}(F(X))<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 117 right, prop 6.1.12 (3)
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If $F$ preserves abstract epis, predicate lifting commutes with sums (direct images) $\coprod$, as in<br>$$\mathit{Pred}(F)(\coprod_f(U)) = \coprod_{F(f)}\mathit{Pred}(F)(U)$$<br>Prove or disprove.<br></latex>	true. pg 117 right, prop 6.1.12 (4)<br>
<latex>~\\<br>Let $F : \mathbb C \to \mathbb C$ be an endofunctor on a category $\mathbb C$ with a logical factorisation system $(\mathcal M, \mathcal E)$. Consider the following statement:\\~\\<br>If $\frak E \subseteq \mathit{SplitEpis}$ and $F$ preserves weak pullbacks, then predicate lifting commutes with inverse images:<br>$$\mathit{Pred}(F)(f^{-1}(V)) = F(f)^{-1}(\mathit{Pred}(F)(V))$$<br>Additionally, predicate lifting preserves meets $\wedge$ of predicates.\\~\\<br>Prove or disprove.<br></latex>	pg 178 right, item 5<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a Kripke polynomial functor with predicate lifting functor $\mathit{Pred}(F) : \mbf{Pred} \to \mbf{Pred}$. What is an \emph{invariant}?<br></latex>	pg 179 bottom right / 180 top left<br>
<latex>~\\<br>Consider two coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>If $R \subseteq X \times Y$ is a bisimulation, then both its domain $\coprod_{\pi_1} R = \{ x \mid \exists y. R(x,y) \}$ and codomain $\coprod_{\pi_2} R = \{ y \mid \exists x. R(x,y) \}$ are invariants.\\~\\<br>Prove or disprove.<br></latex>	true. pg 180 left, lemma 6.2.2 (1)<br>
<latex>~\\<br>Consider two coalgebras $c : X \to F(X)$ and $d : Y \to F(Y)$ of a Kripke polynomial functor $F$. Consider the following statement:\\~\\<br>An invariant $P \subseteq X$ yields a bisimulation $\coprod_{\Delta} P = \{ (x,x) \mid x \in P \} \subseteq X \times X$.\\~\\<br>Prove or disprove.<br></latex>	pg 180 left, lemma 6.2.2 (2)<br>
Read points 1 and 2 on page 180 right (contains some not-too-surprising material about invariants on DFAs and NFAs)<br>	pg 180 right<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. Consider the following statement:\\~\\<br>Invariants are closed under arbitrary unions and intersections: if predicates $P_i \subseteq X$ are invariants for $i \in I$, then their union $\bigcup_{i \in I} P_i$ and intersection $\bigcap_{i \in I} P_i$ are invariants. In particular, falsity $\bot$ (union over $I = \emptyset$) and truth $\top$ (intersection over $I = \emptyset$) are invariants.\\~\\<br>Prove or disprove.<br></latex>	pg 180 right, proposition 6.2.4 (1)<br>
<latex>~\\<br>Let $X \overset{c}{\to} F(X)$ and $Y \overset{d}{\to} F(Y)$ be two coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. Consider the following statement:\\~\\<br>Invariants are closed under direct and inverses images along homomorphisms: if $f : X \to Y$ is a homomorphism of coalgebras, and $P \subseteq X$ and $Q \subseteq Y$ are invariants, then so are $\coprod_{f}(P) \subseteq Y$ and $f^{-1}(Q) \subseteq X$. In particular, the image $\mathit{Im}(f) = \coprod_f(\top)$ of a coalgebra homomorphism is an invariant.\\~\\<br>Prove or disprove.<br></latex>	pg 180 right, prop 6.2.4 (2)<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Set}$ be a Kripke polynomial functor. Consider the following statement:\\~\\<br>A predicate $m : P \rightarrowtail X$ on the state space of a coalgebra $c : X \to F(X)$ is an invariant if and only if $P \rightarrowtail X$ is a \emph{subcoalgebra}: there is a coalgebra structure $P \to F(P)$ making $m : P \rightarrowtail X$ a homorphism of coalgebras:<br>\begin{center}<br>\begin{tikzcd}<br>F(P) \ar[r,"F(m)", tail] & F(X) \\<br>P \ar[u] \ar[r,"m" below, tail] & X \ar[u,"c" right]<br>\end{tikzcd}<br>\end{center}<br>Uniqueness of this coalgebra $P \to F(P)$ follows because $F(m)$ is injective by lemma 4.2.2.\\~\\<br>Prove or disprove.<br></latex>	pg 181, theorem 6.2.5
What is a Mealy machine?	pg 5922, near top<br>
<latex>~\\<br>With respect to Mealy machines, what does the notation $s \overset{a \mid b}{\longrightarrow}s'$ mean?<br></latex>	pg 5922, near top.<br>
<latex>~\\<br>Provide the definition and intuition of the meet-semilattice $\mathcal B$ used by Bonsangue et al. in their coalgebraic logic.<br></latex>	pg 5921, near bottom<br>
<latex>~\\<br>Let $f : S \to (B \times S)^A$ be a Mealy machine. What does the notation $f(s) = \langle s[a], s_a \rangle$ mean?<br></latex>	pg 5922<br>
<latex>~\\<br>What does it mean for a Mealy machine to be \emph{binary}? What does it mean for a Mealy machine to be \emph{fully specified}?<br></latex>	pg 5922m "Machines where A is..."<br>
<latex>~\\<br>What is a \emph{homomorphism} from a Mealy machine $(S,f)$ to a Mealy machine $(T,g)$? <br></latex>	It's just a coalgebra morphism of the functor M.<br>pg 5922, "A homomorphism from a Mealy..."<br>
<latex>~\\<br>Let $(S,f)$ and $(T,g)$ be two Mealy machines. We does it mean for a relation $R \subseteq S \times T$ to be a \emph{simulation}. What does it mean for $R$ to be a \emph{bisimulation}?<br></latex>	pg 5922, definition 1<br>
<latex>~\\<br>Let $(S,f)$ and $(T,g)$ be two Mealy machines. For $s \in S$, $t \in T$, what does $s \lesssim t$ mean? What does $s \sim t$ mean?<br></latex>	pg 5922, below def 1 near bottom<br><br>
Read the paragraph starting with "Now, note..." on pg 5923. (Because I didn't get it upon the first reading.)<br>	pg 5923<br>
<latex>~\\<br>Let $A^{\omega} = \{ \sigma \mid \sigma : \{ 0,1,2,\ldots\} \to A \}$ be the set of all infinite \emph{streams} over $A$.  What does it mean for a function $f : A^{\omega} \to B^{\omega}$ to be \emph{causal}? What does Bonsangue use the symbol $\Gamma$ to denote?<br></latex>	pg 5923, "We call a function..."<br>
<latex>~\\<br>Provide the definition of the coalgebra $(\Gamma, \gamma)$. Consider the following statement:\\~\\<br>For every Mealy machine $(S,f)$ there exists a unique homomorphism $h : S \to \Gamma$. It satisifies, for all<br>$s, s' \in S$:<br>$$s \lesssim s' \Longleftrightarrow h(s) \lesssim h(s')$$<br>where on $\Gamma$, similarity coincides with the elementwise ordering induced by $B$:<br>$$f \lesssim g \Longleftrightarrow \forall \sigma \in A^\omega. \forall n \geq 0. f(\sigma)(n) \leq_B g(\sigma)(n)$$<br>Prove or disprove.<br></latex>	true. the proof isn't provided, but it shouldn't be too hard.<br>pg 5923, theorem 2 near bottom.<br> 
<latex>~\\<br>What does $L_g^c$ denote? Provide the definition of the coalgebra $\lambda : L_g^c \to (B \times L_g^c)^A$.<br></latex>	pg 5924<br>
<latex>~\\<br>Let $\phi$ be a formula in Bonsangue's modal logic. How is the semantics $\sem{\phi}$ of $\phi$ defined?<br></latex>	It's defined as a causal stream from A^\omega to B^\omega, via finality.<br>pg 5925<br>
<latex>~\\<br>Let $(S,f)$ be a Mealy coalgebra, $s \in S$, and $\phi$ a formula of Bonsangue's modal logic.<br>What does $s \vDash \phi$ mean?<br></latex>	pg 5925<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For all states $s,s'$ of a Mealy machine $(S,f)$,<br>$$s \sim s' \text{  iff  } \forall \phi \in L^c_g.~s \vDash \phi \Leftrightarrow s' \vDash \phi$$<br>Prove or disprove.<br></latex>	pg 5926, theorem 4 (1)<br><br>
<latex>~\\<br>Let $S$ be finite. Consider the following statement:\\~\\<br>There exists for any $s \in S$ a formula $\phi_s \in L^c_g$ such that <br>$$\forall s' \in S.~s \sim s' \text{ iff } s' \vDash \phi_s$$<br>Prove or disprove.<br></latex>	pg 5926, theorem 4 (2)<br>
<latex>~\\<br>Consider the following Mealy machine, which computes the twos complement of its input:<br>\begin{center}<br>\begin{tikzcd}<br>s_1 \ar[loop left, "0 \mid 0"] \ar[r, "1 \mid 1"] & s_2 \ar["1 \mid 0\text{,}0 \mid 1" right, loop right] <br>\end{tikzcd}<br>\end{center}<br>Give the characterizing formula of this Mealy machine.<br></latex>	pg 5926, near bottom<br>
<latex>~\\<br>Give the $(refl)$, $(top)$, $(\wedge - e1)$, and $(\wedge - e2)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top<br>
<latex>~\\<br>Give the $(trans)$, $(\wedge - i)$, $(a \downarrow -~\top)$, $(a \downarrow -~\wedge)$, and $(a \downarrow - \leq)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top
<latex>~\\<br>Give the $(a() -~\top)$, $(a() -~\wedge)$, and $(a() - \leq)$ rules of Bonsangue's coalgebraic logic proof system for assertions of the form $\phi_1 \leq \phi_2$.<br></latex>	pg 5927, near top<br><br>
<latex>~\\<br>Give the $(\nu - i)$ and $(\nu - e)$ rules for Bonsangue's proof system.<br></latex>	pg 5927<br>
Give the definition of the <i>norm</i> function for Mealy logic formula normalization. <br>(Hint: it uses auxiliary functions conj, rem, and flatten)<br>	pg 5929, section 4.1<br><br>
<latex>~\\<br>Provide the definition of $\delta$, the one-step synthesis function for transforming a formula of Bonsangue's logic into a "partial Mealy machine".<br></latex>	pg 5930, section 4.2 (read to the bottom of the page)<br>
<latex>~\\<br>What is the purpose of Bonsangue's auxiliary function $D$. Give its definition.<br></latex>	pg 5931, near top.<br>it's basically a breadth-first search<br>
<latex>~\\<br>How does Bonsangue define the $\Delta$ function, which transforms Mealy formulas into Mealy machines?<br></latex>	pg 5931<br>
<latex>~\\<br>Demonstrate how the $\Delta$ function transforms the formula $1 \downarrow 0 \wedge (\nu x. 1(x))$ into a Mealy machine.<br></latex>	pg 5931, diagram near the middle. They do not show the process, but they do present the result.<br>
<latex>~\\<br>Show how Bonsangue's $\Delta$ algorithm transforms the formula $\phi_1 \doteq 1(1 \downarrow 0) \wedge (\nu x. 1(x))$ into a Mealy machine. <br></latex>	pg 5931, near bottom<br> 
<latex>~\\<br>Consider the following statement:\\~\\<br>For a comonad $S$, the Kleisli category $\mathcal K\ell(S)$ can be embedded into $\mathcal E \mathcal M(S)$ via a commuting triangle.<br>\begin{center}<br>\begin{tikzcd}<br> \mathcal K \ell (S) \ar[rr] \ar[dr] & & \ar[dl] \mathcal E \mathcal M (S) \\<br> & \mathbb C & <br>\end{tikzcd}<br>\end{center}\\~\\<br>Prove or disprove.<br></latex>	pg 155 right, "The functor ..."<br>Recall that maps in Kleisli categories are used to represent computations. By embedding them into EM categories, we can study them in a richer universe (which, e.g., has all limits and colimits of a diagram whenever the ambient category does)<br><br>
<latex>~\\<br>For a Kripke polynomial functor $F$ and an arbitrary set $X$, write $\mathit{sts}_X : F(X) \to \mathcal P(X)$ for the following composite:<br>$$ \mathit{sts}_X \doteq (F(X) \overset{\{-\}}{\longrightarrow} \mathcal P(F(X)) \overset{\underset{\longleftarrow}{\mathit{Pred}}(F)}{\longrightarrow} \mathcal P(X))$$<br>Consider the following statement:\\~\\<br>These $\mathit{sts}$ maps form a natural transformation $F \Rightarrow \mathcal P$: for each function $f : X \to Y$ the following diagram commutes:<br>\begin{center}<br>\begin{tikzcd}<br>F(X) \ar[r, "\mathit{sts}_X" above] \ar[d, "Ff" left] & \ar[d, "\mathcal P(f) = \coprod_f" right] \mathcal P(X) \\<br>F(Y) \ar[r, "\mathit{sts}_Y" below] & \mathcal P(Y) <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.\\~\\<br>What is the intuition behind $\mathit{sts}$? (Hint: why is it called $\mathit{sts}$?)<br></latex>	true. pg 176 bottom right / pg 177 top left<br><br>the intuition is that it produces the set of states (elements of X) in an element of F(X).<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An invariant on an initial algebra is always true.\\~\\<br>Prove or disprove.<br></latex>	true. pg 181 left, thm 6.2.6.<br><br>
<latex>~\\<br>Consider binary trees as algebras of the functor $F(X) = 1 + (X \times A \times X)$, with initial algebra<br>\begin{center}<br>\begin{tikzcd}<br>1 + (\mathit{BinTree}(A) \times A \times \mathit{BinTree(A)}) \ar[r, "\cong" below, "\text{[nil, node]}" above] & \mathit{BinTree}(A)<br>\end{tikzcd}<br>\end{center}<br>Give concretely predicate lifting $\mathit{Pred}(F)(P) \subseteq F(X)$ of an arbitrary predicate $P \subseteq X$. Use the unary induction proof principle to derive conditions on a predicate $P$ which entail that $P$ holds for all binary trees $t$.<br></latex>	pg 181, example 6.2.7<br>
<latex>~\\<br>Let $c : X \to F(X)$ be a coalgebra of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$. For an arbitrary predicate $P \subseteq X$ on the state space of $c$, how is the predicate $\square P \subseteq X$ (pronounced \emph{henceforth} P) defined?<br></latex>	pg 183 left, def 6.3.1<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$$\square P \subseteq P$$<br>Prove or disprove.<br></latex>	pg 183 right, lemma 6.3.2 (1)<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$$\square P \subseteq \square \square P$$<br>Prove or disprove.<br></latex><br>	pg 183 right, lemma 6.3.2 (2)<br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:<br>$$P \subseteq Q \Rightarrow \square P \subseteq \square Q$$<br>Prove or disprove.<br></latex>	pg 183 right, lemma 6.3.2 (3)<br><br>
<latex>~\\<br>Let $\square$ be the henceforth operator for a coalgebra $c : X \to FX$. Consider the following statement:\\~\\<br>$P$ is an invariant if and only if $P = \square P$\\~\\<br>Prove or disprove.<br></latex>	pg 183 left, lemma 6.3.2 (4)<br>
<latex>~\\<br>Consider a coalgebra $c : X \to FX$ of a Kripke polynomial functor $F$ with an arbitrary predicate $P \subseteq X$. Consider the following statement:\\~\\<br>The greatest invariant $\square P \subseteq P \subseteq X$ carries a subcoalgebra structure, say $c_p$, in<br>\begin{center}<br>\begin{tikzcd}<br>F(\square P) \ar[r, "F(m)" above, hook] & F(X) \\<br>\square P \ar[u, "c_p" left] \ar[r, "m" below, hook] & X \ar[u,"c" right] <br>\end{tikzcd}<br>\end{center}<br>This subcoalgebra has the following universal property: each coalgebra homomorphism $f : (Y \overset{d}{\to} FY) \to (X \overset{c}{\to} FX)$ which factors through $P \hookrightarrow X$ -- i.e. satisfies $f(y) \in P$ for all $y \in Y$ -- also factors through $\square P$, namely as the (unique) coalgebra homomorphism $f' : (Y \overset{d}{\to} FY) \to (\square P \overset{c_p}{\to} F(\square P))$ with $f';m = f$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 183 left, prop 6.3.3 / pg 184 top left
<latex>~\\<br>Consider the following statement:\\~\\<br>The category $\mbf{CoAlg}(F)$ of coalgebras of a Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ has equalisers: for two coalgebras $X \overset{c}{\to} FX$ and $Y \overset{d}{\to} FY$ with two homomorphisms $f,g : X \to Y$ between them, there is an equaliser diagram in $\mbf{CoAlg}(F)$,<br>$$\left ( \begin{array}{c} F(\square E(f,g)) \\ \uparrow \\ \square E(f,g) \end{array} \right ) <br>  \overset{m}{\rightarrowtail} \left ( \begin{array}{c} F(X) \\ ~\uparrow c \\ X \end{array} \right )<br>  \begin{array}{c} f \\ \rightrightarrows \\ g \end{array}<br>   \left ( \begin{array}{c} F(Y) \\ ~\uparrow d \\ Y \end{array} \right )$$<br>where $E(f,g) \hookrightarrow X$ is the equaliser $\{ x \in X \mid f(x) = g(x) \}$ as in $\mbf{Sets}$. The greatest invariant $\square E(f,g) \hookrightarrow E(f,g)$ carries a subcoalgebra structure.\\~\\<br>Prove or disprove.<br></latex>	pg 184 left, theorem 6.3.4<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>For a finite Kripke polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$, the category $\mbf{CoAlg}(F)$ of coalgebras has arbitrary products $\prod$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 184 right, theorem 6.3.5<br>
<latex>~\\<br>Let $P,Q \subseteq X$ be a predicate, i.e. an object of the category $\mbf{Pred}$. How are the following predicates defined?<br>\begin{itemize}<br>\item $\neg P$<br>\item $P \wedge Q$<br>\item $P \Rightarrow Q$<br>\end{itemize}<br></latex>	pg 188 left, above def 6.4.1<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra of a Kripke polynomial functor $F$. How is the \emph{nexttime} operator $\bigcirc : \mathcal P(X) \to \mathcal P(X)$ defined?<br></latex>	pg 188, def 6.4.1<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>$P \subseteq Q \Rightarrow \bigcirc P \subseteq \bigcirc Q$\\~\\<br>Prove or disprove.<br></latex>	<latex>~\\<br>True. pg 188 right, lemma 6.4.2 (1)\\<br>Note that this makes $\bigcirc$ an endofunctor.<br></latex>
<latex>~\\<br>Let $Q \subseteq Y$ be a predicate, $c : X \to FX$ and $d : Y \to FY$ coalgebras, and $f : X \to Y$ a homomorphism from $c$ to $d$. Consider the following statement:\\~\\<br>$\bigcirc(f^{-1}Q) = f^{-1}(\bigcirc Q)$\\~\\<br>Prove or disprove.<br></latex>	pg 188 right (2)<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra and $\bigcirc$ its nexttime operator. Consider the following statement:\\~\\<br>The $\bigcirc$-coalgebras in the category $\mathcal P(X)$ of $X$-predicates ordered by inclusion are exactly $c$'s invariants.\\~\\<br>Prove or disprove.<br></latex>	true. pg 188, top right (3)<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra and $\bigcirc$ its nexttime operator. Consider the following statement:\\~\\<br>$\bigcirc$ preserves meets (intersections) of predicates, i.e. $\bigcirc (P \wedge Q) = (\bigcirc P) \wedge (\bigcirc Q)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 188, top right (4)<br><br>Expand the definition of the nexttime operator and use the fact that Pred is a right adjoint, which preserves limits.<br>
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra, $\bigcirc$ its nexttime operator and $\square$ its greatest invariant operator. Consider the following statement:\\~\\<br>For all predicates $P \subseteq X$, $\square P$ is the cofree $\bigcirc$-coalgebra on $P$: i.e., it is the final coalgebra of the operator $S \mapsto P \wedge \bigcirc S$ on $\mathcal P(X)$.\\~\\<br>Prove or disprove.  <br></latex>	true. pg 188, top right (5)<br>
<latex>~\\<br>Give the definitions of the standard temporal logic operators $\bigcirc -$, $\square -$, $\lozenge -$, and $-\mathcal U-$.<br></latex>	pg 188 bottom right
<latex>~\\<br>Consider the following transition system over lists of symbols drawn from the alphabet $\{ M, I, U \}$.\\~\\<br>\begin{mathpar}<br>x I \to x I U <br>\and<br>M x \to M x x<br>\and<br>x III y \to x U y<br>\and<br>x UU y \to xy<br>\end{mathpar}\\~\\<br>Is it the case that $MI \to^* MU$? Use coalgebraic temporal logic to make your argument.<br></latex>	pg 189 left<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$,<br>$$P \subseteq (\cdot \neq x) \Longleftrightarrow \neg P(x)$$<br>Prove or disprove.<br></latex>	true. pg 191.<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a function $f : Y \to X$,<br>$$f^{-1}(\cdot \neq x) = \bigcap_{y \in f^{-1}(x)} (\cdot \neq y)$$<br>Prove or disprove.<br></latex>	true. pg 191 left, lemma 6.4.5 (2)<br>
<latex>~\\<br>For an arbitrary set $X$ and an element $x \in X$ we define a `singleton' and `non-singleton' predicate on $X$ as<br>$$(\cdot = x) = \{ y \in X \mid y = x \} = \{ x \}$$<br>$$(\cdot \neq x) = \{ y \in X \mid y \neq x \} = \neg (\cdot = x)$$<br>Consider the following statement:\\~\\<br>For a Kripke polynomial functor $F$ and a predicate $Q \subseteq F(X)$,<br>$$\underset{\longleftarrow}{\mathit{Pred}}(F)(Q) = \{ x \in X \mid Q \not \subseteq \mathit{Pred}(F)(\cdot \neq x) \}$$<br>Prove or disprove.<br></latex>	true. pg 191, lemma 6.4.5 (3)
<latex>~\\<br>Let $c : X \to FX$ be a coalgebra of a polynomial functor on states. For states $x, x' \in X$, what does $x \to x'$ mean?<br></latex>	pg 191 right, def 6.4.6<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\to^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$,<br>\begin{itemize}<br>\item $\bigcirc P = \{ x \in X \mid \forall x'. x \to x' \Longrightarrow P(x') \}$<br>\item $\square P = \{ x \in X \mid \forall x'. x \longrightarrow^* x' \Rightarrow P(x') \}$<br>\item $\lozenge P = \{ x \in X \mid x \longrightarrow^* x' \wedge P(x') \}$ <br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 191 right, prop 6.4.7 (1)<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\longrightarrow^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For a predicate $P \subseteq X$, the following three statements are equivalent:<br>\begin{itemize}<br>\item $P$ is an invariant<br>\item $\forall x,x' \in X. P(x) \wedge x \to x' \Longrightarrow P(x')$<br>\item $\forall x,x' \in X. P(x) \wedge x \longrightarrow^* x' \Longrightarrow P(x')$<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 192, top left (2)<br>
<latex>~\\<br>Let $\to$ be the transition relation induced by a coalgebra $c : X \to FX$, and let $\longrightarrow^*$ be its reflexive transitive closure. Consider the following statement:\\~\\<br>For arbitrary states $x, x' \in X$, the following are equivalent:<br>\begin{itemize}<br>\item $x \longrightarrow^* x'$<br>\item $P(x) \Rightarrow P(x')$, for all invariants $P \subseteq X$<br>\item $x \in \lozenge(\cdot = x')$, i.e. eventually there is a successor state of $x$ that is equal to $x'$.<br>\end{itemize}<br>Prove or disprove.<br></latex>	true. pg 192, top left (3)<br>
<latex>~\\<br>For a coalgebra $c : X \to FX$ on a polynomial functor $F$, and a predicate $P \subseteq X$ on its carrier $X$, how do we defined the predicate $\underset{\longleftarrow}{\bigcirc} P$? What about the predicate $\underset{\longleftarrow}{\lozenge} P$?<br></latex>	pg 192 right, def 6.4.8<br><br>
<latex>~\\<br>For a functor $F : \mbf{Sets} \to \mbf{Sets}$, what is a \emph{coalgebraic modal logic}?<br></latex>	pg 195 left, def 6.5.1<br>
<latex>~\\<br>Explain how coalgebraic modal logics are a generalization of predicate lifting.<br></latex>	pg 195 bottom left, figure 6.11 and the paragraph below it.<br>
<latex>~<br>Consider a simple coalgebra $c = \langle c_1, c_2 \rangle : X \to X \times X$ involving two transition maps $c_1, c_2 : X \to X$. Define two logical operators $\bigcirc_1$ and $\bigcirc_2$ as\\~\\<br>\begin{mathpar}<br>\bigcirc_1(P) = \{ x \mid c_1(x) \in P \}<br>\and<br>\bigcirc_2(P) = \{ x \mid c_2(x) \in P \}<br>\end{mathpar}\\~\\<br>How can we describe this pair of operators using an $L$-algebra?<br></latex>	pg 195, top right<br>
<latex>~\\<br>Read example 6.5.2, pg 195/196 down to ``Thus we have used four...''. Formulate this logic as an L-algebra.<br></latex>	pg 195/196<br>
<latex>~\\<br>There's a canonical way to define a coalgebraic logic $(L, L \mathcal P \overset{\delta}{\Rightarrow} \mathcal P F)$ when $F$ is the identity functor. There's also a canonical way to define a coalgebraic logic when $F$ is a constant functor. Give these coalgebraic logics. Why do we care?<br></latex>	pg 196 right, def 6.5.3 (1)<br><br>motivation is explained in the paragraph above def 6.5.3<br>
<latex>~\\<br>There's a canonical way to define a coalgebraic logic $(L, L \mathcal P \overset{\delta}{\Rightarrow} \mathcal P F)$ when $F$ is the covariant powerset functor. There's also a canonical way to define a coalgebraic logic when $F$ is the distribution functor. Give these coalgebraic logics. Why do we care?<br></latex>	pg 197, top left (3) and (4).<br><br>for motivation, the paragraph above def 6.5.3, pg 96<br>
<latex>~\\<br>Let $F_1, F_2 : \mbf{Sets} \to \mbf{Sets}$ be two functors, each with a coalgebraic modal logic $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>There is also a coalgebraic modal logic for the composite functor $F_1 \circ F_2$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197 left, lemma 6.5.4 (1)<br>
<latex>~\\<br>Let $(F_i)_{i \in I}$ be an $I$-indexed collection of functors $(F_i)_{i \in I}$ with coalgebraic modal logics $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>There is a coalgebraic modal logic for the coproduct functor $\coprod_{i \in I}F_i$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197 left, lemma 6.5.4 (2)<br>
<latex>~\\<br>Let $(F_i)_{i \in I}$ be an I-indexed collection of functors with logics $(L_i, \delta_i)$. Consider the following statement:\\~\\<br>A product functor $\prod_{i \in I} F_i$ has a canonical coalgebraic modal logic.\\~\\<br>Prove or disprove.<br></latex>	true. pg 197, top right (3)<br>
Give the expression syntax of safeFTS, which involves nonterminals e (expressions), a (property assignment), c (call signature), p (parameter).  	pg  5974 / 5975<br><br>be sure to read the paragraphs below the figure on pg 5975, which tie up some loose ends<br>
Give the safeFTS syntax for statements. This should include non-terminals s (for statements) and u (for variable declarations).<br>	pg 5975, near bottom<br><br>
Give the safeFTS synatax for types. This should include nonterminals T (for types), P (for primitive types), O (for object types), L (for object type literals), and M (for type members).<br>	pg 5976<br>
What does it mean for a safeFTS type to be a <i>callable</i> type?	pg 5976, near bottom.
In Featherweight Typescript, what are Object, Function, String, Number, and Boolean?	pg 5977 near top<br>
Give the safeFTS syntax for declarations. This should include one nonterminal D (interface declaration).<br>	pg 5977, near top<br>
<latex>~\\<br>In FTS, what is an \emph{interface table} $\Sigma$?<br></latex> 	pg 5977<br>
In FTS, what, formally, is a <i>program</i>?	pg 5977.<br>It is an interface table paired with a sequence of statements.
<latex>~\\<br>There are three ``sanity conditions'' that every FTS interface table must satisfy. What are they?<br></latex>	pg 5977<br>
Give the definition of a featherweight typescript <i>tree type</i>.	pg 5979
<latex>~\\<br>Let $\# : I \to \mathbb N$ be an arity with associated endofunctor $F_\#(X) = \coprod_{i \in I} X^{\# i}$ on $\mbf{Sets}$. From a set $V$ of ``variables'', and a collection $(f_i)_{i \in I}$ of function symbols, how do we define the set $\mathcal T_\#(V)$ of terms?<br></latex>	pg 202 left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The set of terms $\mathcal T_{\#}(V)$ built from an arity $\# : I \to \mathbb N$ and a set of variables $V$ is the free monad $F^*_\#$ on $F_\#$ with $\mbf{Alg}(F_\#) \cong \mathcal E \mathcal M(F^*_\#)$,<br>as summarised in <br>\begin{center}<br>\begin{tikzcd}<br>\mbf{Alg}(F_\#) \cong \mathcal E \mathcal M(F^*_\#) \ar[d, "U"] \\<br>\mbf{Sets} \ar[u,"\mathcal T_\#" left, "\dashv" right, bend left = 40] \ar[loop right, "F^*_\# = U \mathcal T_\#" right]<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	true. pg 202 left, prop 6.6.1<br><br>IMPORTANT: the paragraph below the proposition statement gives its intuitive significance: read it!<br><br>
<latex>~\\<br>For a monad $T$ on $\mbf{Sets}$, what does $\mathcal K \ell_{\mathbb N}(T) \hookrightarrow \mathcal K \ell(T)$ denote? What does $\mbf{Law}(T)$ denote? What is a \emph{model} of $T$? <br></latex>	pg 202, bottom right<br>pg 203<br><br><latex>~\<br>REMEMBER: A finite product preserving functor is a functor $F$ such that the arrow<br>$\langle F\pi_1, F\pi_2 \rangle$ has an inverse.<br></latex>
<latex>~\\<br>For a monad $T$, why is the category $\mbf{Law}(T)$ defined as $\mathcal K \ell (T)^{op}$ rather than $\mathcal K \ell (T)$?<br></latex>	pg 203 left, second bullet point.<br>
<latex>~\\<br>The coprojections $\kappa_i : 1 \to m$ in $\mbf{Sets}$ yield copojections $\kappa_i;\eta : 1 \to m$ in $\mathcal K \ell_{\mathbb N}(T)$ (easy exercise). In the category $\mbf{Law}(T)$, what intuitively is this map $m \to 1$? Why? <br></latex>	pg 203, third bullet point<br><br><latex>~\\<br>$\kappa_i$ injects into the $i$th variable and then $\eta$ promotoes it to a term.<br></latex>
<latex>~\\<br>Consider the following claim:<br>Kleisli composition corresponds to substitution in terms.<br>True or false? Explain your answer.<br></latex>	pg 203 left<br>
<latex>~\\<br>How do we express weakening in Kleisli categories (and, relatedly, Lawvere theories)?<br></latex>	pg 203 right, second bullet point.
<latex>~\\<br>Consider the following statement:\\~\\<br>For a monad $T : \mbf{Sets} \to \mbf{Sets}$ there is a faithful functor from Eilenberg-Moore algebras to models:<br>\begin{center}<br>\begin{tikzcd}<br>\mathcal E \mathcal M(T) \ar[r, "\mathcal L"] & \mbf{Model}(T) = [\mbf{Law}(T), \mbf{Sets}]_{fp} \\<br>(T(X) \overset{\alpha}{\to} X) \ar[r,mapsto] & (n \mapsto X^n)<br>\end{tikzcd}<br>\end{center}<br>This $\mathcal L$ is an equivalence if $T$ is a finitary functor.\\~\\<br>The above statement is true. (No need to prove it, the proof is rather long and on pg 204, thm 6.6.3).<br>Just think about the ramifications of the theorem.<br></latex>	pg 204 left, thm 6.6.3<br>
<latex>~\\<br>Assume there is a limit $Z \in \mathbb C$ of the chain starting at the final object $1 \in \mathbb C$.<br>\begin{center}<br>\begin{tikzcd}<br>1 & \ar[l, "!" above] F(1) & \ar[l, "F(!)" above] F^2(1) & \ar[l, "F^2(!)" above] F^3(1) & \ar[l] \cdots & \ar[l] Z<br>\end{tikzcd}<br>\end{center}<br>Consider the following statement:\\~\\<br>If $F$ is continuous (preserves $\omega$-limits), then we get a final coalgebra $Z \overset{\cong}{\longrightarrow} F(Z)$.\\~\\<br>Prove or disprove.<br></latex>	pg 118 left<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In $\mbf{Sets}$, limits of $\omega$-chains exist and are computed as follows. For a chain $(X_{n+1} \overset{f_n}{\to} X_n)_{n \in \mathbb N}$ the limit $Z$ is a subset of the infinite product $\prod_{n \in \mathbb N} X_n$ given by <br>$$Z = \{ (x_0,x_1,x_2,\ldots) \mid \forall n \in \mathbb N. x_n \in X_n \wedge f_n(x_{n+1}) = x_n \}$$<br>Prove or disprove.<br></latex>	true. pg 118, lemma 4.6.2 right<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each exponent polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ -- without powerset -- is continuous.\\~\\<br>Prove or disprove.<br></latex>	true. pg 118 right, lemma 4.6.2 (2)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>Each exponent polynomial functor $F : \mbf{Sets} \to \mbf{Sets}$ has a final coalgebra, which can be computed as the limit of an $\omega$-chain as in (4.13, pg 118 left point 2).\\~\\<br>Prove or disprove.<br></latex>	true. pg 118 right, corollary 4.6.3<br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be \emph{bounded}?<br></latex>	pg 119 left, def 4.6.5<br>
<latex>~\\<br>Recall that deterministic automata are described as coalgebras of the functor $D(X) \doteq X^A \times B$, for suitable sets $A, B$. Consider the following statement:\\~\\<br>The functor $D$ is bounded by the set $\mathcal P(A^\star)$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 119 right, example 4.6.6<br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a bounded functor. Consider the following statement:\\~\\<br>$F$ is \emph{accessible}: there is a set $M$ such that for each set $X$,<br>$$F(X) = \bigcup \{ F(U) \mid U \subseteq X~~\text{and}~~|U|<|M| \}$$<br>Prove or disprove.<br></latex>	true. pg 119, prop 4.6.7<br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be $\emph{accessible}$? \\~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be an accessible functor. Consider the following statement:\\~\\<br>There are sets $A,B$ with a natural transformation:<br>$$(-)^A \times B \overset{\sigma}{\Longrightarrow} F$$<br>where for each set $X \neq \emptyset$ the component $\sigma_X : X^A \times B \to F(X)$ is surjective.\\~\\<br>Prove or disprove.<br></latex>	true. pg 120 left, (2) => (3)<br> 
<latex>~\\<br>The following statement is true:\\~\\<br>Each finite Kripke polynomial functor is bounded.\\~\\<br>Obviously, the proof of this fact is by induction on the structure of the functor. Prove the cases for identity, product, and exponent functors.<br></latex>	pg 120 right, 1st, 3rd, and 5th bullet points.<br>
<latex>~\\<br>The following statement is true:\\~\\<br>Each finite Kripke polynomial functor is bounded.\\~\\<br>Obviously, the proof of this fact is by induction on the structure of the functor. Prove the cases for constant, coproduct, and finite powerset functors.<br></latex>	pg 120 right. second, fouth, and sixth bullet points.<br>
<latex>~\\<br>What does it mean for a functor to be \emph{finitary}? <br></latex>	pg 119, bottom right, below prop 4.6.7<br><br>
<latex>~\\<br>What does it mean for a functor $F : \mbf{Sets} \to \mbf{Sets}$ to be \emph{finitary}?<br></latex>	yes, this was defined in a previous chapter, but it's relevant to this one, so I made a redundant card.<br><br><latex>~\\<br>A functor $F : \mbf{Sets} \to \mbf{Sets}$ is bounded by a set $M$ if for every coalgebra $X \overset{c}{\to} FX$ and every $x \in X$ there exists a subcoalgebra $S \overset{d}{\to} FS$ of $c$ such that $x \in S$ and $|S| < |M|$. $F$ is \emph{finitary} if it is bounded by the set of natural numbers $\mathbb N$.<br></latex>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a functor for which the free monad $F^*$ on $F$ exists. Consider the following statement:\\~\\<br>If $F$ is finitary, then so is $F^*$.\\~\\<br>Prove or disprove.<br></latex>	pg 205 right, lemma 6.6.4<br><br>
<latex>~\\<br>Let $F : \mbf{Sets} \to \mbf{Sets}$ be a functor with free monad $F^*$. Consider the following statement:\\~\\<br>There is a faithful functor from functor algebras to models:<br>$$\mbf{Alg}(F) \overset{\mathcal L}{\longrightarrow} \mbf{Model}{(F^*)} = [\mbf{Law}(F^*),\mbf{Sets}]_{fp}$$<br>This $\mathcal L$ is an equivalence if the functor $F$ is finitary.\\~\\<br>Prove or disprove.<br></latex>	true. pg 205, bottom right, Corollary 6.6.5.<br>In addition to the two previous lemmas, this corollary also depends on Prop 5.4.7 on page 157 bottom right / 158 top left.<br>
<latex>~\\<br>What is an \emph{algebraic specification}?<br></latex>	pg 208 left, "An algebra for..." down to "Our main focus..."<br>
<latex>~\\<br>In algebra terminology, what is a \emph{theorem}?<br></latex>	pg 208 right, "In general an equation..." <br>
Read example 6.7.1 and remark 6.7.2 on pg 208 right<br>	pg 208 right
<latex>~\\<br>What is an \emph{axiom system} for a monad $T$ on $\mbf{Sets}$? What is an axiom system for an endofunctor $F : \mbf{Sets} \to \mbf{Sets}$?<br></latex>	pg 209 right, def 6.7.3<br>
<latex>~\\<br>Let $T$ be a monad on $\mbf{Sets}$ and $\mathcal A$ be an axiom system on $T$. Consider a model of the monad T, i.e. a finite product preserving functor of the form:<br>$$\mbf{Law}(T) = \mathcal K \ell_{\mathbb N} (T)^{op} \overset{M}{\longrightarrow} \mbf{Sets}$$<br>What does it mean for $M$ to \emph{satisfy the axioms} of $\mathcal A$?<br></latex>	pg 209, bottom right, below def 6.7.3.<br>ALSO MAKE SURE TO READ pg 210 top left.<br><br>
<latex>~\\<br>Let $T$ be a monad and $\mathcal A$ a system of axioms on $T$.<br>What category does $\mathcal E \mathcal M(T, \mathcal A)$ denote?<br></latex>	pg 210 left, near top<br>
What do expressions denote in Jacobs' coalgebraic Java semantics?	Its a function from Expr to ExprResult<br>pg 5616<br>
<latex>~\\<br>How does Jacobs define $\mathit{StatResult}(S)$? How does Jacobs define $\mathit{ExprResult}(S,B)$?<br></latex>	pg 5616
<latex>~\\<br>How does Jacobs define $\mathit{StatAbn}(S)$? How does Jacobs define $\mathit{ExprAbn}(S)$?<br></latex>	pg 5616 bottom / 5617 top<br><br>
<latex>~\\<br>How does Jacobs interpret a void method \begin{verbatim}void m(A1 a1, ..., An an){ ... }\end{verbatim}<br>How does Jacobs interpret a non-void method \begin{verbatim}B m(A1 a1, ..., An an){ ... }\end{verbatim}<br></latex>	pg 5617<br>As a state transformer function of the following form<br><latex>~\\<br>void method:\\~\\<br>$S \times A_1 \times \cdots \times A_n \to \mathit{StatResult}(S)$\\~\\<br>Or, coalgebraically, $S \to\mathit{StatResult}(S)^{A_1 \times \cdots \times A_n}$\\~\\<br>non-void:\\~\\<br>$S \times A_1 \times \cdots \times A_n \to \mathit{ExprResult}(S,B)$<br></latex>
<latex>~\\<br>How does Jacobs defines the composition $(s;t) : S \to \mathit{StatResults}(S)$ of two statements $s,t : S \to \mathit{StatResult}(S)$?<br></latex>	pg 5617 (1)<br><br>
<latex>~\\<br>Given the interpretation of statement $\sem{t} : S \times A \to \mathit{StatResult}(S)$, Jacobs defines an \emph{extension} $t^*$. How is $t^*$ defined and what is its purpose?<br></latex>	pg 5618 near top<br>
<latex>~\\<br>How does Jacobs define the functor $J$ aka ``the Java monad''? Explain the motivation behind it. This functor forms a monad; give its unit and multiplication.<br></latex>	motivation starts in section 4 pg 5618<br>defined in definition 1 pg 5619<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The Java monad $J$ is a strong monad.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5619, section 4.1 near bottom. Spills onto pg 5619. You will have to provide some of the details yourself.<br>
<latex>~\\<br>Using a strength map for $J$, there is a standard way to turn functions $f : A \times B \to J(C)$ into functions $f^* : A \times J(B) \to J(C)$. Explain.<br></latex>	pg 5620<br>
Recall that Java has two conjunctions, namely “and” & and “conditional and” &&. The first one (&) always evaluates both arguments, but the second one (&&) only does so if the first argument evaluates to true. The difference is relevant in the presence of side-effects, non-termination, or exceptions. Show how the two conjunction operations can be described concisely via extension w.r.t. the Java monad.	pg 5621, example 2<br>
<latex>~\\<br>Translate Kleisli composition for the Java monad $J$ into a concrete definition (``source code'') in the category $\mbf{Sets}$.<br></latex>	pg 5622
<latex>~\\<br>Let $s : A \to J(A)$ be the interpretation of a Java statement. How does Jacobs define $s^n$ for natural numbers $n$?<br></latex>	pg 5622<br>
<latex>~\\<br>Let $J$ be the Java monad. Show how Jacobs enriches its Kleisli cateogry $\mathcal K \ell(J)$ by giving each homset a partial order. Given $f : A \to B \in \mathcal K \ell(J)_1$, do we necessarily have $f \bullet \bot_{A,A} = \bot_{B,B} \bullet f$? <br></latex>	pg 5622 section 4.2,<br>pg 5623 near top<br>
<latex>~\\<br>What does \emph{cppo} stand for? Is $\mathcal K \ell(J)$ \emph{cppo}-enriched?<br></latex>	complete pointed partial order. yep. pg 5623<br>
<latex>~\\<br>Consider a function $f : A \times B \to J(C)$ and its extension $f^* : A \times J(B) \to J(C)$. Consider the following statement:\\~\\<br>For each $a \in A$, the function $f^*(a, -) : J(B) \to J(C)$ is continuous.\\~\\<br>Prove or disprove.<br></latex>	The lemma is stated on pg 5623, but no proof is given. TODO: complete the proof and transcribe into the answer side of this card.
<latex>~\\<br>Consider a function $f : A \times B \to J(C)$ and its extension $f^* : A \times J(B) \to J(C)$. Consider the following statement:\\~\\<br>If the set $A$ carries an ordering in such a way that for each $b \in B$, the function $f(-,b) : A \to J(C)$ is continuous, then for each $g \in J(B)$, $f^*(-,g) : A \to J(C)$ is also continuous.\\~\\<br>Prove or disprove.<br></latex>	true. lemma is stated on pg 5623, but it isn't proved anywhere in the paper. you should prove it right here.<br>
<latex>~\\<br>How does Jacobs define the following \emph{conditional operator}:<br>\begin{center}<br>\begin{tikzcd}[sep=60] T(bool) \times (T(B)^A)^2 \ar[r,"\mathit{IfThenElse}"] & T(B)^A \end{tikzcd}<br>\end{center}<br></latex>	pg 5625 top.<br>also see lemma 4 (2) on pg 5623<br>
<latex>~\\<br>For a condition $c \in T(\mathit{bool})$ and a statement $s : A \to T(A)$, how does Jacobs define the semantics of a while statement $\mathit{while}(c)(s) : A \to T(A)$?<br></latex>	pg 5625, definition 6<br><br>
<latex>~\\<br>How does Jacobs define the functions $N(c,s),E(c,s) : A \to \mathbb N^S$? What is the purpose of these functions?<br></latex>	pg 5626. read the entirety of the page<br>
<latex>~\\<br>Give Jacobs ``operational'' definition (it's still denotationall, really) of the semantics of while statements.<br></latex>	pg 5626, prop 7<br>
<latex>~\\<br>How does Jacobs define the interpretation of recursive statements $H : T(B)^A \to T(B)^A$? Jacobs provides an alternative ``operational'' version of the denotational semantics of recursive statements, using an auxiliary function $U : A \to \mathbb N^S$. Explain.<br></latex>	pg 5628, definition 8 and the paragraph below it.<br>
<latex>~\\<br>Describe the two modal operators for the coalgebraic Java functor $L$.<br></latex>	pg 5629, Ns and Es<br>
<latex>~\\<br>Describe and define the three observer predicates in the modal logic for Java's coalgebra functor $L$.<br></latex>	pg 5629<br>
<latex>~\<br>What does it mean for an assertion to be \emph{affirmative}? What does it mea for an assertion to be \emph{refutative}?<br></latex>	pg 5694 near bottom<br>pg 5695 near top<br><br>
<latex>~\\<br>There is something wrong with the way that the term \emph{irrefutable} is used in common parlance. Explain.<br></latex>	pg 5695 near top.<br>
<latex>~\\<br>Is the assertion ``some babies have plaid eyes'' refutative? Why or why not?<br></latex>	pg 5695<br>
<latex>~\\<br>Suppose we know someone named Smith and have the ability to meet up with him. Is the statement ``Smith is exactly six feet tall'' an affirmative statement? It it refutative?<br></latex>	pg 5695, near bottom<br>
<latex>~\\<br>For what assertions $P$ is the assertion $\neg P$ affirmative?<br></latex>	pg 5696<br>
<latex>~\\<br>Let $P$ and $Q$ be propositions. Under what conditions is $P \vee Q$ affirmative?<br></latex>	pg 5696, near bottom<br>*also read pg 5697 top, which contains some interesting follow up points*<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>An infinite conjunction of affirmative assertions is affirmative.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! pg 5697, section 3<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A finite conjunction of affirmative assertions is affirmative.\\~\\<br>true or false?<br></latex>	pg 5697, section 3<br>
<latex>~\\<br>Is the assertion $\mathit{true}$ affirmative? Is the assertion $\emph{false}$ affirmative? Why or why not?<br></latex>	pg 5697, section 4<br>
<latex>~\\<br>Do we include the $\emph{implication}$ logical connective in our logic of affirmable assertions? Why or why not?<br></latex>	pg 5698<br>
<latex>~\\<br>Suppose that $P$ is affirmative, and for a finite family $(Q_i)_{i \in I}$, each $Q_i$ is affirmative. Intuitively, should the distributive law $P \vee \bigwedge_{i \in I} Q_i \Leftrightarrow \bigwedge_{i \in I} (P \vee Q_i)$ hold in our logic of affirmable assertions?<br></latex>	pg 5698<br>
<latex>~\\<br>Does the forgetful functor from $\mbf{Posets}$ to $\mbf{Preorders}$ have a left adjoint?<br></latex>	yes. pg 5702, right above "meet and join"<br>
<latex>~\\<br>What does it mean for a lattice to be \emph{distributive}?<br></latex>	pg 5707, def 3.4.3<br>
<latex>~\\<br>Let $U$ be an infinite set. Is $\mathcal P_{fin} U$ a distributive bounded lattice? Why or why not?<br></latex>	it's not bounded because the nullary join U is an infinite set.<br>pg 5708, example 3.4.8<br>
<latex>~\\<br>What is a \emph{frame}? What is the intuitive motivation behind the definition of \emph{frame}?<br></latex>	pg 5709, top paragraph & definition 3.5.1
<latex>~\\<br>What does it mean for a function between two frames to be a $\emph{frame homomorphism}$?<br></latex>	pg 5709<br>
<latex>~\\<br>What is \emph{The Sierpinski Frame}?<br></latex>	pg 5710, near top<br>
<latex>~\\<br>What does it mean for some subset of a frame be a \emph{subframe}? In particular consider a subframe of a powerset: are such subframes known by a more popular name in mathematics?  <br></latex>	yes. they are topologies.<br>pg 5710<br>
<latex>~\\<br>Let $P$ be a poset. What is the \emph{Alexandrov topology} on $P$?<br></latex>	pg 5710<br>
<latex>~\\<br>Let $X$ be a topological space and $S \subseteq X$. How do we define $\mathit{Int}(S)$?<br></latex>	pg 5711<br>
<latex><br>If $x \in N \subseteq X$ then what does it mean for $N$ to be a \emph{neighborhood} of $x$?<br></latex>	pg 5711, above section 3.7<br><br>
Read section 3.7, starting on pg 5711 and continuing down to the top of pg 5713<br>	pg 5711<br>
<latex>~\\<br>If $l = l_1 l_2 \ldots l_n$ is a finite list of bits then let $\mbf{starts}~l$ denote the assertion $s_1=l_1 \wedge s_2=l_2 \wedge \cdots \wedge s_n=l_n$. The following statement is true, and this should be clear with a bit of thought:\\~\\<br>every observation is a disjunction of observations $\mbf{starts}~l$ where $l$ is a finite list of bits\\~\\<br>See pg 5713<br></latex>	pg 5713<br>
<latex>~\\<br>Let $l$ and $m$ be bitstrings. Is it the case that if $l \sqsubseteq m$ then $\mbf{starts}~l \geq \mbf{starts}~m$?<br></latex>	yes. pg 5713, lemma 3.7.2<br>
Read the last paragraph of pg 5714, "We can argue this using..."<br>	pg 5714<br>
<latex>~\\<br>What does Vickers use $\Omega 2^{*\omega}$ to denote?<br></latex>	pg 5715<br>
Read the section titled "Different physical assumptions", starting on pg 5715 and going to pg 5716.<br>	pg 5715<br>
Read the "Flat domains" section, starting on pg 5716 and continuing to pg 5717.<br>	pg 5716<br>
Read "function spaces", starting on pg 5717 and continuing to 5719.<br>	pg 5717<br>
Read section 3.8, pgs 5719-5720<br>	pg 5719<br>
Give the form of the subbasic observations for Vickers' frame of real number assertions.	pg 5720, tio paragraph of "The real line"
<latex>~\\<br>Translate $x \vDash (q \pm \varepsilon)$ into an inequality. Does the translation use weak or strict inequalities? Why?<br></latex>	pg 5720
<latex>~\\<br>Let $S = \{ (0 \pm \varepsilon) \mid \varepsilon > 0 \}$. What is $\bigcap S$? What is $\bigwedge S$? <br></latex>	pg 5723 near top, the last paragraph on the above page (5722) puts this into context<br>
<latex>~\\<br>Let $A$ be a bounded lattice. What does it mean for $A$ to be a \emph{Heyting lattice}? What does it mean for a function between Heyting algebras to be a \emph{Heyting algebra morphism}? What is a \emph{complete Heyting algebra}? What is a \emph{complete Heyting algebra morphism}?<br></latex>	it means it has exponentials<br>pg 5723, def 3.10.1<br><br>
<latex>~\\<br>Let $A$ be a bounded lattice. Consider the following statement:\\~\\ <br>$A$ is a frame iff it is a cHa.\\~\\<br>Prove or disprove.<br></latex>	pg 5723, prop 3.10.2<br>
How does Vickers define the term <i>semilattice</i>?	He defines it as what I would call a bounded semilattice: a poset with all finite meets (or joins).<br>pg 5726<br>
<latex>~\\<br>Give the four algebraic laws of bounded semilattices.<br></latex>	pg 5726, prop 4.1.2<br>
<latex>~\\<br>What is the algebraic definition of a semilattice homomorphism?<br></latex>	pg 5727 top<br>
Intuitively, give the four steps of <i>presenting</i> a frame.<br>	pg 5727, section 4.2 Generators and Relations,<br>spills to pg 5278 where the term presentation is defined<br><br>
<latex>~\\<br>What, concretely, is the frame $\mathit{Fr}\langle~\mid~\rangle$, with no generators and no relations?<br></latex>	pg 5728, example 4.2.1<br>
<latex>~\\<br>What, concretely, is the frame $\mathit{Fr}\langle a, b \mid~\rangle$? Draw a Hasse diagram.<br></latex>	pg 5728, example 4.2.2, spills to pg 5729<br><br>
<latex>~\\<br>What does it mean for a presentation of a frame to be \emph{free}?<br></latex>	pg 5729, def 4.2.3<br>
<latex>~\\<br>Let $\mathbb T$ denote an algebraic theory (e.g., bounded semilattices, frames, etc.). What does the notation $\mathbb T \langle \mathit{generators} \mid \mathit{relations} \rangle$ mean?<br></latex>	pg 5730, near top, "In general..."<br><br>
Read definition 4.3.1 on pg 5730.<br>	pg 5730<br>
<latex>~\\<br>Provide an algebraic rather than an order-theoretic definition of \emph{frame}.<br></latex>	pg 5731, example (ii) near top.<br>
<latex>~\\<br>Let $\mathbb T \langle G \mid R \rangle$ be a presentation. What is a \emph{model} for this presentation?<br></latex>	pg 5731, def 4.3.3<br><latex>~\\<br>Here is a more categorical take: (This is wrong actually TG should be T*G, the free monad on T at G; so this situation is actually more complicated than what is described below. TODO: correct the below explanation) <br>\begin{itemize}<br>\item We have a $\mathbb T$-algebra $TA \overset{\alpha}{\to} A$. (Note that this is not just any $T$ algebra, but one that respects the equations of the theory $\mathbb T$.)<br>\item We have a function $\sem{\cdot} : G \to A$ (Instead of using the notation $\sem{\cdot}$, we'll call it $h : G \to A$ for notational convenience.)<br>\item To lift $h : G \to A$ to terms, we apply the functor $T$:~~~$Th : TG \to TA$.<br>\item To evaluate the resulting terms, we post-compose with $\alpha$:~~~$(Th;\alpha) : TG \to A$.<br>\end{itemize}<br>Categorically, the relation $R$ is a mono $R \rightarrowtail TG \times TG$.<br>Now, in order for $\alpha$ to truly be a model, it must respect the equations of $R$, i.e. we have a unique arrow \begin{tikzcd} R \ar[r, dashed] & A \end{tikzcd} such that:\\~\\<br>\begin{tikzcd}[sep=60]<br>R \ar[d,tail] \ar[r, dashed] & A \ar[d, tail, "\langle \mathit{id} \text{,} \mathit{id} \rangle"] \\<br>TG \times TG \ar[r,"(Th;\alpha) \times (Th;\alpha)" below] & A \times A<br>\end{tikzcd}<br></latex><br><br>
<latex>~\\<br>Let $\mathbb T$ be an algebraic theory. Formally, what does it mean for a $\mathbb T$-algebra to be \emph{presented} by a presentation $\mathbb T \langle \text{generators} \mid \text{relations} \rangle$?<br></latex>	pg 5732, def 4.3.4. Also read the below text. You might want to make your own version of the definition. I think it is a bit sloppy.<br><br>
<latex>~\\<br>Let $\mathbb T$ be a \emph{finitary} alebraic theory, i.e. one in which<br>\begin{itemize}<br>\item the operators form a set (not a proper class), and<br>\item each operator has finite arity<br>\end{itemize}<br>Consider the following statement:\\~\\<br>Every presentation $\mathbb T \langle G \mid R \rangle$ presents a $\mathbb T$-algebra.\\~\\<br>Prove or disprove.<br></latex>	pg 5733, theorem 4.3.6<br><br>
<latex>~\\<br>Let $\mathbb T$ be a finitary algebraic theory, and let $A$ be a $\mathbb T$-algebra. Consider the following statement:\\~\\<br>$A$ has a presentation.\\~\\<br>Prove or disprove.<br></latex>	pg 5733
<latex>~\\<br>Let $S$ be a semilattice. What is the \emph{universal distributive lattice} $L$ over $S$?<br></latex><br>	pg 5733 bottom / pg 5734 top<br><br>
<latex>~\\<br>Let $A$ be a frame; we call its elements \emph{opens}. Let $X$ be a set; we call its elements points. Let $\vDash$ be a subset of $X \times A$, writing $x \vDash a$ iff $(x,a) \in~\vDash$. What does it mean for $X$ and $A$, equipped with $\vDash$, to be a \emph{topological system}?<br></latex>	pg 5740, def 5.1.1<br>
<latex>~\\<br>Let $D = (X,A)$ be a toplogical system. What does $\mathit{pt}~D$ denote? What does $\Omega D$ denote? <br></latex>	pg 5740m below def 5.1.1<br><br>
Read example 4.1.2 on pg 5740 and example 5.1.3 on pg 5741.<br>Read the entirety of pg 5741.<br>Read example 5.1.4.<br>Read examples 5.1.5 and 5.1.6 on pg 5742.<br><br><br>	pg 5740-5742<br>
Read section 5.2, starting on pg 5742, down to def 5.2.1 on pg 5743.<br>	pg 5742-5743<br>
<latex>~\\<br>Let $D$ and $E$ be topological systems. What is a \emph{continuous map} from $D$ to $E$?<br></latex>	pg 5743, def 5.2.1<br>
Read example 5.2.2 on pg 5743-5744 (note that this demonstrates Vickers' notion of a <i>continuous function</i> defined above).<br>	pg 5743, example 5.2.2<br><br>
<latex>~\\<br>Do topological systems and continuous maps between topological systems form a category? Why or why not?<br></latex>	they do. see def 5.2.3 on pg 5744.<br>
<latex>~\\<br>What does it mean for a continuous map $f : D \to E$ to be a homeomorphism?<br></latex>	categorically: it's just an isomorphism in the category of topological systems and continuous functions<br>pg 5744, def 5.2.4<br>
<latex>~\\<br>Let $a$ be an open in a topological system $D$. What is $a$'s \emph{extent} in $D$? <br></latex>	pg 5747, def 5.3.3<br>
<latex>~\\<br>Let $D$ be a topological system. What is the \emph{spatialization} $\mathit{Spat}~D$ of $D$?<br></latex>	pg 5747, theorem 5.3.4 (i) and also read the paragraph directly above this definition.
<latex>~\\<br>Consider the following statement:\\~\\<br>There is a natural continuous map $e : \mathit{Spat}~D \to D$ defined by <br>\begin{mathpar}<br>\mathit{pt}~e(x)=x \and \Omega e(a) = \text{extent of }a\text{ in D}<br>\end{mathpar}<br>such that any other continuous map \underline{from a topological space E} into $D$ factors uniquely via $e$:<br>\begin{center}<br>\begin{tikzcd}<br>\mathit{Spat}~D \ar[r, "e" above] & D \\<br>E \ar[u, dashed, "g" left] \ar[ur, "~f=g;e" right] & <br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 5747, theorem 5.3.4 (ii) and (iii), proof on next page<br><br>
<latex>~\\<br>What does it mean for a topological system to be \emph{spatial}?<br></latex>	it is homeomorphic to some topological space.<br>pg 5748, paragraph above prop 5.3.5<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The following are equivalent for a toplogical system $D$:<br>\begin{enumerate}<br>\item $D$ is spatial<br>\item $\forall a,b \in \Omega D. ((\forall x \in \mathit{pt}~D. x \vDash a \leftrightarrow x \vDash b) \to a = b)$<br>\item $\forall a,b \in \Omega D. ((\forall x \in \mathit{pt}~D. x \vDash a \to x \vDash b) \to a \leq b)$<br>\end{enumerate}<br>Prove or disprove.<br></latex>	true. pg 5748, prop 5.3.5<br>todo: add impostor?<br>
<latex>~\\<br>Let $A$ be a frame. What is the \emph{locale} corresponding to $A$? What does it mean for a topological system to be \emph{localic}?<br></latex>	pg 5749, def 5.4.1. <br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>The continuous maps from $D$ to $E$ are equivalent to frame homomorphisms from $\Omega E$ to $\Omega D$.\\~\\<br>Prove or disprove.<br></latex>	pg 5749, prop 5.4.2<br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>The continuous maps from $D$ to $E$ are equivalent to frame homomorphisms from $\Omega D$ to $\Omega E$.\\~\\<br>Prove or disprove.<br></latex>	IMPOSTOR! pg 5749, prop 5.4.2<br>
<latex>~\\<br>Let $D$ be a toplogical system. What is its \emph{localification}?<br></latex>	pg 5750, theorem 5.4.3 (i)<br>
<latex>~\\<br>Let $D$ be a toplogical system. Consider the following statements:\\~\\<br>(i) There is a natural continuous map, the localification map $p : D \to \mathit{Loc}~D$ defined by<br>\begin{mathpar}<br>pt~pt(x)(a) = \mbf{true}~~\mathit{iff}~~x \vDash a<br>\and<br>\Omega p(a) = a<br>\end{mathpar}<br>(ii) Any other continuous map from $D$ to a locale $E$ factors uniquely via $p$:<br>\begin{center}<br>\begin{tikzcd}<br>D \ar[dr, "f = p;g~~~" below] \ar[r, "p"] & \mathit{Loc}~D \ar[d,"g" right, dashed] \\<br>                                                    & E<br>\end{tikzcd}<br>\end{center}<br>Prove or disprove.<br></latex>	pg 5750, theorem 5.4.3 (ii) and (iii)<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$ be upper closed.\\~\\<br>\begin{enumerate}<br>\item What does it mean for $F$ to be a \emph{filter}?<br>\item What does it mean for $F$ to be \emph{prime}?<br>\end{enumerate}<br></latex>	pg 5752, def 5.4.5 (i) and (ii)<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$ be upper closed.\\~\\<br>\begin{enumerate}<br>\item What does it mean for $F$ to be a \emph{completely prime}?<br>\item What does it mean for an element $p \in A$ to be \emph{prime}?<br>\end{enumerate}<br></latex>	pg 5752<br>
<latex>~\\<br>Let $A$ be a frame and let $F \subseteq A$. Consider the following statement:\\~\\<br>$F$ is the true-kernel of a point of the locale of $A$ iff $F$ is a completely prime filter.\\~\\<br>Prove or disprove.<br></latex>	pg 5752, lemma 5.4.6 (i)<br><br><latex>~\\<br>It's not proven in the book, but I can prove it right here.\\~\\<br>$(\Leftarrow)$ Assume that $F$ is a completely prime filter. Consider the function $h : A \to \mbf{2}$ defined such that $h(a) \Leftrightarrow a \in F$. Then $h$ is a frame homomorphism:\\~\\ First, let $S \subseteq A$. Then $h(\bigvee S) \Leftrightarrow \bigvee S \in F \Leftrightarrow \exists s \in S. s \in F \Leftrightarrow \bigvee_{s \in S} h(s)$.\\~\\<br>Second, if $S \subseteq_{fin} A$ then $h(\bigwedge S) \Leftrightarrow \underline{\bigwedge S \in F \Leftrightarrow \forall s \in S. s \in F} \Leftrightarrow \bigwedge_{s \in S} h(s)$.\\~\\<br>The underlined part above can be justified by noting that if $s \not \in F$ for some $s \in S$ then $\bigwedge S \not \in F$, since $F$ is upward closed.\\~\\<br>$(\Rightarrow)$ Let $F$ be the true kernel of a point $h$ of a locale.\\~\\<br>Let $x \in F$. Then $h(x) = true$. Then for all $y$ such that $x \leq y$ we have $h(y) = h(x \vee y) = h(x) \vee h(y) = \mathit{true} \vee h(y) = true$. So $F$ is upward closed.\\~\\<br>Let $x,y \in F$. Then $h(x \wedge y) = h(x) \wedge h(y) = \mathit{true} \wedge \mathit{true} = \mathit{true}$. Hence $F$ is closed under finite meets.\\~\\<br>Let $S \subseteq F$ with $\bigvee S \in F$. Then $h(\bigvee S) = true \therefore \bigvee_{s \in S} h(s) = \mathit{true} \therefore \exists s \in S. h(s) = \mathit{true} \therefore \exists s \in S. s \in F$. Hence $F$ is inaccessible via arbitrary joins.<br></latex><br>
<latex>~\\<br>Let $A$ be a frame and let $I \subseteq A$. Consider the following statement:\\~\\<br>$I$ is the $\mbf{false}$-kernel of a point of the locale of $A$ iff $I = \downarrow p$ for some prime element $p$ of $A$.\\~\\<br>Prove or disprove.<br></latex>	pg 5752, lemma 5.4.6 (ii)<br><br>todo: add impostor?
<latex>~\\<br>There are three equivalent ways of describing the points of a locale. What are they?<br></latex>	pg 5752
<latex>~\\<br>Consider the functors\\~\\<br>$\mathit{Loc} : \text{Topological spaces} \to \text{Locales}$\\<br>$\mathit{Spat} : \text{Locales} \to \text{Topological spaces}$\\~\\<br>Is it true that $\mathit{Loc} \dashv \mathit{Spat}$?<br></latex>	pg 5753, near top<br><br><latex>~\\<br>First, we must define the functorial aspects of $\mathit{Spat}$ and $\mathit{Loc}$. We start with $\mathit{Spat}$:\\~\\<br>$\mathit{pt}~\mathit{Spat}~f : \mathit{pt}~X \to \mathit{pt}~Y = \mathit{pt}~f$\\<br>$\Omega~\mathit{Spat}~f : \mathcal P(\mathit{pt}~Y) \to \mathcal P(\mathit{pt}~X) = \mathit{pt}~ f^{-1}$\\~\\<br>It's not hard to see that $f^{-1}$ is a frame homomorphism (exercise). Also, $\mathit{pt}~f(x) \in A \leftrightarrow x \in \Omega \mathit{Spat} (A) = f^{-1}(A)$.\\~\\<br>Now, we define the functorial aspects of $\mathit{Loc}$.\\~\\<br>$\mathit{Loc}~\matht{pt}~f : \mathit{pt}~\mathit{Loc}~X \to \mathit{pt}~\mathit{Loc}~Y$\\<br>$\mathit{Loc}~\mathit{pt}~f(h) \doteq (\Omega f);h$\\~\\<br>$\mathit{Loc}~\Omega f : \Omega~\mathit{Loc}~Y \to \Omega~\mathit{Loc}~X$\\<br>$\mathit{Loc}~\Omega f \doteq \Omega f$\\~\\<br>It's not hard to see that $\mathit{Loc}~\mathit{pt}~f(h) \vDash a \leftrightarrow h \vDash \Omega f(a)$.<br>TODO: show the adjunction, unit, counit, etc.<br></latex>
Read page 5753, starting at "The point of this is that..." down to the bottom.<br>	<br>
<latex>~\\<br>Consider the following statement, from Vickers:\\~\\<br>\emph{A proof of spatiality of a locale shows completeness of a logical system.} \\~\\<br>Elaborate on what is meant by this.<br></latex>	teh quote is near the bottom of pg 5753. the explanation is in the two paragraphs directly above it.
<latex>~\\<br>Let $X$ be a toplogical space. What does it mean for a closed set $F \subseteq \mathit{pt}~X$ to be \emph{irreducible}?<br></latex>	pg 5754, near def 5.5.1
<latex>~\\<br>If $F$ is a closed set and $x \in \mathit{pt}~X$, what does it mean for $x$ to be a \emph{generic point} for $F$?<br></latex>	pg 5754, def 5.5.1, part 2<br><br><br>
<latex>~\\<br>Let $X$ be a topological space. What does it mean for $X$ to be \emph{sober}?<br></latex>	pg 5754, def 5.5.1<br>
<latex>~\\<br>Consider the following statements:<br>\begin{itemize}<br>\item If $X$ is a toplogical space, then $\mathit{Loc}~X$ is spatial (and localic)<br>\item If $D$ is a locale, then $\mathit{Spat}~D$ is localic (and spatial).<br>\end{itemize}<br>Prove or disprove.<br></latex>	pg 5755, prop 5.5.4<br>
<latex>~\\<br>Let $D$ be a toplogical space, and $Y \subseteq \mathit{pt}~D$. What is the \emph{subspace topology} on $Y$?<br></latex>	pg 5758, def 6.1.1<br>read the paragraph above that definition: it is helpful<br><br>
<latex>~\\<br>Let $D$ and $E$ be locales. Consider the following statement:\\~\\<br>If a continuous map $i : E \to D$ has $\Omega i$ surjective then $\mathit{pt}~i$ is injective.\\~\\<br>Prove or disprove.<br></latex>	pg 5758, near bottom<br><br>
<latex>~\\<br>What does it mean for a continuous map $i$ to be an \emph{embedding}?<br></latex>	pg 5759, def 6.1.2 near top.<br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems. How do we define their \emph{toplogical sum} $\Sigma_{\lambda} D_{\lambda}$? Provide motivation for this definition.<br></latex>	pg 5765, def 6.3.1 and the text above it.<br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems and let $\mu \in \lambda$. How do we define the $\mu$-\emph{injection} continuous map $i_{\mu} : D_{\mu} \to \Sigma_{\lambda} D_{\lambda}$?<br>Consider the following statement:\\~\\<br>$\Sigma_\lambda D_{\lambda}$ is a topological system, and the maps $i_{\mu}$ are embeddings.\\~\\<br>Prove or disprove.<br></latex>	pg 5766, theorem 6.3.2 (i) (also see the text directly above)<br><br>
<latex>~\\<br>Let $\{ D_{\lambda} \}$ be a family of topological systems. Consider the following statement:\\~\\<br>The topological sum $\Sigma_{\lambda} D_\lambda$, as defined by Vickers, is a categorical coproduct.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5766, theorem 6.3.2 (ii)<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>The topological sum of spatial systems is still spatial.\\~\\<br>Prove or disprove.<br></latex>	pg 5766, prop 6.3.3 (i) near bottom.<br><br>
<latex>~\\<br>Consider the following statement:\\~\\<br>A topological sum of localic systems is still localic.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5767, point (ii) at top of page<br>
<latex>~\\<br>What is the initial object of the category $\textbf{topological systems}$?<br></latex>	pg 5767, bottom paragraph<br>
<latex>~\\<br>Let $D$ be a topological system. Consider the following statement:\\~\\<br>Up to homeomorphism, decompositions $D \cong E + E'$ correspond to complementary pairs of opens of $D$, i.e. pairs $a,b \in \Omega D$ such that $a \wedge b = \mbf{false}$ and $a \vee b = \mbf{true}$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5768, prop 6.3.4.<br>
Read pg 5768, "Topological products", down to def 6.4.1 on pg 5769<br>	pg 5768<br>
<latex>~\\<br>Let $A$ and $B$ be two frames. How do we define their \emph{tensor product}?<br></latex>	pg 5770, def 6.4.1<br><br>
<latex>~\\<br>Recall that $A \otimes B$ denotes the tensor product of frames $A$ and $B$. Define <br>$$i_a(a) \doteq a \otimes \mbf{true}$$<br>and<br>$$i_b(b) \doteq \mbf{true} \otimes b$$<br>Consider the following statement:\\~\\<br>Let $f : A \to C$ and $g : B \to C$ be frame homomorphisms. Then there is a unique frame homomorphism $h : A \otimes B \to C$ such that $f = i_A;h$ and $g = i_B;h$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5770, prop 6.4.2<br>todo: add impostor?
Read lemma 6.4.3 on bottom of pg 5770 (no need to prove)<br>	<br>
<latex>~\\<br>Let $D$ and $E$ be toplogical systems. How do we define the \emph{topological product} $D \times E$ of $D$ and $E$?<br></latex>	pg 5771, def 6.4.4<br><br>
<latex>~\\<br>Let $D$ and $E$ be topological systems and let $D \times E$ be the product system of $D$ and $E$. How do we define the projections $p : D \times E \to D$ and $q : D \times E \to E$.<br></latex>	pg 5771, below def 6.4.4
<latex>~\\<br>Let $D$ and $E$ be topological systems and $p : D \times E \to D$ and $q : D \times E \to E$ its projection maps. Consider the following statement:\\~\\<br>$D \times E$ is a topological system, and $p$ and $q$ are continuous.\\~\\<br>Prove or disprove.<br></latex>	pg 5771
<latex>~\\<br>Let $D$ and $E$ be topological systems, $D \times E$ their product system, and $p : D \times E \to D$ and $q : D \times E \to E$ its projections. Consider the following statement:\\~\\<br>If $f : F \to D$ and $g : F \to E$ are continuous maps, then there is a unique continuous map $h : F \to D \times E$ such that $f = h;p$ and $g = h;q$.\\~\\<br>Prove or disprove.<br></latex>	pg 5771, theorem 6.4.5 (ii)<br><br>
<latex>~\\<br>Let $x$ and $y$ be two points. What does it mean for $y$ to \emph{specialize} $x$?<br></latex>	pg 5777, def 7.1.1<br>
<latex>~\\<br>Let $D$ be the system $2^{*\omega}$: points are finite and infinite sequences of bits. Consider the following statement:\\~\\<br>For sequences $s$ and $t$, $s \sqsubseteq t$ iff $s$ is a prefix of $t$.\\~\\<br>Prove or disprove.<br></latex>	true. pg 5777, example 7.1.2<br>
Read pg 5778, starting at "Now the finite sequences occur..."	pg 5778<br>
<latex>~\\<br>Consider the following statement:\\~\\<br>In any Hausdorff topological space, $x \sqsubseteq y$ iff $x = y$.\\~\\<br>Prove or disprove.<br></latex>	pg 5779<br>
<latex>~\\<br>What does it mean for a topological system to be $T_0$?<br></latex>	pg 5770. def 7.1.4<br>
<latex>~\\<br>Give two examples of topological systems that are \emph{not} $T_0$.<br></latex>	pg 5779<br>
<latex>~\\<br>Let $D$ be a toplogical system. What is the $T_0$-ification of $D$?<br></latex>	pg 5780, second point under "Some examples are --"<br>
<latex>~\\<br>What does it mean for a topological system to be $T_1$? $T_2$?<br></latex>	pg 5780, second and third points under "some examples are"<br>
